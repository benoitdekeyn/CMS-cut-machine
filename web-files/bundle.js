/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/javascript-lp-solver/src/External/lpsolve/Reformat.js":
/*!****************************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/External/lpsolve/Reformat.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n/*jshint -W083 */\r\n\r\n /*************************************************************\r\n * Method: to_JSON\r\n * Scope: Public:\r\n * Agruments: input: Whatever the user gives us\r\n * Purpose: Convert an unfriendly formatted LP\r\n *          into something that our library can\r\n *          work with\r\n **************************************************************/\r\nfunction to_JSON(input){\r\n    var rxo = {\r\n        /* jshint ignore:start */\r\n        \"is_blank\": /^\\W{0,}$/,\r\n        \"is_objective\": /(max|min)(imize){0,}\\:/i,\r\n        \"is_int\": /^(?!\\/\\*)\\W{0,}int/i,\r\n        \"is_bin\": /^(?!\\/\\*)\\W{0,}bin/i,\r\n        \"is_constraint\": /(\\>|\\<){0,}\\=/i,\r\n        \"is_unrestricted\": /^\\S{0,}unrestricted/i,\r\n        \"parse_lhs\":  /(\\-|\\+){0,1}\\s{0,1}\\d{0,}\\.{0,}\\d{0,}\\s{0,}[A-Za-z]\\S{0,}/gi,\r\n        \"parse_rhs\": /(\\-|\\+){0,1}\\d{1,}\\.{0,}\\d{0,}\\W{0,}\\;{0,1}$/i,\r\n        \"parse_dir\": /(\\>|\\<){0,}\\=/gi,\r\n        \"parse_int\": /[^\\s|^\\,]+/gi,\r\n        \"parse_bin\": /[^\\s|^\\,]+/gi,\r\n        \"get_num\": /(\\-|\\+){0,1}(\\W|^)\\d+\\.{0,1}\\d{0,}/g,\r\n        \"get_word\": /[A-Za-z].*/\r\n        /* jshint ignore:end */\r\n    },\r\n    model = {\r\n        \"opType\": \"\",\r\n        \"optimize\": \"_obj\",\r\n        \"constraints\": {},\r\n        \"variables\": {}\r\n    },\r\n    constraints = {\r\n        \">=\": \"min\",\r\n        \"<=\": \"max\",\r\n        \"=\": \"equal\"\r\n    },\r\n    tmp = \"\", tst = 0, ary = null, hldr = \"\", hldr2 = \"\",\r\n    constraint = \"\", rhs = 0;\r\n\r\n    // Handle input if its coming\r\n    // to us as a hard string\r\n    // instead of as an array of\r\n    // strings\r\n    if(typeof input === \"string\"){\r\n        input = input.split(\"\\n\");\r\n    }\r\n\r\n    // Start iterating over the rows\r\n    // to see what all we have\r\n    for(var i = 0; i < input.length; i++){\r\n\r\n        constraint = \"__\" + i;\r\n\r\n        // Get the string we're working with\r\n        tmp = input[i];\r\n\r\n        // Set the test = 0\r\n        tst = 0;\r\n\r\n        // Reset the array\r\n        ary = null;\r\n\r\n        // Test to see if we're the objective\r\n        if(rxo.is_objective.test(tmp)){\r\n            // Set up in model the opType\r\n            model.opType = tmp.match(/(max|min)/gi)[0];\r\n\r\n            // Pull apart lhs\r\n            ary = tmp.match(rxo.parse_lhs).map(function(d){\r\n                return d.replace(/\\s+/,\"\");\r\n            }).slice(1);\r\n\r\n\r\n\r\n            // *** STEP 1 *** ///\r\n            // Get the variables out\r\n            ary.forEach(function(d){\r\n\r\n                // Get the number if its there\r\n                hldr = d.match(rxo.get_num);\r\n\r\n                // If it isn't a number, it might\r\n                // be a standalone variable\r\n                if(hldr === null){\r\n                    if(d.substr(0,1) === \"-\"){\r\n                        hldr = -1;\r\n                    } else {\r\n                        hldr = 1;\r\n                    }\r\n                } else {\r\n                    hldr = hldr[0];\r\n                }\r\n\r\n                hldr = parseFloat(hldr);\r\n\r\n                // Get the variable type\r\n                hldr2 = d.match(rxo.get_word)[0].replace(/\\;$/,\"\");\r\n\r\n                // Make sure the variable is in the model\r\n                model.variables[hldr2] = model.variables[hldr2] || {};\r\n                model.variables[hldr2]._obj = hldr;\r\n\r\n            });\r\n        ////////////////////////////////////\r\n        }else if(rxo.is_int.test(tmp)){\r\n            // Get the array of ints\r\n            ary = tmp.match(rxo.parse_int).slice(1);\r\n\r\n            // Since we have an int, our model should too\r\n            model.ints = model.ints || {};\r\n\r\n            ary.forEach(function(d){\r\n                d = d.replace(\";\",\"\");\r\n                model.ints[d] = 1;\r\n            });\r\n        ////////////////////////////////////\r\n        } else if(rxo.is_bin.test(tmp)){\r\n            // Get the array of bins\r\n            ary = tmp.match(rxo.parse_bin).slice(1);\r\n\r\n            // Since we have an binary, our model should too\r\n            model.binaries = model.binaries || {};\r\n\r\n            ary.forEach(function(d){\r\n                d = d.replace(\";\",\"\");\r\n                model.binaries[d] = 1;\r\n            });\r\n        ////////////////////////////////////\r\n        } else if(rxo.is_constraint.test(tmp)){\r\n            var separatorIndex = tmp.indexOf(\":\");\r\n            var constraintExpression = (separatorIndex === -1) ? tmp : tmp.slice(separatorIndex + 1);\r\n\r\n            // Pull apart lhs\r\n            ary = constraintExpression.match(rxo.parse_lhs).map(function(d){\r\n                return d.replace(/\\s+/,\"\");\r\n            });\r\n\r\n            // *** STEP 1 *** ///\r\n            // Get the variables out\r\n            ary.forEach(function(d){\r\n                // Get the number if its there\r\n                hldr = d.match(rxo.get_num);\r\n\r\n                if(hldr === null){\r\n                    if(d.substr(0,1) === \"-\"){\r\n                        hldr = -1;\r\n                    } else {\r\n                        hldr = 1;\r\n                    }\r\n                } else {\r\n                    hldr = hldr[0];\r\n                }\r\n\r\n                hldr = parseFloat(hldr);\r\n\r\n\r\n                // Get the variable name\r\n                hldr2 = d.match(rxo.get_word)[0];\r\n\r\n                // Make sure the variable is in the model\r\n                model.variables[hldr2] = model.variables[hldr2] || {};\r\n                model.variables[hldr2][constraint] = hldr;\r\n\r\n            });\r\n\r\n            // *** STEP 2 *** ///\r\n            // Get the RHS out\r\n            rhs = parseFloat(tmp.match(rxo.parse_rhs)[0]);\r\n\r\n            // *** STEP 3 *** ///\r\n            // Get the Constrainer out\r\n            tmp = constraints[tmp.match(rxo.parse_dir)[0]];\r\n            model.constraints[constraint] = model.constraints[constraint] || {};\r\n            model.constraints[constraint][tmp] = rhs;\r\n        ////////////////////////////////////\r\n        } else if(rxo.is_unrestricted.test(tmp)){\r\n            // Get the array of unrestricted\r\n            ary = tmp.match(rxo.parse_int).slice(1);\r\n\r\n            // Since we have an int, our model should too\r\n            model.unrestricted = model.unrestricted || {};\r\n\r\n            ary.forEach(function(d){\r\n                d = d.replace(\";\",\"\");\r\n                model.unrestricted[d] = 1;\r\n            });\r\n        }\r\n    }\r\n    return model;\r\n}\r\n\r\n\r\n /*************************************************************\r\n * Method: from_JSON\r\n * Scope: Public:\r\n * Agruments: model: The model we want solver to operate on\r\n * Purpose: Convert a friendly JSON model into a model for a\r\n *          real solving library...in this case\r\n *          lp_solver\r\n **************************************************************/\r\nfunction from_JSON(model){\r\n    // Make sure we at least have a model\r\n    if (!model) {\r\n        throw new Error(\"Solver requires a model to operate on\");\r\n    }\r\n\r\n    var output = \"\",\r\n        ary = [],\r\n        norm = 1,\r\n        lookup = {\r\n            \"max\": \"<=\",\r\n            \"min\": \">=\",\r\n            \"equal\": \"=\"\r\n        },\r\n        rxClean = new RegExp(\"[^A-Za-z0-9_\\[\\{\\}\\/\\.\\&\\#\\$\\%\\~\\'\\@\\^]\", \"gi\");\r\n\r\n    // Build the objective statement\r\n    \r\n    if(model.opType){\r\n        \r\n        output += model.opType + \":\";\r\n\r\n        // Iterate over the variables\r\n        for(var x in model.variables){\r\n            // Give each variable a self of 1 unless\r\n            // it exists already\r\n            model.variables[x][x] = model.variables[x][x] ? model.variables[x][x] : 1;\r\n\r\n            // Does our objective exist here?\r\n            if(model.variables[x][model.optimize]){\r\n                output += \" \" + model.variables[x][model.optimize] + \" \" + x.replace(rxClean,\"_\");\r\n            }\r\n        }\r\n    } else {\r\n        output += \"max:\";\r\n    }\r\n    \r\n\r\n\r\n    // Add some closure to our line thing\r\n    output += \";\\n\\n\";\r\n\r\n    // And now... to iterate over the constraints\r\n    for(var xx in model.constraints){\r\n        for(var y in model.constraints[xx]){\r\n            if(typeof lookup[y] !== \"undefined\"){\r\n                \r\n                for(var z in model.variables){\r\n\r\n                    // Does our Constraint exist here?\r\n                    if(typeof model.variables[z][xx] !== \"undefined\"){\r\n                        output += \" \" + model.variables[z][xx] + \" \" + z.replace(rxClean,\"_\");\r\n                    }\r\n                }\r\n                // Add the constraint type and value...\r\n\r\n                output += \" \" + lookup[y] + \" \" + model.constraints[xx][y];\r\n                output += \";\\n\";\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    // Are there any ints?\r\n    if(model.ints){\r\n        output += \"\\n\\n\";\r\n        for(var xxx in model.ints){\r\n            output += \"int \" + xxx.replace(rxClean,\"_\") + \";\\n\";\r\n        }\r\n    }\r\n\r\n    // Are there any unrestricted?\r\n    if(model.unrestricted){\r\n        output += \"\\n\\n\";\r\n        for(var xxxx in model.unrestricted){\r\n            output += \"unrestricted \" + xxxx.replace(rxClean,\"_\") + \";\\n\";\r\n        }\r\n    }\r\n\r\n    // And kick the string back\r\n    return output;\r\n\r\n}\r\n\r\n\r\nmodule.exports = function (model) {\r\n    // If the user is giving us an array\r\n    // or a string, convert it to a JSON Model\r\n    // otherwise, spit it out as a string\r\n    if(model.length){\r\n        return to_JSON(model);\r\n    } else {\r\n        return from_JSON(model);\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/External/lpsolve/Reformat.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/External/lpsolve/main.js":
/*!************************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/External/lpsolve/main.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/*global describe*/\r\n/*global require*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n/*global exports*/\r\n/*global Promise*/\r\n\r\n\r\n// LP SOLVE CLI REFERENCE:\r\n// http://lpsolve.sourceforge.net/5.5/lp_solve.htm\r\n//\r\n//\r\n\r\n// var reformat = require(\"./Reformat.js\");\r\n\r\nexports.reformat = __webpack_require__(/*! ./Reformat.js */ \"./node_modules/javascript-lp-solver/src/External/lpsolve/Reformat.js\");\r\n\r\nfunction clean_data(data){\r\n\r\n    //\r\n    // Clean Up\r\n    // And Reformatting...\r\n    //\r\n    data = data.replace(\"\\\\r\\\\n\",\"\\r\\n\");\r\n\r\n\r\n    data = data.split(\"\\r\\n\");\r\n    data = data.filter(function(x){\r\n        \r\n        var rx;\r\n        \r\n        //\r\n        // Test 1\r\n        rx = new RegExp(\" 0$\",\"gi\");\r\n        if(rx.test(x) === true){\r\n            return false;\r\n        }\r\n\r\n        //\r\n        // Test 2\r\n        rx = new RegExp(\"\\\\d$\",\"gi\");\r\n        if(rx.test(x) === false){\r\n            return false;\r\n        }\r\n        \r\n\r\n        return true;\r\n    })\r\n    .map(function(x){\r\n        return x.split(/\\:{0,1} +(?=\\d)/);\r\n    })\r\n    .reduce(function(o,k,i){\r\n        o[k[0]] = k[1];\r\n        return o;\r\n    },{});\r\n    \r\n    return data;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexports.solve = function(model){\r\n    //\r\n    return new Promise(function(res, rej){\r\n        //\r\n        // Exit if we're in the browser...\r\n        //\r\n        if(typeof window !== \"undefined\"){\r\n            rej(\"Function Not Available in Browser\");\r\n        }\r\n        //\r\n        // Convert JSON model to lp_solve format\r\n        //\r\n        var data = __webpack_require__(/*! ./Reformat.js */ \"./node_modules/javascript-lp-solver/src/External/lpsolve/Reformat.js\")(model);\r\n        \r\n        \r\n        if(!model.external){\r\n            rej(\"Data for this function must be contained in the 'external' attribute. Not seeing anything there.\");\r\n        }\r\n        \r\n        // \r\n        // In the args, they *SHALL* have provided an executable\r\n        // path to the solver they're piping the data into\r\n        //\r\n        if(!model.external.binPath){\r\n            rej(\"No Executable | Binary path provided in arguments as 'binPath'\");\r\n        }\r\n        \r\n        //\r\n        // They also need to provide an arg_array\r\n        //\r\n        if(!model.external.args){\r\n            rej(\"No arguments array for cli | bash provided on 'args' attribute\");\r\n        }\r\n        \r\n        //\r\n        // They also need a tempName so we know where to store\r\n        // the temp file we're creating...\r\n        //\r\n        if(!model.external.tempName){\r\n            rej(\"No 'tempName' given. This is necessary to produce a staging file for the solver to operate on\");\r\n        }\r\n        \r\n        \r\n        \r\n        //\r\n        // To my knowledge, in Windows, you cannot directly pipe text into\r\n        // an exe...\r\n        //\r\n        // Thus, our process looks like this...\r\n        //\r\n        // 1.) Convert a model to something an external solver can use\r\n        // 2.) Save the results from step 1 as a temp-text file\r\n        // 3.) Pump the results into an exe | whatever-linux-uses\r\n        // 4.) \r\n        // \r\n        //\r\n        \r\n        var fs = __webpack_require__(/*! fs */ \"?2632\");\r\n        \r\n        fs.writeFile(model.external.tempName, data, function(fe, fd){\r\n            if(fe){\r\n                rej(fe);\r\n            } else {\r\n                //\r\n                // So it looks like we wrote to a file and closed it.\r\n                // Neat.\r\n                //\r\n                // Now we need to execute our CLI...\r\n                var exec = (__webpack_require__(/*! child_process */ \"?2c27\").execFile);\r\n                \r\n                //\r\n                // Put the temp file name in the args array...\r\n                //\r\n                model.external.args.push(model.external.tempName);\r\n                \r\n                exec(model.external.binPath, model.external.args, function(e,data){\r\n                    if(e){\r\n                        \r\n                        if(e.code === 1){\r\n                            res(clean_data(data));\r\n                        } else {\r\n                            \r\n                            var codes = {\r\n                                \"-2\": \"Out of Memory\",\r\n                                \"1\": \"SUBOPTIMAL\",\r\n                                \"2\": \"INFEASIBLE\",\r\n                                \"3\": \"UNBOUNDED\",\r\n                                \"4\": \"DEGENERATE\",\r\n                                \"5\": \"NUMFAILURE\",\r\n                                \"6\": \"USER-ABORT\",\r\n                                \"7\": \"TIMEOUT\",\r\n                                \"9\": \"PRESOLVED\",\r\n                                \"25\": \"ACCURACY ERROR\",\r\n                                \"255\": \"FILE-ERROR\"\r\n                            };\r\n                            \r\n                            var ret_obj = {\r\n                                \"code\": e.code,\r\n                                \"meaning\": codes[e.code],\r\n                                \"data\": data\r\n                            };\r\n                            \r\n                            rej(ret_obj);\r\n                        }\r\n\r\n                    } else {\r\n                        // And finally...return it.\r\n                        res(clean_data(data));\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nmodel.external = {\r\n    \"binPath\": \"C:/lpsolve/lp_solve.exe\",\r\n    \"tempName\": \"C:/temp/out.txt\",\r\n    \"args\": [\r\n        \"-S2\"\r\n    ]\r\n    \r\n}\r\n\r\n*/\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/External/lpsolve/main.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/External/main.js":
/*!****************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/External/main.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global describe*/\r\n/*global require*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n/*global exports*/\r\n/*global Promise*/\r\n/*global module*/\r\n\r\nmodule.exports = {\r\n    \"lpsolve\": __webpack_require__(/*! ./lpsolve/main.js */ \"./node_modules/javascript-lp-solver/src/External/lpsolve/main.js\")\r\n};\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/External/main.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Model.js":
/*!********************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Model.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n\r\nvar Tableau = __webpack_require__(/*! ./Tableau/Tableau.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Tableau.js\");\r\nvar branchAndCut = __webpack_require__(/*! ./Tableau/branchAndCut.js */ \"./node_modules/javascript-lp-solver/src/Tableau/branchAndCut.js\");\r\nvar expressions = __webpack_require__(/*! ./expressions.js */ \"./node_modules/javascript-lp-solver/src/expressions.js\");\r\nvar Constraint = expressions.Constraint;\r\nvar Equality = expressions.Equality;\r\nvar Variable = expressions.Variable;\r\nvar IntegerVariable = expressions.IntegerVariable;\r\nvar Term = expressions.Term;\r\n\r\n/*************************************************************\r\n * Class: Model\r\n * Description: Holds the model of a linear optimisation problem\r\n **************************************************************/\r\nfunction Model(precision, name) {\r\n    this.tableau = new Tableau(precision);\r\n\r\n    this.name = name;\r\n\r\n    this.variables = [];\r\n\r\n    this.integerVariables = [];\r\n\r\n    this.unrestrictedVariables = {};\r\n\r\n    this.constraints = [];\r\n\r\n    this.nConstraints = 0;\r\n\r\n    this.nVariables = 0;\r\n\r\n    this.isMinimization = true;\r\n\r\n    this.tableauInitialized = false;\r\n    \r\n    this.relaxationIndex = 1;\r\n\r\n    this.useMIRCuts = false;\r\n\r\n    this.checkForCycles = true;\r\n    \r\n    //\r\n    // Quick and dirty way to leave useful information\r\n    // for the end user without hitting the console\r\n    // or modifying the primary return object...\r\n    //\r\n    this.messages = [];\r\n}\r\nmodule.exports = Model;\r\n\r\nModel.prototype.minimize = function () {\r\n    this.isMinimization = true;\r\n    return this;\r\n};\r\n\r\nModel.prototype.maximize = function () {\r\n    this.isMinimization = false;\r\n    return this;\r\n};\r\n\r\n// Model.prototype.addConstraint = function (constraint) {\r\n//     // TODO: make sure that the constraint does not belong do another model\r\n//     // and make\r\n//     this.constraints.push(constraint);\r\n//     return this;\r\n// };\r\n\r\nModel.prototype._getNewElementIndex = function () {\r\n    if (this.availableIndexes.length > 0) {\r\n        return this.availableIndexes.pop();\r\n    }\r\n\r\n    var index = this.lastElementIndex;\r\n    this.lastElementIndex += 1;\r\n    return index;\r\n};\r\n\r\nModel.prototype._addConstraint = function (constraint) {\r\n    var slackVariable = constraint.slack;\r\n    this.tableau.variablesPerIndex[slackVariable.index] = slackVariable;\r\n    this.constraints.push(constraint);\r\n    this.nConstraints += 1;\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.addConstraint(constraint);\r\n    }\r\n};\r\n\r\nModel.prototype.smallerThan = function (rhs) {\r\n    var constraint = new Constraint(rhs, true, this.tableau.getNewElementIndex(), this);\r\n    this._addConstraint(constraint);\r\n    return constraint;\r\n};\r\n\r\nModel.prototype.greaterThan = function (rhs) {\r\n    var constraint = new Constraint(rhs, false, this.tableau.getNewElementIndex(), this);\r\n    this._addConstraint(constraint);\r\n    return constraint;\r\n};\r\n\r\nModel.prototype.equal = function (rhs) {\r\n    var constraintUpper = new Constraint(rhs, true, this.tableau.getNewElementIndex(), this);\r\n    this._addConstraint(constraintUpper);\r\n\r\n    var constraintLower = new Constraint(rhs, false, this.tableau.getNewElementIndex(), this);\r\n    this._addConstraint(constraintLower);\r\n\r\n    return new Equality(constraintUpper, constraintLower);\r\n};\r\n\r\nModel.prototype.addVariable = function (cost, id, isInteger, isUnrestricted, priority) {\r\n    if (typeof priority === \"string\") {\r\n        switch (priority) {\r\n        case \"required\":\r\n            priority = 0;\r\n            break;\r\n        case \"strong\":\r\n            priority = 1;\r\n            break;\r\n        case \"medium\":\r\n            priority = 2;\r\n            break;\r\n        case \"weak\":\r\n            priority = 3;\r\n            break;\r\n        default:\r\n            priority = 0;\r\n            break;\r\n        }\r\n    }\r\n\r\n    var varIndex = this.tableau.getNewElementIndex();\r\n    if (id === null || id === undefined) {\r\n        id = \"v\" + varIndex;\r\n    }\r\n\r\n    if (cost === null || cost === undefined) {\r\n        cost = 0;\r\n    }\r\n\r\n    if (priority === null || priority === undefined) {\r\n        priority = 0;\r\n    }\r\n\r\n    var variable;\r\n    if (isInteger) {\r\n        variable = new IntegerVariable(id, cost, varIndex, priority);\r\n        this.integerVariables.push(variable);\r\n    } else {\r\n        variable = new Variable(id, cost, varIndex, priority);\r\n    }\r\n\r\n    this.variables.push(variable);\r\n    this.tableau.variablesPerIndex[varIndex] = variable;\r\n\r\n    if (isUnrestricted) {\r\n        this.unrestrictedVariables[varIndex] = true;\r\n    }\r\n\r\n    this.nVariables += 1;\r\n\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.addVariable(variable);\r\n    }\r\n\r\n    return variable;\r\n};\r\n\r\nModel.prototype._removeConstraint = function (constraint) {\r\n    var idx = this.constraints.indexOf(constraint);\r\n    if (idx === -1) {\r\n        console.warn(\"[Model.removeConstraint] Constraint not present in model\");\r\n        return;\r\n    }\r\n\r\n    this.constraints.splice(idx, 1);\r\n    this.nConstraints -= 1;\r\n\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.removeConstraint(constraint);\r\n    }\r\n\r\n    if (constraint.relaxation) {\r\n        this.removeVariable(constraint.relaxation);\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n// For dynamic model modification\r\n//-------------------------------------------------------------------\r\nModel.prototype.removeConstraint = function (constraint) {\r\n    if (constraint.isEquality) {\r\n        this._removeConstraint(constraint.upperBound);\r\n        this._removeConstraint(constraint.lowerBound);\r\n    } else {\r\n        this._removeConstraint(constraint);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nModel.prototype.removeVariable = function (variable) {\r\n    var idx = this.variables.indexOf(variable);\r\n    if (idx === -1) {\r\n        console.warn(\"[Model.removeVariable] Variable not present in model\");\r\n        return;\r\n    }\r\n    this.variables.splice(idx, 1);\r\n\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.removeVariable(variable);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nModel.prototype.updateRightHandSide = function (constraint, difference) {\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.updateRightHandSide(constraint, difference);\r\n    }\r\n    return this;\r\n};\r\n\r\nModel.prototype.updateConstraintCoefficient = function (constraint, variable, difference) {\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.updateConstraintCoefficient(constraint, variable, difference);\r\n    }\r\n    return this;\r\n};\r\n\r\n\r\nModel.prototype.setCost = function (cost, variable) {\r\n    var difference = cost - variable.cost;\r\n    if (this.isMinimization === false) {\r\n        difference = -difference;\r\n    }\r\n\r\n    variable.cost = cost;\r\n    this.tableau.updateCost(variable, difference);\r\n    return this;\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nModel.prototype.loadJson = function (jsonModel) {\r\n    this.isMinimization = (jsonModel.opType !== \"max\");\r\n\r\n    var variables = jsonModel.variables;\r\n    var constraints = jsonModel.constraints;\r\n\r\n    var constraintsMin = {};\r\n    var constraintsMax = {};\r\n\r\n    // Instantiating constraints\r\n    var constraintIds = Object.keys(constraints);\r\n    var nConstraintIds = constraintIds.length;\r\n\r\n    for (var c = 0; c < nConstraintIds; c += 1) {\r\n        var constraintId = constraintIds[c];\r\n        var constraint = constraints[constraintId];\r\n        var equal = constraint.equal;\r\n\r\n        var weight = constraint.weight;\r\n        var priority = constraint.priority;\r\n        var relaxed = weight !== undefined || priority !== undefined;\r\n\r\n        var lowerBound, upperBound;\r\n        if (equal === undefined) {\r\n            var min = constraint.min;\r\n            if (min !== undefined) {\r\n                lowerBound = this.greaterThan(min);\r\n                constraintsMin[constraintId] = lowerBound;\r\n                if (relaxed) { lowerBound.relax(weight, priority); }\r\n            }\r\n\r\n            var max = constraint.max;\r\n            if (max !== undefined) {\r\n                upperBound = this.smallerThan(max);\r\n                constraintsMax[constraintId] = upperBound;\r\n                if (relaxed) { upperBound.relax(weight, priority); }\r\n            }\r\n        } else {\r\n            lowerBound = this.greaterThan(equal);\r\n            constraintsMin[constraintId] = lowerBound;\r\n\r\n            upperBound = this.smallerThan(equal);\r\n            constraintsMax[constraintId] = upperBound;\r\n\r\n            var equality = new Equality(lowerBound, upperBound);\r\n            if (relaxed) { equality.relax(weight, priority); }\r\n        }\r\n    }\r\n\r\n    var variableIds = Object.keys(variables);\r\n    var nVariables = variableIds.length;\r\n    \r\n    \r\n    \r\n//\r\n//\r\n// *** OPTIONS ***\r\n//\r\n//\r\n\r\n    this.tolerance = jsonModel.tolerance || 0;\r\n    \r\n    if(jsonModel.timeout){\r\n        this.timeout = jsonModel.timeout;\r\n    }\r\n    \r\n    //\r\n    //\r\n    // The model is getting too sloppy with options added to it...\r\n    // mebe it needs an \"options\" option...?\r\n    //\r\n    // YES! IT DOES!\r\n    // DO IT!\r\n    // NOW!\r\n    // HERE!!!\r\n    //\r\n    if(jsonModel.options){\r\n        \r\n        //\r\n        // TIMEOUT\r\n        //\r\n        if(jsonModel.options.timeout){\r\n            this.timeout = jsonModel.options.timeout;\r\n        }\r\n        \r\n        //\r\n        // TOLERANCE\r\n        //\r\n        if(this.tolerance === 0){\r\n            this.tolerance = jsonModel.options.tolerance || 0;\r\n        }\r\n        \r\n        //\r\n        // MIR CUTS - (NOT WORKING)\r\n        //\r\n        if(jsonModel.options.useMIRCuts){\r\n            this.useMIRCuts = jsonModel.options.useMIRCuts;\r\n        }\r\n        \r\n        //\r\n        // CYCLE CHECK...tricky because it defaults to false\r\n        //\r\n        //\r\n        // This should maybe be on by default...\r\n        //\r\n        if(typeof jsonModel.options.exitOnCycles === \"undefined\"){\r\n            this.checkForCycles = true;\r\n        } else {\r\n            this.checkForCycles = jsonModel.options.exitOnCycles;\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    \r\n//\r\n//\r\n// /// OPTIONS \\\\\\\r\n//\r\n//\r\n    \r\n    var integerVarIds = jsonModel.ints || {};\r\n    var binaryVarIds = jsonModel.binaries || {};\r\n    var unrestrictedVarIds = jsonModel.unrestricted || {};\r\n\r\n    // Instantiating variables and constraint terms\r\n    var objectiveName = jsonModel.optimize;\r\n    for (var v = 0; v < nVariables; v += 1) {\r\n        // Creation of the variables\r\n        var variableId = variableIds[v];\r\n        var variableConstraints = variables[variableId];\r\n        var cost = variableConstraints[objectiveName] || 0;\r\n        var isBinary = !!binaryVarIds[variableId];\r\n        var isInteger = !!integerVarIds[variableId] || isBinary;\r\n        var isUnrestricted = !!unrestrictedVarIds[variableId];\r\n        var variable = this.addVariable(cost, variableId, isInteger, isUnrestricted);\r\n\r\n        if (isBinary) {\r\n            // Creating an upperbound constraint for this variable\r\n            this.smallerThan(1).addTerm(1, variable);\r\n        }\r\n\r\n        var constraintNames = Object.keys(variableConstraints);\r\n        for (c = 0; c < constraintNames.length; c += 1) {\r\n            var constraintName = constraintNames[c];\r\n            if (constraintName === objectiveName) {\r\n                continue;\r\n            }\r\n\r\n            var coefficient = variableConstraints[constraintName];\r\n\r\n            var constraintMin = constraintsMin[constraintName];\r\n            if (constraintMin !== undefined) {\r\n                constraintMin.addTerm(coefficient, variable);\r\n            }\r\n\r\n            var constraintMax = constraintsMax[constraintName];\r\n            if (constraintMax !== undefined) {\r\n                constraintMax.addTerm(coefficient, variable);\r\n            }\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nModel.prototype.getNumberOfIntegerVariables = function () {\r\n    return this.integerVariables.length;\r\n};\r\n\r\nModel.prototype.solve = function () {\r\n    // Setting tableau if not done\r\n    if (this.tableauInitialized === false) {\r\n        this.tableau.setModel(this);\r\n        this.tableauInitialized = true;\r\n    }\r\n\r\n    return this.tableau.solve();\r\n};\r\n\r\nModel.prototype.isFeasible = function () {\r\n    return this.tableau.feasible;\r\n};\r\n\r\nModel.prototype.save = function () {\r\n    return this.tableau.save();\r\n};\r\n\r\nModel.prototype.restore = function () {\r\n    return this.tableau.restore();\r\n};\r\n\r\nModel.prototype.activateMIRCuts = function (useMIRCuts) {\r\n    this.useMIRCuts = useMIRCuts;\r\n};\r\n\r\nModel.prototype.debug = function (debugCheckForCycles) {\r\n    this.checkForCycles = debugCheckForCycles;\r\n};\r\n\r\nModel.prototype.log = function (message) {\r\n    return this.tableau.log(message);\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Model.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Polyopt.js":
/*!**********************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Polyopt.js ***!
  \**********************************************************/
/***/ ((module) => {

eval("/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n\r\n    /***************************************************************\r\n     * Method: polyopt\r\n     * Scope: private\r\n     * Agruments:\r\n     *        model: The model we want solver to operate on.\r\n                     Because we're in here, we're assuming that\r\n                     we're solving a multi-objective optimization\r\n                     problem. Poly-Optimization. polyopt.\r\n\r\n                     This model has to be formed a little differently\r\n                     because it has multiple objective functions.\r\n                     Normally, a model has 2 attributes: opType (string,\r\n                     \"max\" or \"min\"), and optimize (string, whatever\r\n                     attribute we're optimizing.\r\n\r\n                     Now, there is no opType attribute on the model,\r\n                     and optimize is an object of attributes to be\r\n                     optimized, and how they're to be optimized.\r\n                     For example:\r\n\r\n                     ...\r\n                     \"optimize\": {\r\n                        \"pancakes\": \"max\",\r\n                        \"cost\": \"minimize\"\r\n                     }\r\n                     ...\r\n\r\n\r\n     **************************************************************/\r\n\r\nmodule.exports = function(solver, model){\r\n\r\n    // I have no idea if this is actually works, or what,\r\n    // but here is my algorithm to solve linear programs\r\n    // with multiple objective functions\r\n\r\n    // 1. Optimize for each constraint\r\n    // 2. The results for each solution is a vector\r\n    //    representing a vertex on the polytope we're creating\r\n    // 3. The results for all solutions describes the shape\r\n    //    of the polytope (would be nice to have the equation\r\n    //    representing this)\r\n    // 4. Find the mid-point between all vertices by doing the\r\n    //    following (a_1 + a_2 ... a_n) / n;\r\n    var objectives = model.optimize,\r\n        new_constraints = JSON.parse(JSON.stringify(model.optimize)),\r\n        keys = Object.keys(model.optimize),\r\n        tmp,\r\n        counter = 0,\r\n        vectors = {},\r\n        vector_key = \"\",\r\n        obj = {},\r\n        pareto = [],\r\n        i,j,x,y,z;\r\n\r\n    // Delete the optimize object from the model\r\n    delete model.optimize;\r\n\r\n    // Iterate and Clear\r\n    for(i = 0; i < keys.length; i++){\r\n        // Clean up the new_constraints\r\n        new_constraints[keys[i]] = 0;\r\n    }\r\n\r\n    // Solve and add\r\n    for(i = 0; i < keys.length; i++){\r\n\r\n        // Prep the model\r\n        model.optimize = keys[i];\r\n        model.opType = objectives[keys[i]];\r\n\r\n        // solve the model\r\n        tmp = solver.Solve(model, undefined, undefined, true);\r\n\r\n        // Only the variables make it into the solution;\r\n        // not the attributes.\r\n        //\r\n        // Because of this, we have to add the attributes\r\n        // back onto the solution so we can do math with\r\n        // them later...\r\n\r\n        // Loop over the keys\r\n        for(y in keys){\r\n            // We're only worried about attributes, not variables\r\n            if(!model.variables[keys[y]]){\r\n                // Create space for the attribute in the tmp object\r\n                tmp[keys[y]] = tmp[keys[y]] ? tmp[keys[y]] : 0;\r\n                // Go over each of the variables\r\n                for(x in model.variables){\r\n                    // Does the variable exist in tmp *and* does attribute exist in this model?\r\n                    if(model.variables[x][keys[y]] && tmp[x]){\r\n                        // Add it to tmp\r\n                        tmp[keys[y]] += tmp[x] * model.variables[x][keys[y]];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // clear our key\r\n        vector_key = \"base\";\r\n        // this makes sure that if we get\r\n        // the same vector more than once,\r\n        // we only count it once when finding\r\n        // the midpoint\r\n        for(j = 0; j < keys.length; j++){\r\n            if(tmp[keys[j]]){\r\n                vector_key += \"-\" + ((tmp[keys[j]] * 1000) | 0) / 1000;\r\n            } else {\r\n                vector_key += \"-0\";\r\n            }\r\n        }\r\n\r\n        // Check here to ensure it doesn't exist\r\n        if(!vectors[vector_key]){\r\n            // Add the vector-key in\r\n            vectors[vector_key] = 1;\r\n            counter++;\r\n            \r\n            // Iterate over the keys\r\n            // and update our new constraints\r\n            for(j = 0; j < keys.length; j++){\r\n                if(tmp[keys[j]]){\r\n                    new_constraints[keys[j]] += tmp[keys[j]];\r\n                }\r\n            }\r\n            \r\n            // Push the solution into the paretos\r\n            // array after cleaning it of some\r\n            // excess data markers\r\n            \r\n            delete tmp.feasible;\r\n            delete tmp.result;            \r\n            pareto.push(tmp);\r\n        }\r\n    }\r\n\r\n    // Trying to find the mid-point\r\n    // divide each constraint by the\r\n    // number of constraints\r\n    // *midpoint formula*\r\n    // (x1 + x2 + x3) / 3\r\n    for(i = 0; i < keys.length; i++){\r\n        model.constraints[keys[i]] = {\"equal\": new_constraints[keys[i]] / counter};\r\n    }\r\n\r\n    // Give the model a fake thing to optimize on\r\n    model.optimize = \"cheater-\" + Math.random();\r\n    model.opType = \"max\";\r\n\r\n    // And add the fake attribute to the variables\r\n    // in the model\r\n    for(i in model.variables){\r\n        model.variables[i].cheater = 1;\r\n    }\r\n    \r\n    // Build out the object with all attributes\r\n    for(i in pareto){\r\n        for(x in pareto[i]){\r\n            obj[x] = obj[x] || {min: 1e99, max: -1e99};\r\n        }\r\n    }\r\n    \r\n    // Give each pareto a full attribute list\r\n    // while getting the max and min values\r\n    // for each attribute\r\n    for(i in obj){\r\n        for(x in pareto){\r\n            if(pareto[x][i]){\r\n                if(pareto[x][i] > obj[i].max){\r\n                    obj[i].max = pareto[x][i];\r\n                } \r\n                if(pareto[x][i] < obj[i].min){\r\n                    obj[i].min = pareto[x][i];\r\n                }\r\n            } else {\r\n                pareto[x][i] = 0;\r\n                obj[i].min = 0;\r\n            }\r\n        }\r\n    }\r\n    // Solve the model for the midpoints\r\n    tmp =  solver.Solve(model, undefined, undefined, true);\r\n    \r\n    return {\r\n        midpoint: tmp,\r\n        vertices: pareto,\r\n        ranges: obj\r\n    };    \r\n\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Polyopt.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/MilpSolution.js":
/*!***********************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/MilpSolution.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global module*/\r\n/*global require*/\r\nvar Solution = __webpack_require__(/*! ./Solution.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Solution.js\");\r\n\r\nfunction MilpSolution(tableau, evaluation, feasible, bounded, branchAndCutIterations) {\r\n    Solution.call(this, tableau, evaluation, feasible, bounded);\r\n    this.iter = branchAndCutIterations;\r\n}\r\nmodule.exports = MilpSolution;\r\nMilpSolution.prototype = Object.create(Solution.prototype);\r\nMilpSolution.constructor = MilpSolution;\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/MilpSolution.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/Solution.js":
/*!*******************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/Solution.js ***!
  \*******************************************************************/
/***/ ((module) => {

eval("/*global module*/\r\n\r\nfunction Solution(tableau, evaluation, feasible, bounded) {\r\n    this.feasible = feasible;\r\n    this.evaluation = evaluation;\r\n    this.bounded = bounded;\r\n    this._tableau = tableau;\r\n}\r\nmodule.exports = Solution;\r\n\r\nSolution.prototype.generateSolutionSet = function () {\r\n    var solutionSet = {};\r\n\r\n    var tableau = this._tableau;\r\n    var varIndexByRow = tableau.varIndexByRow;\r\n    var variablesPerIndex = tableau.variablesPerIndex;\r\n    var matrix = tableau.matrix;\r\n    var rhsColumn = tableau.rhsColumn;\r\n    var lastRow = tableau.height - 1;\r\n    var roundingCoeff = Math.round(1 / tableau.precision);\r\n\r\n    for (var r = 1; r <= lastRow; r += 1) {\r\n        var varIndex = varIndexByRow[r];\r\n        var variable = variablesPerIndex[varIndex];\r\n        if (variable === undefined || variable.isSlack === true) {\r\n            continue;\r\n        }\r\n\r\n        var varValue = matrix[r][rhsColumn];\r\n        solutionSet[variable.id] =\r\n            Math.round((Number.EPSILON + varValue) * roundingCoeff) / roundingCoeff;\r\n    }\r\n\r\n    return solutionSet;\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/Solution.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/Tableau.js":
/*!******************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/Tableau.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\nvar Solution = __webpack_require__(/*! ./Solution.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Solution.js\");\r\nvar MilpSolution = __webpack_require__(/*! ./MilpSolution.js */ \"./node_modules/javascript-lp-solver/src/Tableau/MilpSolution.js\");\r\n\r\n/*************************************************************\r\n * Class: Tableau\r\n * Description: Simplex tableau, holding a the tableau matrix\r\n *              and all the information necessary to perform\r\n *              the simplex algorithm\r\n * Agruments:\r\n *        precision: If we're solving a MILP, how tight\r\n *                   do we want to define an integer, given\r\n *                   that 20.000000000000001 is not an integer.\r\n *                   (defaults to 1e-8)\r\n **************************************************************/\r\nfunction Tableau(precision) {\r\n    this.model = null;\r\n\r\n    this.matrix = null;\r\n    this.width = 0;\r\n    this.height = 0;\r\n\r\n    this.costRowIndex = 0;\r\n    this.rhsColumn = 0;\r\n\r\n    this.variablesPerIndex = [];\r\n    this.unrestrictedVars = null;\r\n\r\n    // Solution attributes\r\n    this.feasible = true; // until proven guilty\r\n    this.evaluation = 0;\r\n    this.simplexIters = 0;\r\n\r\n    this.varIndexByRow = null;\r\n    this.varIndexByCol = null;\r\n\r\n    this.rowByVarIndex = null;\r\n    this.colByVarIndex = null;\r\n\r\n    this.precision = precision || 1e-8;\r\n\r\n    this.optionalObjectives = [];\r\n    this.objectivesByPriority = {};\r\n\r\n    this.savedState = null;\r\n\r\n    this.availableIndexes = [];\r\n    this.lastElementIndex = 0;\r\n\r\n    this.variables = null;\r\n    this.nVars = 0;\r\n\r\n    this.bounded = true;\r\n    this.unboundedVarIndex = null;\r\n\r\n    this.branchAndCutIterations = 0;\r\n}\r\nmodule.exports = Tableau;\r\n\r\nTableau.prototype.solve = function () {\r\n    if (this.model.getNumberOfIntegerVariables() > 0) {\r\n        this.branchAndCut();\r\n    } else {\r\n        this.simplex();\r\n    }\r\n    this.updateVariableValues();\r\n    return this.getSolution();\r\n};\r\n\r\nfunction OptionalObjective(priority, nColumns) {\r\n    this.priority = priority;\r\n    this.reducedCosts = new Array(nColumns);\r\n    for (var c = 0; c < nColumns; c += 1) {\r\n        this.reducedCosts[c] = 0;\r\n    }\r\n}\r\n\r\nOptionalObjective.prototype.copy = function () {\r\n    var copy = new OptionalObjective(this.priority, this.reducedCosts.length);\r\n    copy.reducedCosts = this.reducedCosts.slice();\r\n    return copy;\r\n};\r\n\r\nTableau.prototype.setOptionalObjective = function (priority, column, cost) {\r\n    var objectiveForPriority = this.objectivesByPriority[priority];\r\n    if (objectiveForPriority === undefined) {\r\n        var nColumns = Math.max(this.width, column + 1);\r\n        objectiveForPriority = new OptionalObjective(priority, nColumns);\r\n        this.objectivesByPriority[priority] = objectiveForPriority;\r\n        this.optionalObjectives.push(objectiveForPriority);\r\n        this.optionalObjectives.sort(function (a, b) {\r\n            return a.priority - b.priority;\r\n        });\r\n    }\r\n\r\n    objectiveForPriority.reducedCosts[column] = cost;\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype.initialize = function (width, height, variables, unrestrictedVars) {\r\n    this.variables = variables;\r\n    this.unrestrictedVars = unrestrictedVars;\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n\r\n// console.time(\"tableau_build\");\r\n    // BUILD AN EMPTY ARRAY OF THAT WIDTH\r\n    var tmpRow = new Array(width);\r\n    for (var i = 0; i < width; i++) {\r\n        tmpRow[i] = 0;\r\n    }\r\n\r\n    // BUILD AN EMPTY TABLEAU\r\n    this.matrix = new Array(height);\r\n    for (var j = 0; j < height; j++) {\r\n        this.matrix[j] = tmpRow.slice();\r\n    }\r\n\r\n//\r\n// TODO: Benchmark This\r\n//this.matrix = new Array(height).fill(0).map(() => new Array(width).fill(0));\r\n\r\n// console.timeEnd(\"tableau_build\");\r\n// console.log(\"height\",height);\r\n// console.log(\"width\",width);\r\n// console.log(\"------\");\r\n// console.log(\"\");\r\n\r\n\r\n    this.varIndexByRow = new Array(this.height);\r\n    this.varIndexByCol = new Array(this.width);\r\n\r\n    this.varIndexByRow[0] = -1;\r\n    this.varIndexByCol[0] = -1;\r\n\r\n    this.nVars = width + height - 2;\r\n    this.rowByVarIndex = new Array(this.nVars);\r\n    this.colByVarIndex = new Array(this.nVars);\r\n\r\n    this.lastElementIndex = this.nVars;\r\n};\r\n\r\nTableau.prototype._resetMatrix = function () {\r\n    var variables = this.model.variables;\r\n    var constraints = this.model.constraints;\r\n\r\n    var nVars = variables.length;\r\n    var nConstraints = constraints.length;\r\n\r\n    var v, varIndex;\r\n    var costRow = this.matrix[0];\r\n    var coeff = (this.model.isMinimization === true) ? -1 : 1;\r\n    for (v = 0; v < nVars; v += 1) {\r\n        var variable = variables[v];\r\n        var priority = variable.priority;\r\n        var cost = coeff * variable.cost;\r\n        if (priority === 0) {\r\n            costRow[v + 1] = cost;\r\n        } else {\r\n            this.setOptionalObjective(priority, v + 1, cost);\r\n        }\r\n\r\n        varIndex = variables[v].index;\r\n        this.rowByVarIndex[varIndex] = -1;\r\n        this.colByVarIndex[varIndex] = v + 1;\r\n        this.varIndexByCol[v + 1] = varIndex;\r\n    }\r\n\r\n    var rowIndex = 1;\r\n    for (var c = 0; c < nConstraints; c += 1) {\r\n        var constraint = constraints[c];\r\n\r\n        var constraintIndex = constraint.index;\r\n        this.rowByVarIndex[constraintIndex] = rowIndex;\r\n        this.colByVarIndex[constraintIndex] = -1;\r\n        this.varIndexByRow[rowIndex] = constraintIndex;\r\n\r\n        var t, term, column;\r\n        var terms = constraint.terms;\r\n        var nTerms = terms.length;\r\n        var row = this.matrix[rowIndex++];\r\n        if (constraint.isUpperBound) {\r\n            for (t = 0; t < nTerms; t += 1) {\r\n                term = terms[t];\r\n                column = this.colByVarIndex[term.variable.index];\r\n                row[column] = term.coefficient;\r\n            }\r\n\r\n            row[0] = constraint.rhs;\r\n        } else {\r\n            for (t = 0; t < nTerms; t += 1) {\r\n                term = terms[t];\r\n                column = this.colByVarIndex[term.variable.index];\r\n                row[column] = -term.coefficient;\r\n            }\r\n\r\n            row[0] = -constraint.rhs;\r\n        }\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype.setModel = function (model) {\r\n    this.model = model;\r\n\r\n    var width = model.nVariables + 1;\r\n    var height = model.nConstraints + 1;\r\n\r\n\r\n    this.initialize(width, height, model.variables, model.unrestrictedVariables);\r\n    this._resetMatrix();\r\n    return this;\r\n};\r\n\r\nTableau.prototype.getNewElementIndex = function () {\r\n    if (this.availableIndexes.length > 0) {\r\n        return this.availableIndexes.pop();\r\n    }\r\n\r\n    var index = this.lastElementIndex;\r\n    this.lastElementIndex += 1;\r\n    return index;\r\n};\r\n\r\nTableau.prototype.density = function () {\r\n    var density = 0;\r\n\r\n    var matrix = this.matrix;\r\n    for (var r = 0; r < this.height; r++) {\r\n        var row = matrix[r];\r\n        for (var c = 0; c < this.width; c++) {\r\n            if (row[c] !== 0) {\r\n                density += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    return density / (this.height * this.width);\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype.setEvaluation = function () {\r\n    // Rounding objective value\r\n    var roundingCoeff = Math.round(1 / this.precision);\r\n    var evaluation = this.matrix[this.costRowIndex][this.rhsColumn];\r\n    var roundedEvaluation =\r\n        Math.round((Number.EPSILON + evaluation) * roundingCoeff) / roundingCoeff;\r\n\r\n    this.evaluation = roundedEvaluation;\r\n    if (this.simplexIters === 0) {\r\n        this.bestPossibleEval = roundedEvaluation;\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype.getSolution = function () {\r\n    var evaluation = (this.model.isMinimization === true) ?\r\n        this.evaluation : -this.evaluation;\r\n\r\n    if (this.model.getNumberOfIntegerVariables() > 0) {\r\n        return new MilpSolution(this, evaluation, this.feasible, this.bounded, this.branchAndCutIterations);\r\n    } else {\r\n        return new Solution(this, evaluation, this.feasible, this.bounded);\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/Tableau.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/backup.js":
/*!*****************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/backup.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global require*/\r\nvar Tableau = __webpack_require__(/*! ./Tableau.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Tableau.js\");\r\n\r\nTableau.prototype.copy = function () {\r\n    var copy = new Tableau(this.precision);\r\n\r\n    copy.width = this.width;\r\n    copy.height = this.height;\r\n\r\n    copy.nVars = this.nVars;\r\n    copy.model = this.model;\r\n\r\n    // Making a shallow copy of integer variable indexes\r\n    // and variable ids\r\n    copy.variables = this.variables;\r\n    copy.variablesPerIndex = this.variablesPerIndex;\r\n    copy.unrestrictedVars = this.unrestrictedVars;\r\n    copy.lastElementIndex = this.lastElementIndex;\r\n\r\n    // All the other arrays are deep copied\r\n    copy.varIndexByRow = this.varIndexByRow.slice();\r\n    copy.varIndexByCol = this.varIndexByCol.slice();\r\n\r\n    copy.rowByVarIndex = this.rowByVarIndex.slice();\r\n    copy.colByVarIndex = this.colByVarIndex.slice();\r\n\r\n    copy.availableIndexes = this.availableIndexes.slice();\r\n\r\n    var optionalObjectivesCopy = [];\r\n    for(var o = 0; o < this.optionalObjectives.length; o++){\r\n        optionalObjectivesCopy[o] = this.optionalObjectives[o].copy();\r\n    }\r\n    copy.optionalObjectives = optionalObjectivesCopy;\r\n\r\n\r\n    var matrix = this.matrix;\r\n    var matrixCopy = new Array(this.height);\r\n    for (var r = 0; r < this.height; r++) {\r\n        matrixCopy[r] = matrix[r].slice();\r\n    }\r\n\r\n    copy.matrix = matrixCopy;\r\n\r\n    return copy;\r\n};\r\n\r\nTableau.prototype.save = function () {\r\n    this.savedState = this.copy();\r\n};\r\n\r\nTableau.prototype.restore = function () {\r\n    if (this.savedState === null) {\r\n        return;\r\n    }\r\n\r\n    var save = this.savedState;\r\n    var savedMatrix = save.matrix;\r\n    this.nVars = save.nVars;\r\n    this.model = save.model;\r\n\r\n    // Shallow restore\r\n    this.variables = save.variables;\r\n    this.variablesPerIndex = save.variablesPerIndex;\r\n    this.unrestrictedVars = save.unrestrictedVars;\r\n    this.lastElementIndex = save.lastElementIndex;\r\n\r\n    this.width = save.width;\r\n    this.height = save.height;\r\n\r\n    // Restoring matrix\r\n    var r, c;\r\n    for (r = 0; r < this.height; r += 1) {\r\n        var savedRow = savedMatrix[r];\r\n        var row = this.matrix[r];\r\n        for (c = 0; c < this.width; c += 1) {\r\n            row[c] = savedRow[c];\r\n        }\r\n    }\r\n\r\n    // Restoring all the other structures\r\n    var savedBasicIndexes = save.varIndexByRow;\r\n    for (c = 0; c < this.height; c += 1) {\r\n        this.varIndexByRow[c] = savedBasicIndexes[c];\r\n    }\r\n\r\n    while (this.varIndexByRow.length > this.height) {\r\n        this.varIndexByRow.pop();\r\n    }\r\n\r\n    var savedNonBasicIndexes = save.varIndexByCol;\r\n    for (r = 0; r < this.width; r += 1) {\r\n        this.varIndexByCol[r] = savedNonBasicIndexes[r];\r\n    }\r\n\r\n    while (this.varIndexByCol.length > this.width) {\r\n        this.varIndexByCol.pop();\r\n    }\r\n\r\n    var savedRows = save.rowByVarIndex;\r\n    var savedCols = save.colByVarIndex;\r\n    for (var v = 0; v < this.nVars; v += 1) {\r\n        this.rowByVarIndex[v] = savedRows[v];\r\n        this.colByVarIndex[v] = savedCols[v];\r\n    }\r\n\r\n\r\n    if (save.optionalObjectives.length > 0 && this.optionalObjectives.length > 0) {\r\n        this.optionalObjectives = [];\r\n        this.optionalObjectivePerPriority = {};\r\n        for(var o = 0; o < save.optionalObjectives.length; o++){\r\n            var optionalObjectiveCopy = save.optionalObjectives[o].copy();\r\n            this.optionalObjectives[o] = optionalObjectiveCopy;\r\n            this.optionalObjectivePerPriority[optionalObjectiveCopy.priority] = optionalObjectiveCopy;\r\n        }\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/backup.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/branchAndCut.js":
/*!***********************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/branchAndCut.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\nvar Tableau = __webpack_require__(/*! ./Tableau.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Tableau.js\");\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Cut(type, varIndex, value) {\r\n    this.type = type;\r\n    this.varIndex = varIndex;\r\n    this.value = value;\r\n}\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Branch(relaxedEvaluation, cuts) {\r\n    this.relaxedEvaluation = relaxedEvaluation;\r\n    this.cuts = cuts;\r\n}\r\n\r\n//-------------------------------------------------------------------\r\n// Branch sorting strategies\r\n//-------------------------------------------------------------------\r\nfunction sortByEvaluation(a, b) {\r\n    return b.relaxedEvaluation - a.relaxedEvaluation;\r\n}\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// Applying cuts on a tableau and resolving\r\n//-------------------------------------------------------------------\r\nTableau.prototype.applyCuts = function (branchingCuts){\r\n    // Restoring initial solution\r\n    this.restore();\r\n\r\n    this.addCutConstraints(branchingCuts);\r\n    this.simplex();\r\n    // Adding MIR cuts\r\n    if (this.model.useMIRCuts){\r\n        var fractionalVolumeImproved = true;\r\n        while(fractionalVolumeImproved){\r\n            var fractionalVolumeBefore = this.computeFractionalVolume(true);\r\n            this.applyMIRCuts();\r\n            this.simplex();\r\n\r\n            var fractionalVolumeAfter = this.computeFractionalVolume(true);\r\n\r\n            // If the new fractional volume is bigger than 90% of the previous one\r\n            // we assume there is no improvement from the MIR cuts\r\n            if(fractionalVolumeAfter >= 0.9 * fractionalVolumeBefore){\r\n                fractionalVolumeImproved = false;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n// Function: MILP\r\n// Detail: Main function, my attempt at a mixed integer linear programming\r\n//         solver\r\n//-------------------------------------------------------------------\r\nTableau.prototype.branchAndCut = function () {\r\n    var branches = [];\r\n    var iterations = 0;\r\n    var tolerance = this.model.tolerance;\r\n    var toleranceFlag = true;\r\n    var terminalTime = 1e99;\r\n    \r\n    //\r\n    // Set Start Time on model...\r\n    // Let's build out a way to *gracefully* quit\r\n    // after {{time}} milliseconds\r\n    //\r\n    \r\n    // 1.) Check to see if there's a timeout on the model\r\n    //\r\n    if(this.model.timeout){\r\n        // 2.) Hooray! There is!\r\n        //     Calculate the final date\r\n        //\r\n        terminalTime = Date.now() + this.model.timeout;\r\n    }\r\n\r\n    // This is the default result\r\n    // If nothing is both *integral* and *feasible*\r\n    var bestEvaluation = Infinity;\r\n    var bestBranch = null;\r\n    var bestOptionalObjectivesEvaluations = [];\r\n    for (var oInit = 0; oInit < this.optionalObjectives.length; oInit += 1){\r\n        bestOptionalObjectivesEvaluations.push(Infinity);\r\n    }\r\n\r\n    // And here...we...go!\r\n\r\n    // 1.) Load a model into the queue\r\n    var branch = new Branch(-Infinity, []);\r\n    var acceptableThreshold;\r\n    \r\n    branches.push(branch);\r\n    // If all branches have been exhausted terminate the loop\r\n    while (branches.length > 0 && toleranceFlag === true && Date.now() < terminalTime) {\r\n        \r\n        if(this.model.isMinimization){\r\n            acceptableThreshold = this.bestPossibleEval * (1 + tolerance);\r\n        } else {\r\n            acceptableThreshold = this.bestPossibleEval * (1 - tolerance);\r\n        }\r\n        \r\n        // Abort while loop if termination tolerance is both specified and condition is met\r\n        if (tolerance > 0) {\r\n            if (bestEvaluation < acceptableThreshold) {\r\n                toleranceFlag = false;\r\n            }\r\n        }\r\n        \r\n        // Get a model from the queue\r\n        branch = branches.pop();\r\n        if (branch.relaxedEvaluation > bestEvaluation) {\r\n            continue;\r\n        }\r\n\r\n        // Solving from initial relaxed solution\r\n        // with additional cut constraints\r\n\r\n        // Adding cut constraints\r\n        var cuts = branch.cuts;\r\n        this.applyCuts(cuts);\r\n\r\n        iterations++;\r\n        if (this.feasible === false) {\r\n            continue;\r\n        }\r\n\r\n        var evaluation = this.evaluation;\r\n        if (evaluation > bestEvaluation) {\r\n            // This branch does not contain the optimal solution\r\n            continue;\r\n        }\r\n\r\n        // To deal with the optional objectives\r\n        if (evaluation === bestEvaluation){\r\n            var isCurrentEvaluationWorse = true;\r\n            for (var o = 0; o < this.optionalObjectives.length; o += 1){\r\n                if (this.optionalObjectives[o].reducedCosts[0] > bestOptionalObjectivesEvaluations[o]){\r\n                    break;\r\n                } else if (this.optionalObjectives[o].reducedCosts[0] < bestOptionalObjectivesEvaluations[o]) {\r\n                    isCurrentEvaluationWorse = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isCurrentEvaluationWorse){\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // Is the model both integral and feasible?\r\n        if (this.isIntegral() === true) {\r\n            \r\n            //\r\n            // Store the fact that we are integral\r\n            //\r\n            this.__isIntegral = true;\r\n            \r\n            \r\n            if (iterations === 1) {\r\n                this.branchAndCutIterations = iterations;\r\n                return;\r\n            }\r\n            // Store the solution as the bestSolution\r\n            bestBranch = branch;\r\n            bestEvaluation = evaluation;\r\n            for (var oCopy = 0; oCopy < this.optionalObjectives.length; oCopy += 1){\r\n                bestOptionalObjectivesEvaluations[oCopy] = this.optionalObjectives[oCopy].reducedCosts[0];\r\n            }\r\n        } else {\r\n            if (iterations === 1) {\r\n                // Saving the first iteration\r\n                // TODO: implement a better strategy for saving the tableau?\r\n                this.save();\r\n            }\r\n\r\n            // If the solution is\r\n            //  a. Feasible\r\n            //  b. Better than the current solution\r\n            //  c. but *NOT* integral\r\n\r\n            // So the solution isn't integral? How do we solve this.\r\n            // We create 2 new models, that are mirror images of the prior\r\n            // model, with 1 exception.\r\n\r\n            // Say we're trying to solve some stupid problem requiring you get\r\n            // animals for your daughter's kindergarten petting zoo party\r\n            // and you have to choose how many ducks, goats, and lambs to get.\r\n\r\n            // Say that the optimal solution to this problem if we didn't have\r\n            // to make it integral was {duck: 8, lambs: 3.5}\r\n            //\r\n            // To keep from traumatizing your daughter and the other children\r\n            // you're going to want to have whole animals\r\n\r\n            // What we would do is find the most fractional variable (lambs)\r\n            // and create new models from the old models, but with a new constraint\r\n            // on apples. The constraints on the low model would look like:\r\n            // constraints: {...\r\n            //   lamb: {max: 3}\r\n            //   ...\r\n            // }\r\n            //\r\n            // while the constraints on the high model would look like:\r\n            //\r\n            // constraints: {...\r\n            //   lamb: {min: 4}\r\n            //   ...\r\n            // }\r\n            // If neither of these models is feasible because of this constraint,\r\n            // the model is not integral at this point, and fails.\r\n\r\n            // Find out where we want to split the solution\r\n            var variable = this.getMostFractionalVar();\r\n\r\n            var varIndex = variable.index;\r\n\r\n            var cutsHigh = [];\r\n            var cutsLow = [];\r\n\r\n            var nCuts = cuts.length;\r\n            for (var c = 0; c < nCuts; c += 1) {\r\n                var cut = cuts[c];\r\n                if (cut.varIndex === varIndex) {\r\n                    if (cut.type === \"min\") {\r\n                        cutsLow.push(cut);\r\n                    } else {\r\n                        cutsHigh.push(cut);\r\n                    }\r\n                } else {\r\n                    cutsHigh.push(cut);\r\n                    cutsLow.push(cut);\r\n                }\r\n            }\r\n\r\n            var min = Math.ceil(variable.value);\r\n            var max = Math.floor(variable.value);\r\n\r\n            var cutHigh = new Cut(\"min\", varIndex, min);\r\n            cutsHigh.push(cutHigh);\r\n\r\n            var cutLow = new Cut(\"max\", varIndex, max);\r\n            cutsLow.push(cutLow);\r\n\r\n            branches.push(new Branch(evaluation, cutsHigh));\r\n            branches.push(new Branch(evaluation, cutsLow));\r\n\r\n            // Sorting branches\r\n            // Branches with the most promising lower bounds\r\n            // will be picked first\r\n            branches.sort(sortByEvaluation);\r\n        }\r\n    }\r\n\r\n    // Adding cut constraints for the optimal solution\r\n    if (bestBranch !== null) {\r\n        // The model is feasible\r\n        this.applyCuts(bestBranch.cuts);\r\n    }\r\n    this.branchAndCutIterations = iterations;\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/branchAndCut.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/branchingStrategies.js":
/*!******************************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/branchingStrategies.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global require*/\r\nvar Tableau = __webpack_require__(/*! ./Tableau.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Tableau.js\");\r\n\r\nfunction VariableData(index, value) {\r\n    this.index = index;\r\n    this.value = value;\r\n}\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype.getMostFractionalVar = function () {\r\n    var biggestFraction = 0;\r\n    var selectedVarIndex = null;\r\n    var selectedVarValue = null;\r\n    var mid = 0.5;\r\n\r\n    var integerVariables = this.model.integerVariables;\r\n    var nIntegerVars = integerVariables.length;\r\n    for (var v = 0; v < nIntegerVars; v++) {\r\n        var varIndex = integerVariables[v].index;\r\n        var varRow = this.rowByVarIndex[varIndex];\r\n        if (varRow === -1) {\r\n            continue;\r\n        }\r\n\r\n        var varValue = this.matrix[varRow][this.rhsColumn];\r\n        var fraction = Math.abs(varValue - Math.round(varValue));\r\n        if (biggestFraction < fraction) {\r\n            biggestFraction = fraction;\r\n            selectedVarIndex = varIndex;\r\n            selectedVarValue = varValue;\r\n        }\r\n    }\r\n\r\n    return new VariableData(selectedVarIndex, selectedVarValue);\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype.getFractionalVarWithLowestCost = function () {\r\n    var highestCost = Infinity;\r\n    var selectedVarIndex = null;\r\n    var selectedVarValue = null;\r\n\r\n    var integerVariables = this.model.integerVariables;\r\n    var nIntegerVars = integerVariables.length;\r\n    for (var v = 0; v < nIntegerVars; v++) {\r\n        var variable = integerVariables[v];\r\n        var varIndex = variable.index;\r\n        var varRow = this.rowByVarIndex[varIndex];\r\n        if (varRow === -1) {\r\n            // Variable value is non basic\r\n            // its value is 0\r\n            continue;\r\n        }\r\n\r\n        var varValue = this.matrix[varRow][this.rhsColumn];\r\n        if (Math.abs(varValue - Math.round(varValue)) > this.precision) {\r\n            var cost = variable.cost;\r\n            if (highestCost > cost) {\r\n                highestCost = cost;\r\n                selectedVarIndex = varIndex;\r\n                selectedVarValue = varValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    return new VariableData(selectedVarIndex, selectedVarValue);\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/branchingStrategies.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/cuttingStrategies.js":
/*!****************************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/cuttingStrategies.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global require*/\r\nvar Tableau = __webpack_require__(/*! ./Tableau.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Tableau.js\");\r\nvar SlackVariable = (__webpack_require__(/*! ../expressions.js */ \"./node_modules/javascript-lp-solver/src/expressions.js\").SlackVariable);\r\n\r\nTableau.prototype.addCutConstraints = function (cutConstraints) {\r\n    var nCutConstraints = cutConstraints.length;\r\n\r\n    var height = this.height;\r\n    var heightWithCuts = height + nCutConstraints;\r\n\r\n    // Adding rows to hold cut constraints\r\n    for (var h = height; h < heightWithCuts; h += 1) {\r\n        if (this.matrix[h] === undefined) {\r\n            this.matrix[h] = this.matrix[h - 1].slice();\r\n        }\r\n    }\r\n\r\n    // Adding cut constraints\r\n    this.height = heightWithCuts;\r\n    this.nVars = this.width + this.height - 2;\r\n\r\n    var c;\r\n    var lastColumn = this.width - 1;\r\n    for (var i = 0; i < nCutConstraints; i += 1) {\r\n        var cut = cutConstraints[i];\r\n\r\n        // Constraint row index\r\n        var r = height + i;\r\n\r\n        var sign = (cut.type === \"min\") ? -1 : 1;\r\n\r\n        // Variable on which the cut is applied\r\n        var varIndex = cut.varIndex;\r\n        var varRowIndex = this.rowByVarIndex[varIndex];\r\n        var constraintRow = this.matrix[r];\r\n        if (varRowIndex === -1) {\r\n            // Variable is non basic\r\n            constraintRow[this.rhsColumn] = sign * cut.value;\r\n            for (c = 1; c <= lastColumn; c += 1) {\r\n                constraintRow[c] = 0;\r\n            }\r\n            constraintRow[this.colByVarIndex[varIndex]] = sign;\r\n        } else {\r\n            // Variable is basic\r\n            var varRow = this.matrix[varRowIndex];\r\n            var varValue = varRow[this.rhsColumn];\r\n            constraintRow[this.rhsColumn] = sign * (cut.value - varValue);\r\n            for (c = 1; c <= lastColumn; c += 1) {\r\n                constraintRow[c] = -sign * varRow[c];\r\n            }\r\n        }\r\n\r\n        // Creating slack variable\r\n        var slackVarIndex = this.getNewElementIndex();\r\n        this.varIndexByRow[r] = slackVarIndex;\r\n        this.rowByVarIndex[slackVarIndex] = r;\r\n        this.colByVarIndex[slackVarIndex] = -1;\r\n        this.variablesPerIndex[slackVarIndex] = new SlackVariable(\"s\"+slackVarIndex, slackVarIndex);\r\n        this.nVars += 1;\r\n    }\r\n};\r\n\r\nTableau.prototype._addLowerBoundMIRCut = function(rowIndex) {\r\n\r\n\tif(rowIndex === this.costRowIndex) {\r\n\t\t//console.log(\"! IN MIR CUTS : The index of the row corresponds to the cost row. !\");\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar model = this.model;\r\n\tvar matrix = this.matrix;\r\n\r\n\tvar intVar = this.variablesPerIndex[this.varIndexByRow[rowIndex]];\r\n\tif (!intVar.isInteger) {\r\n\t\treturn false;\r\n    }\r\n\r\n\tvar d = matrix[rowIndex][this.rhsColumn];\r\n\tvar frac_d = d - Math.floor(d);\r\n\r\n\tif (frac_d < this.precision || 1 - this.precision < frac_d) {\r\n\t\treturn false;\r\n    }\r\n\r\n\t//Adding a row\r\n\tvar r = this.height;\r\n\tmatrix[r] = matrix[r - 1].slice();\r\n\tthis.height += 1;\r\n\r\n\t// Creating slack variable\r\n\tthis.nVars += 1;\r\n\tvar slackVarIndex = this.getNewElementIndex();\r\n\tthis.varIndexByRow[r] = slackVarIndex;\r\n\tthis.rowByVarIndex[slackVarIndex] = r;\r\n\tthis.colByVarIndex[slackVarIndex] = -1;\r\n\tthis.variablesPerIndex[slackVarIndex] = new SlackVariable(\"s\"+slackVarIndex, slackVarIndex);\r\n\r\n\tmatrix[r][this.rhsColumn] = Math.floor(d);\r\n\r\n\tfor (var colIndex = 1; colIndex < this.varIndexByCol.length; colIndex += 1) {\r\n\t\tvar variable = this.variablesPerIndex[this.varIndexByCol[colIndex]];\r\n\r\n\t\tif (!variable.isInteger) {\r\n\t\t\tmatrix[r][colIndex] = Math.min(0, matrix[rowIndex][colIndex] / (1 - frac_d));\r\n\t\t} else {\r\n\t\t\tvar coef = matrix[rowIndex][colIndex];\r\n\t\t\tvar termCoeff = Math.floor(coef)+Math.max(0, coef - Math.floor(coef) - frac_d) / (1 - frac_d);\r\n\t\t\tmatrix[r][colIndex] = termCoeff;\r\n\t\t}\r\n\t}\r\n\r\n\tfor(var c = 0; c < this.width; c += 1) {\r\n\t\tmatrix[r][c] -= matrix[rowIndex][c];\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nTableau.prototype._addUpperBoundMIRCut = function(rowIndex) {\r\n\r\n\tif (rowIndex === this.costRowIndex) {\r\n\t\t//console.log(\"! IN MIR CUTS : The index of the row corresponds to the cost row. !\");\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar model = this.model;\r\n\tvar matrix = this.matrix;\r\n\r\n\tvar intVar = this.variablesPerIndex[this.varIndexByRow[rowIndex]];\r\n\tif (!intVar.isInteger) {\r\n\t\treturn false;\r\n    }\r\n\r\n\tvar b = matrix[rowIndex][this.rhsColumn];\r\n\tvar f = b - Math.floor(b);\r\n\r\n\tif (f < this.precision || 1 - this.precision < f) {\r\n\t\treturn false;\r\n    }\r\n\r\n\t//Adding a row\r\n\tvar r = this.height;\r\n\tmatrix[r] = matrix[r - 1].slice();\r\n\tthis.height += 1;\r\n\r\n\t// Creating slack variable\r\n    \r\n\tthis.nVars += 1;\r\n\tvar slackVarIndex = this.getNewElementIndex();\r\n\tthis.varIndexByRow[r] = slackVarIndex;\r\n\tthis.rowByVarIndex[slackVarIndex] = r;\r\n\tthis.colByVarIndex[slackVarIndex] = -1;\r\n\tthis.variablesPerIndex[slackVarIndex] = new SlackVariable(\"s\"+slackVarIndex, slackVarIndex);\r\n\r\n\tmatrix[r][this.rhsColumn] = -f;\r\n\r\n\r\n\tfor(var colIndex = 1; colIndex < this.varIndexByCol.length; colIndex += 1) {\r\n\t\tvar variable = this.variablesPerIndex[this.varIndexByCol[colIndex]];\r\n\r\n\t\tvar aj = matrix[rowIndex][colIndex];\r\n\t\tvar fj = aj - Math.floor(aj);\r\n\r\n\t\tif(variable.isInteger) {\r\n\t\t\tif(fj <= f) {\r\n\t\t\t\tmatrix[r][colIndex] = -fj;\r\n            } else {\r\n\t\t\t\tmatrix[r][colIndex] = -(1 - fj) * f / fj;\r\n            }\r\n\t\t} else {\r\n\t\t\tif (aj >= 0) {\r\n\t\t\t\tmatrix[r][colIndex] = -aj;\r\n            } else {\r\n\t\t\t\tmatrix[r][colIndex] = aj * f / (1 - f);\r\n            }\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n//\r\n// THIS MAKES SOME MILP PROBLEMS PROVIDE INCORRECT\r\n// ANSWERS...\r\n//\r\n// QUICK FIX: MAKE THE FUNCTION EMPTY...\r\n//\r\nTableau.prototype.applyMIRCuts = function () {\r\n    \r\n    // var nRows = this.height;\r\n    // for (var cst = 0; cst < nRows; cst += 1) {\r\n    //    this._addUpperBoundMIRCut(cst);\r\n    // }\r\n\r\n\r\n    // // nRows = tableau.height;\r\n    // for (cst = 0; cst < nRows; cst += 1) {\r\n    //    this._addLowerBoundMIRCut(cst);\r\n    // }\r\n    \r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/cuttingStrategies.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/dynamicModification.js":
/*!******************************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/dynamicModification.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global require*/\r\n/*global console*/\r\nvar Tableau = __webpack_require__(/*! ./Tableau.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Tableau.js\");\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype._putInBase = function (varIndex) {\r\n    // Is varIndex in the base?\r\n    var r = this.rowByVarIndex[varIndex];\r\n    if (r === -1) {\r\n        // Outside the base\r\n        // pivoting to take it out\r\n        var c = this.colByVarIndex[varIndex];\r\n\r\n        // Selecting pivot row\r\n        // (Any row with coefficient different from 0)\r\n        for (var r1 = 1; r1 < this.height; r1 += 1) {\r\n            var coefficient = this.matrix[r1][c];\r\n            if (coefficient < -this.precision || this.precision < coefficient) {\r\n                r = r1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.pivot(r, c);\r\n    }\r\n\r\n    return r;\r\n};\r\n\r\nTableau.prototype._takeOutOfBase = function (varIndex) {\r\n    // Is varIndex in the base?\r\n    var c = this.colByVarIndex[varIndex];\r\n    if (c === -1) {\r\n        // Inside the base\r\n        // pivoting to take it out\r\n        var r = this.rowByVarIndex[varIndex];\r\n\r\n        // Selecting pivot column\r\n        // (Any column with coefficient different from 0)\r\n        var pivotRow = this.matrix[r];\r\n        for (var c1 = 1; c1 < this.height; c1 += 1) {\r\n            var coefficient = pivotRow[c1];\r\n            if (coefficient < -this.precision || this.precision < coefficient) {\r\n                c = c1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.pivot(r, c);\r\n    }\r\n\r\n    return c;\r\n};\r\n\r\nTableau.prototype.updateVariableValues = function () {\r\n    var nVars = this.variables.length;\r\n    var roundingCoeff = Math.round(1 / this.precision);\r\n    for (var v = 0; v < nVars; v += 1) {\r\n        var variable = this.variables[v];\r\n        var varIndex = variable.index;\r\n\r\n        var r = this.rowByVarIndex[varIndex];\r\n        if (r === -1) {\r\n            // Variable is non basic\r\n            variable.value = 0;\r\n        } else {\r\n            // Variable is basic\r\n            var varValue = this.matrix[r][this.rhsColumn];\r\n            variable.value = Math.round((varValue + Number.EPSILON) * roundingCoeff) / roundingCoeff;\r\n        }\r\n    }\r\n};\r\n\r\nTableau.prototype.updateRightHandSide = function (constraint, difference) {\r\n    // Updates RHS of given constraint\r\n    var lastRow = this.height - 1;\r\n    var constraintRow = this.rowByVarIndex[constraint.index];\r\n    if (constraintRow === -1) {\r\n        // Slack is not in base\r\n        var slackColumn = this.colByVarIndex[constraint.index];\r\n\r\n        // Upading all the RHS values\r\n        for (var r = 0; r <= lastRow; r += 1) {\r\n            var row = this.matrix[r];\r\n            row[this.rhsColumn] -= difference * row[slackColumn];\r\n        }\r\n\r\n        var nOptionalObjectives = this.optionalObjectives.length;\r\n        if (nOptionalObjectives > 0) {\r\n            for (var o = 0; o < nOptionalObjectives; o += 1) {\r\n                var reducedCosts = this.optionalObjectives[o].reducedCosts;\r\n                reducedCosts[this.rhsColumn] -= difference * reducedCosts[slackColumn];\r\n            }\r\n        }\r\n    } else {\r\n        // Slack variable of constraint is in base\r\n        // Updating RHS with the difference between the old and the new one\r\n        this.matrix[constraintRow][this.rhsColumn] -= difference;\r\n    }\r\n};\r\n\r\nTableau.prototype.updateConstraintCoefficient = function (constraint, variable, difference) {\r\n    // Updates variable coefficient within a constraint\r\n    if (constraint.index === variable.index) {\r\n        throw new Error(\"[Tableau.updateConstraintCoefficient] constraint index should not be equal to variable index !\");\r\n    }\r\n\r\n    var r = this._putInBase(constraint.index);\r\n\r\n    var colVar = this.colByVarIndex[variable.index];\r\n    if (colVar === -1) {\r\n        var rowVar = this.rowByVarIndex[variable.index];\r\n        for (var c = 0; c < this.width; c += 1){\r\n            this.matrix[r][c] += difference * this.matrix[rowVar][c];\r\n        }\r\n    } else {\r\n        this.matrix[r][colVar] -= difference;\r\n    }\r\n};\r\n\r\nTableau.prototype.updateCost = function (variable, difference) {\r\n    // Updates variable coefficient within the objective function\r\n    var varIndex = variable.index;\r\n    var lastColumn = this.width - 1;\r\n    var varColumn = this.colByVarIndex[varIndex];\r\n    if (varColumn === -1) {\r\n        // Variable is in base\r\n        var variableRow = this.matrix[this.rowByVarIndex[varIndex]];\r\n\r\n        var c;\r\n        if (variable.priority === 0) {\r\n            var costRow = this.matrix[0];\r\n\r\n            // Upading all the reduced costs\r\n            for (c = 0; c <= lastColumn; c += 1) {\r\n                costRow[c] += difference * variableRow[c];\r\n            }\r\n        } else {\r\n            var reducedCosts = this.objectivesByPriority[variable.priority].reducedCosts;\r\n            for (c = 0; c <= lastColumn; c += 1) {\r\n                reducedCosts[c] += difference * variableRow[c];\r\n            }\r\n        }\r\n    } else {\r\n        // Variable is not in the base\r\n        // Updating coefficient with difference\r\n        this.matrix[0][varColumn] -= difference;\r\n    }\r\n};\r\n\r\nTableau.prototype.addConstraint = function (constraint) {\r\n    // Adds a constraint to the tableau\r\n    var sign = constraint.isUpperBound ? 1 : -1;\r\n    var lastRow = this.height;\r\n\r\n    var constraintRow = this.matrix[lastRow];\r\n    if (constraintRow === undefined) {\r\n        constraintRow = this.matrix[0].slice();\r\n        this.matrix[lastRow] = constraintRow;\r\n    }\r\n\r\n    // Setting all row cells to 0\r\n    var lastColumn = this.width - 1;\r\n    for (var c = 0; c <= lastColumn; c += 1) {\r\n        constraintRow[c] = 0;\r\n    }\r\n\r\n    // Initializing RHS\r\n    constraintRow[this.rhsColumn] = sign * constraint.rhs;\r\n\r\n    var terms = constraint.terms;\r\n    var nTerms = terms.length;\r\n    for (var t = 0; t < nTerms; t += 1) {\r\n        var term = terms[t];\r\n        var coefficient = term.coefficient;\r\n        var varIndex = term.variable.index;\r\n\r\n        var varRowIndex = this.rowByVarIndex[varIndex];\r\n        if (varRowIndex === -1) {\r\n            // Variable is non basic\r\n            constraintRow[this.colByVarIndex[varIndex]] += sign * coefficient;\r\n        } else {\r\n            // Variable is basic\r\n            var varRow = this.matrix[varRowIndex];\r\n            var varValue = varRow[this.rhsColumn];\r\n            for (c = 0; c <= lastColumn; c += 1) {\r\n                constraintRow[c] -= sign * coefficient * varRow[c];\r\n            }\r\n        }\r\n    }\r\n    // Creating slack variable\r\n    var slackIndex = constraint.index;\r\n    this.varIndexByRow[lastRow] = slackIndex;\r\n    this.rowByVarIndex[slackIndex] = lastRow;\r\n    this.colByVarIndex[slackIndex] = -1;\r\n\r\n    this.height += 1;\r\n};\r\n\r\nTableau.prototype.removeConstraint = function (constraint) {\r\n    var slackIndex = constraint.index;\r\n    var lastRow = this.height - 1;\r\n\r\n    // Putting the constraint's slack in the base\r\n    var r = this._putInBase(slackIndex);\r\n\r\n    // Removing constraint\r\n    // by putting the corresponding row at the bottom of the matrix\r\n    // and virtually reducing the height of the matrix by 1\r\n    var tmpRow = this.matrix[lastRow];\r\n    this.matrix[lastRow] = this.matrix[r];\r\n    this.matrix[r] = tmpRow;\r\n\r\n    // Removing associated slack variable from basic variables\r\n    this.varIndexByRow[r] = this.varIndexByRow[lastRow];\r\n    this.varIndexByRow[lastRow] = -1;\r\n    this.rowByVarIndex[slackIndex] = -1;\r\n\r\n    // Putting associated slack variable index in index manager\r\n    this.availableIndexes[this.availableIndexes.length] = slackIndex;\r\n\r\n    constraint.slack.index = -1;\r\n\r\n    this.height -= 1;\r\n};\r\n\r\nTableau.prototype.addVariable = function (variable) {\r\n    // Adds a variable to the tableau\r\n    // var sign = constraint.isUpperBound ? 1 : -1;\r\n\r\n    var lastRow = this.height - 1;\r\n    var lastColumn = this.width;\r\n    var cost = this.model.isMinimization === true ? -variable.cost : variable.cost;\r\n    var priority = variable.priority;\r\n\r\n    // Setting reduced costs\r\n    var nOptionalObjectives = this.optionalObjectives.length;\r\n    if (nOptionalObjectives > 0) {\r\n        for (var o = 0; o < nOptionalObjectives; o += 1) {\r\n            this.optionalObjectives[o].reducedCosts[lastColumn] = 0;\r\n        }\r\n    }\r\n\r\n    if (priority === 0) {\r\n        this.matrix[0][lastColumn] = cost;\r\n    } else {\r\n        this.setOptionalObjective(priority, lastColumn, cost);\r\n        this.matrix[0][lastColumn] = 0;\r\n    }\r\n\r\n    // Setting all other column cells to 0\r\n    for (var r = 1; r <= lastRow; r += 1) {\r\n        this.matrix[r][lastColumn] = 0;\r\n    }\r\n\r\n    // Adding variable to trackers\r\n    var varIndex = variable.index;\r\n    this.varIndexByCol[lastColumn] = varIndex;\r\n\r\n    this.rowByVarIndex[varIndex] = -1;\r\n    this.colByVarIndex[varIndex] = lastColumn;\r\n\r\n    this.width += 1;\r\n};\r\n\r\n\r\nTableau.prototype.removeVariable = function (variable) {\r\n    var varIndex = variable.index;\r\n\r\n    // Putting the variable out of the base\r\n    var c = this._takeOutOfBase(varIndex);\r\n    var lastColumn = this.width - 1;\r\n    if (c !== lastColumn) {\r\n        var lastRow = this.height - 1;\r\n        for (var r = 0; r <= lastRow; r += 1) {\r\n            var row = this.matrix[r];\r\n            row[c] = row[lastColumn];\r\n        }\r\n\r\n        var nOptionalObjectives = this.optionalObjectives.length;\r\n        if (nOptionalObjectives > 0) {\r\n            for (var o = 0; o < nOptionalObjectives; o += 1) {\r\n                var reducedCosts = this.optionalObjectives[o].reducedCosts;\r\n                reducedCosts[c] = reducedCosts[lastColumn];\r\n            }\r\n        }\r\n\r\n        var switchVarIndex = this.varIndexByCol[lastColumn];\r\n        this.varIndexByCol[c] = switchVarIndex;\r\n        this.colByVarIndex[switchVarIndex] = c;\r\n    }\r\n\r\n    // Removing variable from non basic variables\r\n    this.varIndexByCol[lastColumn] = -1;\r\n    this.colByVarIndex[varIndex] = -1;\r\n\r\n    // Adding index into index manager\r\n    this.availableIndexes[this.availableIndexes.length] = varIndex;\r\n\r\n    variable.index = -1;\r\n\r\n    this.width -= 1;\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/dynamicModification.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/index.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global require*/\r\n/*global module*/\r\n__webpack_require__(/*! ./simplex.js */ \"./node_modules/javascript-lp-solver/src/Tableau/simplex.js\");\r\n__webpack_require__(/*! ./cuttingStrategies.js */ \"./node_modules/javascript-lp-solver/src/Tableau/cuttingStrategies.js\");\r\n__webpack_require__(/*! ./dynamicModification.js */ \"./node_modules/javascript-lp-solver/src/Tableau/dynamicModification.js\");\r\n__webpack_require__(/*! ./log.js */ \"./node_modules/javascript-lp-solver/src/Tableau/log.js\");\r\n__webpack_require__(/*! ./backup.js */ \"./node_modules/javascript-lp-solver/src/Tableau/backup.js\");\r\n__webpack_require__(/*! ./branchingStrategies.js */ \"./node_modules/javascript-lp-solver/src/Tableau/branchingStrategies.js\");\r\n__webpack_require__(/*! ./integerProperties.js */ \"./node_modules/javascript-lp-solver/src/Tableau/integerProperties.js\");\r\n\r\nmodule.exports = __webpack_require__(/*! ./Tableau.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Tableau.js\");\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/index.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/integerProperties.js":
/*!****************************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/integerProperties.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global require*/\r\nvar Tableau = __webpack_require__(/*! ./Tableau.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Tableau.js\");\r\n\r\nTableau.prototype.countIntegerValues = function(){\r\n    var count = 0;\r\n    for (var r = 1; r < this.height; r += 1) {\r\n        if (this.variablesPerIndex[this.varIndexByRow[r]].isInteger) {\r\n            var decimalPart = this.matrix[r][this.rhsColumn];\r\n            decimalPart = decimalPart - Math.floor(decimalPart);\r\n            if (decimalPart < this.precision && -decimalPart < this.precision) {\r\n                count += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    return count;\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype.isIntegral = function () {\r\n    var integerVariables = this.model.integerVariables;\r\n    var nIntegerVars = integerVariables.length;\r\n    for (var v = 0; v < nIntegerVars; v++) {\r\n        var varRow = this.rowByVarIndex[integerVariables[v].index];\r\n        if (varRow === -1) {\r\n            continue;\r\n        }\r\n\r\n        var varValue = this.matrix[varRow][this.rhsColumn];\r\n        if (Math.abs(varValue - Math.round(varValue)) > this.precision) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\n// Multiply all the fractional parts of variables supposed to be integer\r\nTableau.prototype.computeFractionalVolume = function(ignoreIntegerValues) {\r\n    var volume = -1;\r\n    // var integerVariables = this.model.integerVariables;\r\n    // var nIntegerVars = integerVariables.length;\r\n    // for (var v = 0; v < nIntegerVars; v++) {\r\n    //     var r = this.rowByVarIndex[integerVariables[v].index];\r\n    //     if (r === -1) {\r\n    //         continue;\r\n    //     }\r\n    //     var rhs = this.matrix[r][this.rhsColumn];\r\n    //     rhs = Math.abs(rhs);\r\n    //     var decimalPart = Math.min(rhs - Math.floor(rhs), Math.floor(rhs + 1));\r\n    //     if (decimalPart < this.precision) {\r\n    //         if (!ignoreIntegerValues) {\r\n    //             return 0;\r\n    //         }\r\n    //     } else {\r\n    //         if (volume === -1) {\r\n    //             volume = rhs;\r\n    //         } else {\r\n    //             volume *= rhs;\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    for (var r = 1; r < this.height; r += 1) {\r\n        if (this.variablesPerIndex[this.varIndexByRow[r]].isInteger) {\r\n            var rhs = this.matrix[r][this.rhsColumn];\r\n            rhs = Math.abs(rhs);\r\n            var decimalPart = Math.min(rhs - Math.floor(rhs), Math.floor(rhs + 1));\r\n            if (decimalPart < this.precision) {\r\n                if (!ignoreIntegerValues) {\r\n                    return 0;\r\n                }\r\n            } else {\r\n                if (volume === -1) {\r\n                    volume = rhs;\r\n                } else {\r\n                    volume *= rhs;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (volume === -1){\r\n        return 0;\r\n    }\r\n    return volume;\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/integerProperties.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/log.js":
/*!**************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/log.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global require*/\r\n/*global console*/\r\nvar Tableau = __webpack_require__(/*! ./Tableau.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Tableau.js\");\r\n\r\n//-------------------------------------------------------------------\r\n// Description: Display a tableau matrix\r\n//              and additional tableau information\r\n//\r\n//-------------------------------------------------------------------\r\nTableau.prototype.log = function (message, force) {\r\n    if (false) // removed by dead control flow\n{}\r\n\r\n    console.log(\"****\", message, \"****\");\r\n    console.log(\"Nb Variables\", this.width - 1);\r\n    console.log(\"Nb Constraints\", this.height - 1);\r\n    // console.log(\"Variable Ids\", this.variablesPerIndex);\r\n    console.log(\"Basic Indexes\", this.varIndexByRow);\r\n    console.log(\"Non Basic Indexes\", this.varIndexByCol);\r\n    console.log(\"Rows\", this.rowByVarIndex);\r\n    console.log(\"Cols\", this.colByVarIndex);\r\n\r\n    var digitPrecision = 5;\r\n\r\n    // Variable declaration\r\n    var varNameRowString = \"\",\r\n        spacePerColumn = [\" \"],\r\n        j,\r\n        c,\r\n        s,\r\n        r,\r\n        variable,\r\n        varIndex,\r\n        varName,\r\n        varNameLength,\r\n        nSpaces,\r\n        valueSpace,\r\n        nameSpace;\r\n\r\n    var row,\r\n        rowString;\r\n\r\n    for (c = 1; c < this.width; c += 1) {\r\n        varIndex = this.varIndexByCol[c];\r\n        variable = this.variablesPerIndex[varIndex];\r\n        if (variable === undefined) {\r\n            varName = \"c\" + varIndex;\r\n        } else {\r\n            varName = variable.id;\r\n        }\r\n\r\n        varNameLength = varName.length;\r\n        nSpaces = Math.abs(varNameLength - 5);\r\n        valueSpace = \" \";\r\n        nameSpace = \"\\t\";\r\n\r\n        ///////////\r\n        /*valueSpace = \" \";\r\n        nameSpace = \" \";\r\n\r\n        for (s = 0; s < nSpaces; s += 1) {\r\n            if (varNameLength > 5) {\r\n                valueSpace += \" \";\r\n            } else {\r\n                nameSpace += \" \";\r\n            }\r\n        }*/\r\n\r\n        ///////////\r\n        if (varNameLength > 5) {\r\n            valueSpace += \" \";\r\n        } else {\r\n            nameSpace += \"\\t\";\r\n        }\r\n\r\n        spacePerColumn[c] = valueSpace;\r\n\r\n        varNameRowString += nameSpace + varName;\r\n    }\r\n    console.log(varNameRowString);\r\n\r\n    var signSpace;\r\n\r\n    // Displaying reduced costs\r\n    var firstRow = this.matrix[this.costRowIndex];\r\n    var firstRowString = \"\\t\";\r\n\r\n    ///////////\r\n    /*for (j = 1; j < this.width; j += 1) {\r\n        signSpace = firstRow[j] < 0 ? \"\" : \" \";\r\n        firstRowString += signSpace;\r\n        firstRowString += spacePerColumn[j];\r\n        firstRowString += firstRow[j].toFixed(2);\r\n    }\r\n    signSpace = firstRow[0] < 0 ? \"\" : \" \";\r\n    firstRowString += signSpace + spacePerColumn[0] +\r\n        firstRow[0].toFixed(2);\r\n    console.log(firstRowString + \" Z\");*/\r\n\r\n    ///////////\r\n    for (j = 1; j < this.width; j += 1) {\r\n        signSpace = \"\\t\";\r\n        firstRowString += signSpace;\r\n        firstRowString += spacePerColumn[j];\r\n        firstRowString += firstRow[j].toFixed(digitPrecision);\r\n    }\r\n    signSpace = \"\\t\";\r\n    firstRowString += signSpace + spacePerColumn[0] +\r\n        firstRow[0].toFixed(digitPrecision);\r\n    console.log(firstRowString + \"\\tZ\");\r\n\r\n\r\n    // Then the basic variable rowByVarIndex\r\n    for (r = 1; r < this.height; r += 1) {\r\n        row = this.matrix[r];\r\n        rowString = \"\\t\";\r\n\r\n        ///////////\r\n        /*for (c = 1; c < this.width; c += 1) {\r\n            signSpace = row[c] < 0 ? \"\" : \" \";\r\n            rowString += signSpace + spacePerColumn[c] + row[c].toFixed(2);\r\n        }\r\n        signSpace = row[0] < 0 ? \"\" : \" \";\r\n        rowString += signSpace + spacePerColumn[0] + row[0].toFixed(2);*/\r\n\r\n        ///////////\r\n        for (c = 1; c < this.width; c += 1) {\r\n            signSpace = \"\\t\";\r\n            rowString += signSpace + spacePerColumn[c] + row[c].toFixed(digitPrecision);\r\n        }\r\n        signSpace = \"\\t\";\r\n        rowString += signSpace + spacePerColumn[0] + row[0].toFixed(digitPrecision);\r\n\r\n\r\n        varIndex = this.varIndexByRow[r];\r\n        variable = this.variablesPerIndex[varIndex];\r\n        if (variable === undefined) {\r\n            varName = \"c\" + varIndex;\r\n        } else {\r\n            varName = variable.id;\r\n        }\r\n        console.log(rowString + \"\\t\" + varName);\r\n    }\r\n    console.log(\"\");\r\n\r\n    // Then reduced costs for optional objectives\r\n    var nOptionalObjectives = this.optionalObjectives.length;\r\n    if (nOptionalObjectives > 0) {\r\n        console.log(\"    Optional objectives:\");\r\n        for (var o = 0; o < nOptionalObjectives; o += 1) {\r\n            var reducedCosts = this.optionalObjectives[o].reducedCosts;\r\n            var reducedCostsString = \"\";\r\n            for (j = 1; j < this.width; j += 1) {\r\n                signSpace = reducedCosts[j] < 0 ? \"\" : \" \";\r\n                reducedCostsString += signSpace;\r\n                reducedCostsString += spacePerColumn[j];\r\n                reducedCostsString += reducedCosts[j].toFixed(digitPrecision);\r\n            }\r\n            signSpace = reducedCosts[0] < 0 ? \"\" : \" \";\r\n            reducedCostsString += signSpace + spacePerColumn[0] +\r\n                reducedCosts[0].toFixed(digitPrecision);\r\n            console.log(reducedCostsString + \" z\" + o);\r\n        }\r\n    }\r\n    console.log(\"Feasible?\", this.feasible);\r\n    console.log(\"evaluation\", this.evaluation);\r\n\r\n    return this;\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/log.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Tableau/simplex.js":
/*!******************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Tableau/simplex.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n\r\nvar Tableau = __webpack_require__(/*! ./Tableau.js */ \"./node_modules/javascript-lp-solver/src/Tableau/Tableau.js\");\r\n\r\n//-------------------------------------------------------------------\r\n// Function: solve\r\n// Detail: Main function, linear programming solver\r\n//-------------------------------------------------------------------\r\nTableau.prototype.simplex = function () {\r\n    // Bounded until proven otherwise\r\n    this.bounded = true;\r\n\r\n    // Execute Phase 1 to obtain a Basic Feasible Solution (BFS)\r\n    this.phase1();\r\n\r\n    // Execute Phase 2\r\n    if (this.feasible === true) {\r\n        // Running simplex on Initial Basic Feasible Solution (BFS)\r\n        // N.B current solution is feasible\r\n        this.phase2();\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n// Description: Convert a non standard form tableau\r\n//              to a standard form tableau by eliminating\r\n//              all negative values in the Right Hand Side (RHS)\r\n//              This results in a Basic Feasible Solution (BFS)\r\n//\r\n//-------------------------------------------------------------------\r\nTableau.prototype.phase1 = function () {\r\n    var debugCheckForCycles = this.model.checkForCycles;\r\n    var varIndexesCycle = [];\r\n\r\n    var matrix = this.matrix;\r\n    var rhsColumn = this.rhsColumn;\r\n    var lastColumn = this.width - 1;\r\n    var lastRow = this.height - 1;\r\n\r\n    var unrestricted;\r\n    var iterations = 0;\r\n\r\n    while (true) {\r\n        // ******************************************\r\n        // ** PHASE 1 - STEP  1 : FIND PIVOT ROW **\r\n        //\r\n        // Selecting leaving variable (feasibility condition):\r\n        // Basic variable with most negative value\r\n        //\r\n        // ******************************************\r\n        var leavingRowIndex = 0;\r\n        var rhsValue = -this.precision;\r\n        for (var r = 1; r <= lastRow; r++) {\r\n            unrestricted = this.unrestrictedVars[this.varIndexByRow[r]] === true;\r\n            \r\n            //\r\n            // *Don't think this does anything...\r\n            //\r\n            //if (unrestricted) {\r\n            //    continue;\r\n            //}\r\n\r\n            var value = matrix[r][rhsColumn];\r\n            if (value < rhsValue) {\r\n                rhsValue = value;\r\n                leavingRowIndex = r;\r\n            }\r\n        }\r\n\r\n        // If nothing is strictly smaller than 0; we're done with phase 1.\r\n        if (leavingRowIndex === 0) {\r\n            // Feasible, champagne!\r\n            this.feasible = true;\r\n            return iterations;\r\n        }\r\n\r\n\r\n        // ******************************************\r\n        // ** PHASE 1 - STEP  2 : FIND PIVOT COLUMN **\r\n        //\r\n        //\r\n        // ******************************************\r\n        // Selecting entering variable\r\n        var enteringColumn = 0;\r\n        var maxQuotient = -Infinity;\r\n        var costRow = matrix[0];\r\n        var leavingRow = matrix[leavingRowIndex];\r\n        for (var c = 1; c <= lastColumn; c++) {\r\n            var coefficient = leavingRow[c];\r\n            //\r\n            // *Don't think this does anything...\r\n            //\r\n            //if (-this.precision < coefficient && coefficient < this.precision) {\r\n            //    continue;\r\n            //}\r\n            //\r\n\r\n            unrestricted = this.unrestrictedVars[this.varIndexByCol[c]] === true;\r\n            if (unrestricted || coefficient < -this.precision) {\r\n                var quotient = -costRow[c] / coefficient;\r\n                if (maxQuotient < quotient) {\r\n                    maxQuotient = quotient;\r\n                    enteringColumn = c;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (enteringColumn === 0) {\r\n            // Not feasible\r\n            this.feasible = false;\r\n            return iterations;\r\n        }\r\n\r\n        if(debugCheckForCycles){\r\n            varIndexesCycle.push([this.varIndexByRow[leavingRowIndex], this.varIndexByCol[enteringColumn]]);\r\n\r\n            var cycleData = this.checkForCycles(varIndexesCycle);\r\n            if(cycleData.length > 0){\r\n\r\n                this.model.messages.push(\"Cycle in phase 1\");\r\n                this.model.messages.push(\"Start :\"+ cycleData[0]);\r\n                this.model.messages.push(\"Length :\"+ cycleData[1]);\r\n\r\n                this.feasible = false;\r\n                return iterations;\r\n                \r\n            }\r\n        }\r\n\r\n        this.pivot(leavingRowIndex, enteringColumn);\r\n        iterations += 1;\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n// Description: Apply simplex to obtain optimal solution\r\n//              used as phase2 of the simplex\r\n//\r\n//-------------------------------------------------------------------\r\nTableau.prototype.phase2 = function () {\r\n    var debugCheckForCycles = this.model.checkForCycles;\r\n    var varIndexesCycle = [];\r\n\r\n    var matrix = this.matrix;\r\n    var rhsColumn = this.rhsColumn;\r\n    var lastColumn = this.width - 1;\r\n    var lastRow = this.height - 1;\r\n\r\n    var precision = this.precision;\r\n    var nOptionalObjectives = this.optionalObjectives.length;\r\n    var optionalCostsColumns = null;\r\n\r\n    var iterations = 0;\r\n    var reducedCost, unrestricted;\r\n\r\n    while (true) {\r\n        var costRow = matrix[this.costRowIndex];\r\n\r\n        // Selecting entering variable (optimality condition)\r\n        if (nOptionalObjectives > 0) {\r\n            optionalCostsColumns = [];\r\n        }\r\n\r\n        var enteringColumn = 0;\r\n        var enteringValue = precision;\r\n        var isReducedCostNegative = false;\r\n        for (var c = 1; c <= lastColumn; c++) {\r\n            reducedCost = costRow[c];\r\n            unrestricted = this.unrestrictedVars[this.varIndexByCol[c]] === true;\r\n\r\n            if (nOptionalObjectives > 0 && -precision < reducedCost && reducedCost < precision) {\r\n                optionalCostsColumns.push(c);\r\n                continue;\r\n            }\r\n\r\n            if (unrestricted && reducedCost < 0) {\r\n                if (-reducedCost > enteringValue) {\r\n                    enteringValue = -reducedCost;\r\n                    enteringColumn = c;\r\n                    isReducedCostNegative = true;\r\n                }\r\n                continue;\r\n            }\r\n\r\n            if (reducedCost > enteringValue) {\r\n                enteringValue = reducedCost;\r\n                enteringColumn = c;\r\n                isReducedCostNegative = false;\r\n            }\r\n        }\r\n\r\n        if (nOptionalObjectives > 0) {\r\n            // There exist optional improvable objectives\r\n            var o = 0;\r\n            while (enteringColumn === 0 && optionalCostsColumns.length > 0 && o < nOptionalObjectives) {\r\n                var optionalCostsColumns2 = [];\r\n                var reducedCosts = this.optionalObjectives[o].reducedCosts;\r\n\r\n                enteringValue = precision;\r\n\r\n                for (var i = 0; i < optionalCostsColumns.length; i++) {\r\n                    c = optionalCostsColumns[i];\r\n\r\n                    reducedCost = reducedCosts[c];\r\n                    unrestricted = this.unrestrictedVars[this.varIndexByCol[c]] === true;\r\n\r\n                    if (-precision < reducedCost && reducedCost < precision) {\r\n                        optionalCostsColumns2.push(c);\r\n                        continue;\r\n                    }\r\n\r\n                    if (unrestricted && reducedCost < 0) {\r\n                        if (-reducedCost > enteringValue) {\r\n                            enteringValue = -reducedCost;\r\n                            enteringColumn = c;\r\n                            isReducedCostNegative = true;\r\n                        }\r\n                        continue;\r\n                    }\r\n\r\n                    if (reducedCost > enteringValue) {\r\n                        enteringValue = reducedCost;\r\n                        enteringColumn = c;\r\n                        isReducedCostNegative = false;\r\n                    }\r\n                }\r\n                optionalCostsColumns = optionalCostsColumns2;\r\n                o += 1;\r\n            }\r\n        }\r\n\r\n\r\n        // If no entering column could be found we're done with phase 2.\r\n        if (enteringColumn === 0) {\r\n            this.setEvaluation();\r\n            this.simplexIters += 1;\r\n            return iterations;\r\n        }\r\n\r\n        // Selecting leaving variable\r\n        var leavingRow = 0;\r\n        var minQuotient = Infinity;\r\n\r\n        var varIndexByRow = this.varIndexByRow;\r\n\r\n        for (var r = 1; r <= lastRow; r++) {\r\n            var row = matrix[r];\r\n            var rhsValue = row[rhsColumn];\r\n            var colValue = row[enteringColumn];\r\n\r\n            if (-precision < colValue && colValue < precision) {\r\n                continue;\r\n            }\r\n\r\n            if (colValue > 0 && precision > rhsValue && rhsValue > -precision) {\r\n                minQuotient = 0;\r\n                leavingRow = r;\r\n                break;\r\n            }\r\n\r\n            var quotient = isReducedCostNegative ? -rhsValue / colValue : rhsValue / colValue;\r\n            if (quotient > precision && minQuotient > quotient) {\r\n                minQuotient = quotient;\r\n                leavingRow = r;\r\n            }\r\n        }\r\n\r\n        if (minQuotient === Infinity) {\r\n            // optimal value is -Infinity\r\n            this.evaluation = -Infinity;\r\n            this.bounded = false;\r\n            this.unboundedVarIndex = this.varIndexByCol[enteringColumn];\r\n            return iterations;\r\n        }\r\n\r\n        if(debugCheckForCycles){\r\n            varIndexesCycle.push([this.varIndexByRow[leavingRow], this.varIndexByCol[enteringColumn]]);\r\n\r\n            var cycleData = this.checkForCycles(varIndexesCycle);\r\n            if(cycleData.length > 0){\r\n\r\n                this.model.messages.push(\"Cycle in phase 2\");\r\n                this.model.messages.push(\"Start :\"+ cycleData[0]);\r\n                this.model.messages.push(\"Length :\"+ cycleData[1]);\r\n\r\n                this.feasible = false;\r\n                return iterations;\r\n            }\r\n        }\r\n\r\n        this.pivot(leavingRow, enteringColumn, true);\r\n        iterations += 1;\r\n    }\r\n};\r\n\r\n// Array holding the column indexes for which the value is not null\r\n// on the pivot row\r\n// Shared by all tableaux for smaller overhead and lower memory usage\r\nvar nonZeroColumns = [];\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// Description: Execute pivot operations over a 2d array,\r\n//          on a given row, and column\r\n//\r\n//-------------------------------------------------------------------\r\nTableau.prototype.pivot = function (pivotRowIndex, pivotColumnIndex) {\r\n    var matrix = this.matrix;\r\n\r\n    var quotient = matrix[pivotRowIndex][pivotColumnIndex];\r\n\r\n    var lastRow = this.height - 1;\r\n    var lastColumn = this.width - 1;\r\n\r\n    var leavingBasicIndex = this.varIndexByRow[pivotRowIndex];\r\n    var enteringBasicIndex = this.varIndexByCol[pivotColumnIndex];\r\n\r\n    this.varIndexByRow[pivotRowIndex] = enteringBasicIndex;\r\n    this.varIndexByCol[pivotColumnIndex] = leavingBasicIndex;\r\n\r\n    this.rowByVarIndex[enteringBasicIndex] = pivotRowIndex;\r\n    this.rowByVarIndex[leavingBasicIndex] = -1;\r\n\r\n    this.colByVarIndex[enteringBasicIndex] = -1;\r\n    this.colByVarIndex[leavingBasicIndex] = pivotColumnIndex;\r\n\r\n    // Divide everything in the target row by the element @\r\n    // the target column\r\n    var pivotRow = matrix[pivotRowIndex];\r\n    var nNonZeroColumns = 0;\r\n    for (var c = 0; c <= lastColumn; c++) {\r\n        if (!(pivotRow[c] >= -1e-16 && pivotRow[c] <= 1e-16)) {\r\n            pivotRow[c] /= quotient;\r\n            nonZeroColumns[nNonZeroColumns] = c;\r\n            nNonZeroColumns += 1;\r\n        } else {\r\n            pivotRow[c] = 0;\r\n        }\r\n    }\r\n    pivotRow[pivotColumnIndex] = 1 / quotient;\r\n\r\n    // for every row EXCEPT the pivot row,\r\n    // set the value in the pivot column = 0 by\r\n    // multiplying the value of all elements in the objective\r\n    // row by ... yuck... just look below; better explanation later\r\n    var coefficient, i, v0;\r\n    var precision = this.precision;\r\n    \r\n    // //////////////////////////////////////\r\n    //\r\n    // This is step 2 of the pivot function.\r\n    // It is, by far, the most expensive piece of\r\n    // this whole process where the code can be optimized (faster code)\r\n    // without changing the whole algorithm (fewer cycles)\r\n    //\r\n    // 1.) For every row but the pivot row\r\n    // 2.) Update each column to \r\n    //    a.) itself\r\n    //        less\r\n    //    b.) active-row's pivot column\r\n    //        times\r\n    //    c.) whatever-the-hell this is: nonZeroColumns[i]\r\n    // \r\n    // //////////////////////////////////////\r\n    // console.time(\"step-2\");\r\n    for (var r = 0; r <= lastRow; r++) {\r\n        if (r !== pivotRowIndex) {\r\n            //if(1 === 1){\r\n            if(!(matrix[r][pivotColumnIndex] >= -1e-16 && matrix[r][pivotColumnIndex] <= 1e-16)){\r\n            //if((matrix[r][pivotColumnIndex] !== 0)){\r\n                // Set reference to the row we're working on\r\n                //\r\n                var row = matrix[r];\r\n\r\n                // Catch the coefficient that we're going to end up dividing everything by\r\n                coefficient = row[pivotColumnIndex];\r\n                \r\n                // No point Burning Cycles if\r\n                // Zero to the thing\r\n                if (!(coefficient >= -1e-16 && coefficient <= 1e-16)) {\r\n                    for (i = 0; i < nNonZeroColumns; i++) {\r\n                        c = nonZeroColumns[i];\r\n                        // No point in doing math if you're just adding\r\n                        // Zero to the thing\r\n                        v0 = pivotRow[c];\r\n                        if (!(v0 >= -1e-16 && v0 <= 1e-16)) {\r\n                            row[c] = row[c] - coefficient * v0;\r\n                        } else {\r\n                            if(v0 !== 0){\r\n                                pivotRow[c] = 0;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    row[pivotColumnIndex] = -coefficient / quotient;\r\n                } else {\r\n                    if(coefficient !== 0){\r\n                        row[pivotColumnIndex] = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // console.timeEnd(\"step-2\");\r\n\r\n    var nOptionalObjectives = this.optionalObjectives.length;\r\n    if (nOptionalObjectives > 0) {\r\n        for (var o = 0; o < nOptionalObjectives; o += 1) {\r\n            var reducedCosts = this.optionalObjectives[o].reducedCosts;\r\n            coefficient = reducedCosts[pivotColumnIndex];\r\n            if (coefficient !== 0) {\r\n                for (i = 0; i < nNonZeroColumns; i++) {\r\n                    c = nonZeroColumns[i];\r\n                    v0 = pivotRow[c];\r\n                    if (v0 !== 0) {\r\n                        reducedCosts[c] = reducedCosts[c] - coefficient * v0;\r\n                    }\r\n                }\r\n\r\n                reducedCosts[pivotColumnIndex] = -coefficient / quotient;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nTableau.prototype.checkForCycles = function (varIndexes) {\r\n    for (var e1 = 0; e1 < varIndexes.length - 1; e1++) {\r\n        for (var e2 = e1 + 1; e2 < varIndexes.length; e2++) {\r\n            var elt1 = varIndexes[e1];\r\n            var elt2 = varIndexes[e2];\r\n            if (elt1[0] === elt2[0] && elt1[1] === elt2[1]) {\r\n                if (e2 - e1 > varIndexes.length - e2) {\r\n                    break;\r\n                }\r\n                var cycleFound = true;\r\n                for (var i = 1; i < e2 - e1; i++) {\r\n                    var tmp1 = varIndexes[e1+i];\r\n                    var tmp2 = varIndexes[e2+i];\r\n                    if(tmp1[0] !== tmp2[0] || tmp1[1] !== tmp2[1]) {\r\n                        cycleFound = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (cycleFound) {\r\n                    return [e1, e2 - e1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Tableau/simplex.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/Validation.js":
/*!*************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/Validation.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n/*global exports*/\r\n\r\n\r\n// All functions in this module that\r\n// get exported to main ***MUST***\r\n// return a functional LPSolve JSON style\r\n// model or throw an error\r\n\r\nexports.CleanObjectiveAttributes = function(model){\r\n  // Test to see if the objective attribute\r\n  // is also used by one of the constraints\r\n  //\r\n  // If so...create a new attribute on each\r\n  // variable\r\n    var fakeAttr,\r\n        x, z;\r\n  \r\n    if(typeof model.optimize === \"string\"){\r\n        if(model.constraints[model.optimize]){\r\n            // Create the new attribute\r\n            fakeAttr = Math.random();\r\n\r\n            // Go over each variable and check\r\n            for(x in model.variables){\r\n                // Is it there?\r\n                if(model.variables[x][model.optimize]){\r\n                    model.variables[x][fakeAttr] = model.variables[x][model.optimize];\r\n                }\r\n            }\r\n\r\n        // Now that we've cleaned up the variables\r\n        // we need to clean up the constraints\r\n            model.constraints[fakeAttr] = model.constraints[model.optimize];\r\n            delete model.constraints[model.optimize];\r\n            return model;\r\n        } else {    \r\n            return model;\r\n        }  \r\n    } else {\r\n        // We're assuming its an object?\r\n        for(z in model.optimize){\r\n            if(model.constraints[z]){\r\n            // Make sure that the constraint\r\n            // being optimized isn't constrained\r\n            // by an equity collar\r\n                if(model.constraints[z] === \"equal\"){\r\n                    // Its constrained by an equal sign;\r\n                    // delete that objective and move on\r\n                    delete model.optimize[z];\r\n                \r\n                } else {\r\n                    // Create the new attribute\r\n                    fakeAttr = Math.random();\r\n\r\n                    // Go over each variable and check\r\n                    for(x in model.variables){\r\n                        // Is it there?\r\n                        if(model.variables[x][z]){\r\n                            model.variables[x][fakeAttr] = model.variables[x][z];\r\n                        }\r\n                    }\r\n                // Now that we've cleaned up the variables\r\n                // we need to clean up the constraints\r\n                    model.constraints[fakeAttr] = model.constraints[z];\r\n                    delete model.constraints[z];            \r\n                }\r\n            }    \r\n        }\r\n        return model;\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/Validation.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/expressions.js":
/*!**************************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/expressions.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Variable(id, cost, index, priority) {\r\n    this.id = id;\r\n    this.cost = cost;\r\n    this.index = index;\r\n    this.value = 0;\r\n    this.priority = priority;\r\n}\r\n\r\nfunction IntegerVariable(id, cost, index, priority) {\r\n    Variable.call(this, id, cost, index, priority);\r\n}\r\nIntegerVariable.prototype.isInteger = true;\r\n\r\nfunction SlackVariable(id, index) {\r\n    Variable.call(this, id, 0, index, 0);\r\n}\r\nSlackVariable.prototype.isSlack = true;\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Term(variable, coefficient) {\r\n    this.variable = variable;\r\n    this.coefficient = coefficient;\r\n}\r\n\r\nfunction createRelaxationVariable(model, weight, priority) {\r\n    if (priority === 0 || priority === \"required\") {\r\n        return null;\r\n    }\r\n\r\n    weight = weight || 1;\r\n    priority = priority || 1;\r\n\r\n    if (model.isMinimization === false) {\r\n        weight = -weight;\r\n    }\r\n\r\n    return model.addVariable(weight, \"r\" + (model.relaxationIndex++), false, false, priority);\r\n}\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Constraint(rhs, isUpperBound, index, model) {\r\n    this.slack = new SlackVariable(\"s\" + index, index);\r\n    this.index = index;\r\n    this.model = model;\r\n    this.rhs = rhs;\r\n    this.isUpperBound = isUpperBound;\r\n\r\n    this.terms = [];\r\n    this.termsByVarIndex = {};\r\n\r\n    // Error variable in case the constraint is relaxed\r\n    this.relaxation = null;\r\n}\r\n\r\nConstraint.prototype.addTerm = function (coefficient, variable) {\r\n    var varIndex = variable.index;\r\n    var term = this.termsByVarIndex[varIndex];\r\n    if (term === undefined) {\r\n        // No term for given variable\r\n        term = new Term(variable, coefficient);\r\n        this.termsByVarIndex[varIndex] = term;\r\n        this.terms.push(term);\r\n        if (this.isUpperBound === true) {\r\n            coefficient = -coefficient;\r\n        }\r\n        this.model.updateConstraintCoefficient(this, variable, coefficient);\r\n    } else {\r\n        // Term for given variable already exists\r\n        // updating its coefficient\r\n        var newCoefficient = term.coefficient + coefficient;\r\n        this.setVariableCoefficient(newCoefficient, variable);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nConstraint.prototype.removeTerm = function (term) {\r\n    // TODO\r\n    return this;\r\n};\r\n\r\nConstraint.prototype.setRightHandSide = function (newRhs) {\r\n    if (newRhs !== this.rhs) {\r\n        var difference = newRhs - this.rhs;\r\n        if (this.isUpperBound === true) {\r\n            difference = -difference;\r\n        }\r\n\r\n        this.rhs = newRhs;\r\n        this.model.updateRightHandSide(this, difference);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nConstraint.prototype.setVariableCoefficient = function (newCoefficient, variable) {\r\n    var varIndex = variable.index;\r\n    if (varIndex === -1) {\r\n        console.warn(\"[Constraint.setVariableCoefficient] Trying to change coefficient of inexistant variable.\");\r\n        return;\r\n    }\r\n\r\n    var term = this.termsByVarIndex[varIndex];\r\n    if (term === undefined) {\r\n        // No term for given variable\r\n        this.addTerm(newCoefficient, variable);\r\n    } else {\r\n        // Term for given variable already exists\r\n        // updating its coefficient if changed\r\n        if (newCoefficient !== term.coefficient) {\r\n            var difference = newCoefficient - term.coefficient;\r\n            if (this.isUpperBound === true) {\r\n                difference = -difference;\r\n            }\r\n\r\n            term.coefficient = newCoefficient;\r\n            this.model.updateConstraintCoefficient(this, variable, difference);\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nConstraint.prototype.relax = function (weight, priority) {\r\n    this.relaxation = createRelaxationVariable(this.model, weight, priority);\r\n    this._relax(this.relaxation);\r\n};\r\n\r\nConstraint.prototype._relax = function (relaxationVariable) {\r\n    if (relaxationVariable === null) {\r\n        // Relaxation variable not created, priority was probably \"required\"\r\n        return;\r\n    }\r\n\r\n    if (this.isUpperBound) {\r\n        this.setVariableCoefficient(-1, relaxationVariable);\r\n    } else {\r\n        this.setVariableCoefficient(1, relaxationVariable);\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Equality(constraintUpper, constraintLower) {\r\n    this.upperBound = constraintUpper;\r\n    this.lowerBound = constraintLower;\r\n    this.model = constraintUpper.model;\r\n    this.rhs = constraintUpper.rhs;\r\n    this.relaxation = null;\r\n}\r\n\r\nEquality.prototype.isEquality = true;\r\n\r\nEquality.prototype.addTerm = function (coefficient, variable) {\r\n    this.upperBound.addTerm(coefficient, variable);\r\n    this.lowerBound.addTerm(coefficient, variable);\r\n    return this;\r\n};\r\n\r\nEquality.prototype.removeTerm = function (term) {\r\n    this.upperBound.removeTerm(term);\r\n    this.lowerBound.removeTerm(term);\r\n    return this;\r\n};\r\n\r\nEquality.prototype.setRightHandSide = function (rhs) {\r\n    this.upperBound.setRightHandSide(rhs);\r\n    this.lowerBound.setRightHandSide(rhs);\r\n    this.rhs = rhs;\r\n};\r\n\r\nEquality.prototype.relax = function (weight, priority) {\r\n    this.relaxation = createRelaxationVariable(this.model, weight, priority);\r\n    this.upperBound.relaxation = this.relaxation;\r\n    this.upperBound._relax(this.relaxation);\r\n    this.lowerBound.relaxation = this.relaxation;\r\n    this.lowerBound._relax(this.relaxation);\r\n};\r\n\r\n\r\nmodule.exports = {\r\n    Constraint: Constraint,\r\n    Variable: Variable,\r\n    IntegerVariable: IntegerVariable,\r\n    SlackVariable: SlackVariable,\r\n    Equality: Equality,\r\n    Term: Term\r\n};\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/expressions.js?");

/***/ }),

/***/ "./node_modules/javascript-lp-solver/src/main.js":
/*!*******************************************************!*\
  !*** ./node_modules/javascript-lp-solver/src/main.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n/*global setTimeout*/\r\n/*global self*/\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// SimplexJS\r\n// https://github.com/\r\n// An Object-Oriented Linear Programming Solver\r\n//\r\n// By Justin Wolcott (c)\r\n// Licensed under the MIT License.\r\n//-------------------------------------------------------------------\r\n\r\nvar Tableau = __webpack_require__(/*! ./Tableau/index.js */ \"./node_modules/javascript-lp-solver/src/Tableau/index.js\");\r\nvar Model = __webpack_require__(/*! ./Model */ \"./node_modules/javascript-lp-solver/src/Model.js\");\r\nvar branchAndCut = __webpack_require__(/*! ./Tableau/branchAndCut */ \"./node_modules/javascript-lp-solver/src/Tableau/branchAndCut.js\");\r\nvar expressions = __webpack_require__(/*! ./expressions.js */ \"./node_modules/javascript-lp-solver/src/expressions.js\");\r\nvar validation = __webpack_require__(/*! ./Validation */ \"./node_modules/javascript-lp-solver/src/Validation.js\");\r\nvar Constraint = expressions.Constraint;\r\nvar Variable = expressions.Variable;\r\nvar Numeral = expressions.Numeral;\r\nvar Term = expressions.Term;\r\nvar External = __webpack_require__(/*! ./External/main.js */ \"./node_modules/javascript-lp-solver/src/External/main.js\");\r\n\r\n// Place everything under the Solver Name Space\r\nvar Solver = function () {\r\n\r\n    \"use strict\";\r\n\r\n    this.Model = Model;\r\n    this.branchAndCut = branchAndCut;\r\n    this.Constraint = Constraint;\r\n    this.Variable = Variable;\r\n    this.Numeral = Numeral;\r\n    this.Term = Term;\r\n    this.Tableau = Tableau;\r\n    this.lastSolvedModel = null;\r\n\r\n    this.External = External;\r\n\r\n    /*************************************************************\r\n     * Method: Solve\r\n     * Scope: Public:\r\n     * Agruments:\r\n     *        model: The model we want solver to operate on\r\n     *        precision: If we're solving a MILP, how tight\r\n     *                   do we want to define an integer, given\r\n     *                   that 20.000000000000001 is not an integer.\r\n     *                   (defaults to 1e-9)\r\n     *            full: *get better description*\r\n     *        validate: if left blank, it will get ignored; otherwise\r\n     *                  it will run the model through all validation\r\n     *                  functions in the *Validate* module\r\n     **************************************************************/\r\n    this.Solve = function (model, precision, full, validate) {\r\n        //\r\n        // Run our validations on the model\r\n        // if the model doesn't have a validate\r\n        // attribute set to false\r\n        //\r\n        if(validate){\r\n            for(var test in validation){\r\n                model = validation[test](model);\r\n            }\r\n        }\r\n\r\n        // Make sure we at least have a model\r\n        if (!model) {\r\n            throw new Error(\"Solver requires a model to operate on\");\r\n        }\r\n\r\n        //\r\n        // If the objective function contains multiple objectives,\r\n        // pass it to the multi-solver thing...\r\n        //\r\n        if(typeof model.optimize === \"object\"){\r\n            if(Object.keys(model.optimize > 1)){\r\n                return __webpack_require__(/*! ./Polyopt */ \"./node_modules/javascript-lp-solver/src/Polyopt.js\")(this, model);\r\n            }\r\n        }\r\n\r\n// /////////////////////////////////////////////////////////////////////\r\n// *********************************************************************\r\n// START\r\n// Try our hand at handling external solvers...\r\n// START\r\n// *********************************************************************\r\n// /////////////////////////////////////////////////////////////////////\r\n        if(model.external){\r\n\r\n            var solvers = Object.keys(External);\r\n            solvers = JSON.stringify(solvers);\r\n            \r\n            //\r\n            // The model needs to have a \"solver\" attribute if nothing else\r\n            // for us to pass data into\r\n            //\r\n            if(!model.external.solver){\r\n                throw new Error(\"The model you provided has an 'external' object that doesn't have a solver attribute. Use one of the following:\" + solvers);\r\n            }\r\n            \r\n            //\r\n            // If the solver they request doesn't exist; provide them\r\n            // with a list of possible options:\r\n            //\r\n            if(!External[model.external.solver]){\r\n                throw new Error(\"No support (yet) for \" + model.external.solver + \". Please use one of these instead:\" + solvers);\r\n            }\r\n            \r\n            return External[model.external.solver].solve(model);\r\n            \r\n\r\n// /////////////////////////////////////////////////////////////////////\r\n// *********************************************************************\r\n//  END\r\n// Try our hand at handling external solvers...\r\n//  END\r\n// *********************************************************************\r\n// /////////////////////////////////////////////////////////////////////\r\n\r\n        } else {\r\n\r\n            if (model instanceof Model === false) {\r\n                model = new Model(precision).loadJson(model);\r\n            }\r\n\r\n            var solution = model.solve();\r\n            this.lastSolvedModel = model;\r\n            solution.solutionSet = solution.generateSolutionSet();\r\n\r\n            // If the user asks for a full breakdown\r\n            // of the tableau (e.g. full === true)\r\n            // this will return it\r\n            if (full) {\r\n                return solution;\r\n            } else {\r\n                // Otherwise; give the user the bare\r\n                // minimum of info necessary to carry on\r\n\r\n                var store = {};\r\n\r\n                // 1.) Add in feasibility to store;\r\n                store.feasible = solution.feasible;\r\n\r\n                // 2.) Add in the objective value\r\n                store.result = solution.evaluation;\r\n\r\n                store.bounded = solution.bounded;\r\n                \r\n                if(solution._tableau.__isIntegral){\r\n                    store.isIntegral = true;\r\n                }\r\n\r\n                // 3.) Load all of the variable values\r\n                Object.keys(solution.solutionSet)\r\n                    .forEach(function (d) {\r\n                        //\r\n                        // When returning data in standard format,\r\n                        // Remove all 0's\r\n                        //\r\n                        if(solution.solutionSet[d] !== 0){\r\n                            store[d] = solution.solutionSet[d];\r\n                        }\r\n                        \r\n                    });\r\n\r\n                return store;\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /*************************************************************\r\n     * Method: ReformatLP\r\n     * Scope: Public:\r\n     * Agruments: model: The model we want solver to operate on\r\n     * Purpose: Convert a friendly JSON model into a model for a\r\n     *          real solving library...in this case\r\n     *          lp_solver\r\n     **************************************************************/\r\n    this.ReformatLP = __webpack_require__(/*! ./External/lpsolve/Reformat.js */ \"./node_modules/javascript-lp-solver/src/External/lpsolve/Reformat.js\");\r\n\r\n\r\n     /*************************************************************\r\n     * Method: MultiObjective\r\n     * Scope: Public:\r\n     * Agruments:\r\n     *        model: The model we want solver to operate on\r\n     *        detail: if false, or undefined; it will return the\r\n     *                result of using the mid-point formula; otherwise\r\n     *                it will return an object containing:\r\n     *\r\n     *                1. The results from the mid point formula\r\n     *                2. The solution for each objective solved\r\n     *                   in isolation (pareto)\r\n     *                3. The min and max of each variable along\r\n     *                   the frontier of the polytope (ranges)\r\n     * Purpose: Solve a model with multiple objective functions.\r\n     *          Since a potential infinite number of solutions exist\r\n     *          this naively returns the mid-point between\r\n     *\r\n     * Note: The model has to be changed a little to work with this.\r\n     *       Before an *opType* was required. No more. The objective\r\n     *       attribute of the model is now an object instead of a\r\n     *       string.\r\n     *\r\n     *  *EXAMPLE MODEL*\r\n     *\r\n     *   model = {\r\n     *       optimize: {scotch: \"max\", soda: \"max\"},\r\n     *       constraints: {fluid: {equal: 100}},\r\n     *       variables: {\r\n     *           scotch: {fluid: 1, scotch: 1},\r\n     *           soda: {fluid: 1, soda: 1}\r\n     *       }\r\n     *   }\r\n     *\r\n     **************************************************************/\r\n    this.MultiObjective = function(model){\r\n        return __webpack_require__(/*! ./Polyopt */ \"./node_modules/javascript-lp-solver/src/Polyopt.js\")(this, model);\r\n    };\r\n};\r\n\r\n// var define = define || undefined;\r\n// var window = window || undefined;\r\n\r\n// If the project is loading through require.js, use `define` and exit\r\nif (true) {\r\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n        return new Solver();\r\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n// If the project doesn't see define, but sees window, put solver on window\r\n} else // removed by dead control flow\n{}\r\n// Ensure that its available in node.js env\r\nmodule.exports = new Solver();\r\n\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/javascript-lp-solver/src/main.js?");

/***/ }),

/***/ "./node_modules/jszip/dist/jszip.min.js":
/*!**********************************************!*\
  !*** ./node_modules/jszip/dist/jszip.min.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*!\n\nJSZip v3.10.1 - A JavaScript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/main/LICENSE\n*/\n\n!function(e){if(true)module.exports=e();else // removed by dead control flow\n{}}(function(){return function s(a,o,h){function u(r,e){if(!o[r]){if(!a[r]){var t=undefined;if(!e&&t)return require(r,!0);if(l)return l(r,!0);var n=new Error(\"Cannot find module '\"+r+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}var i=o[r]={exports:{}};a[r][0].call(i.exports,function(e){var t=a[r][1][e];return u(t||e)},i,i.exports,s,a,o,h)}return o[r].exports}for(var l=undefined,e=0;e<h.length;e++)u(h[e]);return u}({1:[function(e,t,r){\"use strict\";var d=e(\"./utils\"),c=e(\"./support\"),p=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";r.encode=function(e){for(var t,r,n,i,s,a,o,h=[],u=0,l=e.length,f=l,c=\"string\"!==d.getTypeOf(e);u<e.length;)f=l-u,n=c?(t=e[u++],r=u<l?e[u++]:0,u<l?e[u++]:0):(t=e.charCodeAt(u++),r=u<l?e.charCodeAt(u++):0,u<l?e.charCodeAt(u++):0),i=t>>2,s=(3&t)<<4|r>>4,a=1<f?(15&r)<<2|n>>6:64,o=2<f?63&n:64,h.push(p.charAt(i)+p.charAt(s)+p.charAt(a)+p.charAt(o));return h.join(\"\")},r.decode=function(e){var t,r,n,i,s,a,o=0,h=0,u=\"data:\";if(e.substr(0,u.length)===u)throw new Error(\"Invalid base64 input, it looks like a data url.\");var l,f=3*(e=e.replace(/[^A-Za-z0-9+/=]/g,\"\")).length/4;if(e.charAt(e.length-1)===p.charAt(64)&&f--,e.charAt(e.length-2)===p.charAt(64)&&f--,f%1!=0)throw new Error(\"Invalid base64 input, bad content length.\");for(l=c.uint8array?new Uint8Array(0|f):new Array(0|f);o<e.length;)t=p.indexOf(e.charAt(o++))<<2|(i=p.indexOf(e.charAt(o++)))>>4,r=(15&i)<<4|(s=p.indexOf(e.charAt(o++)))>>2,n=(3&s)<<6|(a=p.indexOf(e.charAt(o++))),l[h++]=t,64!==s&&(l[h++]=r),64!==a&&(l[h++]=n);return l}},{\"./support\":30,\"./utils\":32}],2:[function(e,t,r){\"use strict\";var n=e(\"./external\"),i=e(\"./stream/DataWorker\"),s=e(\"./stream/Crc32Probe\"),a=e(\"./stream/DataLengthProbe\");function o(e,t,r,n,i){this.compressedSize=e,this.uncompressedSize=t,this.crc32=r,this.compression=n,this.compressedContent=i}o.prototype={getContentWorker:function(){var e=new i(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a(\"data_length\")),t=this;return e.on(\"end\",function(){if(this.streamInfo.data_length!==t.uncompressedSize)throw new Error(\"Bug : uncompressed data size mismatch\")}),e},getCompressedWorker:function(){return new i(n.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\",this.compressedSize).withStreamInfo(\"uncompressedSize\",this.uncompressedSize).withStreamInfo(\"crc32\",this.crc32).withStreamInfo(\"compression\",this.compression)}},o.createWorkerFrom=function(e,t,r){return e.pipe(new s).pipe(new a(\"uncompressedSize\")).pipe(t.compressWorker(r)).pipe(new a(\"compressedSize\")).withStreamInfo(\"compression\",t)},t.exports=o},{\"./external\":6,\"./stream/Crc32Probe\":25,\"./stream/DataLengthProbe\":26,\"./stream/DataWorker\":27}],3:[function(e,t,r){\"use strict\";var n=e(\"./stream/GenericWorker\");r.STORE={magic:\"\\0\\0\",compressWorker:function(){return new n(\"STORE compression\")},uncompressWorker:function(){return new n(\"STORE decompression\")}},r.DEFLATE=e(\"./flate\")},{\"./flate\":7,\"./stream/GenericWorker\":28}],4:[function(e,t,r){\"use strict\";var n=e(\"./utils\");var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t){return void 0!==e&&e.length?\"string\"!==n.getTypeOf(e)?function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}(0|t,e,e.length,0):function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t.charCodeAt(a))];return-1^e}(0|t,e,e.length,0):0}},{\"./utils\":32}],5:[function(e,t,r){\"use strict\";r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null},{}],6:[function(e,t,r){\"use strict\";var n=null;n=\"undefined\"!=typeof Promise?Promise:e(\"lie\"),t.exports={Promise:n}},{lie:37}],7:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,i=e(\"pako\"),s=e(\"./utils\"),a=e(\"./stream/GenericWorker\"),o=n?\"uint8array\":\"array\";function h(e,t){a.call(this,\"FlateWorker/\"+e),this._pako=null,this._pakoAction=e,this._pakoOptions=t,this.meta={}}r.magic=\"\\b\\0\",s.inherits(h,a),h.prototype.processChunk=function(e){this.meta=e.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,e.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta})}},r.compressWorker=function(e){return new h(\"Deflate\",e)},r.uncompressWorker=function(){return new h(\"Inflate\",{})}},{\"./stream/GenericWorker\":28,\"./utils\":32,pako:38}],8:[function(e,t,r){\"use strict\";function A(e,t){var r,n=\"\";for(r=0;r<t;r++)n+=String.fromCharCode(255&e),e>>>=8;return n}function n(e,t,r,n,i,s){var a,o,h=e.file,u=e.compression,l=s!==O.utf8encode,f=I.transformTo(\"string\",s(h.name)),c=I.transformTo(\"string\",O.utf8encode(h.name)),d=h.comment,p=I.transformTo(\"string\",s(d)),m=I.transformTo(\"string\",O.utf8encode(d)),_=c.length!==h.name.length,g=m.length!==d.length,b=\"\",v=\"\",y=\"\",w=h.dir,k=h.date,x={crc32:0,compressedSize:0,uncompressedSize:0};t&&!r||(x.crc32=e.crc32,x.compressedSize=e.compressedSize,x.uncompressedSize=e.uncompressedSize);var S=0;t&&(S|=8),l||!_&&!g||(S|=2048);var z=0,C=0;w&&(z|=16),\"UNIX\"===i?(C=798,z|=function(e,t){var r=e;return e||(r=t?16893:33204),(65535&r)<<16}(h.unixPermissions,w)):(C=20,z|=function(e){return 63&(e||0)}(h.dosPermissions)),a=k.getUTCHours(),a<<=6,a|=k.getUTCMinutes(),a<<=5,a|=k.getUTCSeconds()/2,o=k.getUTCFullYear()-1980,o<<=4,o|=k.getUTCMonth()+1,o<<=5,o|=k.getUTCDate(),_&&(v=A(1,1)+A(B(f),4)+c,b+=\"up\"+A(v.length,2)+v),g&&(y=A(1,1)+A(B(p),4)+m,b+=\"uc\"+A(y.length,2)+y);var E=\"\";return E+=\"\\n\\0\",E+=A(S,2),E+=u.magic,E+=A(a,2),E+=A(o,2),E+=A(x.crc32,4),E+=A(x.compressedSize,4),E+=A(x.uncompressedSize,4),E+=A(f.length,2),E+=A(b.length,2),{fileRecord:R.LOCAL_FILE_HEADER+E+f+b,dirRecord:R.CENTRAL_FILE_HEADER+A(C,2)+E+A(p.length,2)+\"\\0\\0\\0\\0\"+A(z,4)+A(n,4)+f+b+p}}var I=e(\"../utils\"),i=e(\"../stream/GenericWorker\"),O=e(\"../utf8\"),B=e(\"../crc32\"),R=e(\"../signature\");function s(e,t,r,n){i.call(this,\"ZipFileWorker\"),this.bytesWritten=0,this.zipComment=t,this.zipPlatform=r,this.encodeFileName=n,this.streamFiles=e,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}I.inherits(s,i),s.prototype.push=function(e){var t=e.meta.percent||0,r=this.entriesCount,n=this._sources.length;this.accumulate?this.contentBuffer.push(e):(this.bytesWritten+=e.data.length,i.prototype.push.call(this,{data:e.data,meta:{currentFile:this.currentFile,percent:r?(t+100*(r-n-1))/r:100}}))},s.prototype.openedSource=function(e){this.currentSourceOffset=this.bytesWritten,this.currentFile=e.file.name;var t=this.streamFiles&&!e.file.dir;if(t){var r=n(e,t,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}})}else this.accumulate=!0},s.prototype.closedSource=function(e){this.accumulate=!1;var t=this.streamFiles&&!e.file.dir,r=n(e,t,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(r.dirRecord),t)this.push({data:function(e){return R.DATA_DESCRIPTOR+A(e.crc32,4)+A(e.compressedSize,4)+A(e.uncompressedSize,4)}(e),meta:{percent:100}});else for(this.push({data:r.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},s.prototype.flush=function(){for(var e=this.bytesWritten,t=0;t<this.dirRecords.length;t++)this.push({data:this.dirRecords[t],meta:{percent:100}});var r=this.bytesWritten-e,n=function(e,t,r,n,i){var s=I.transformTo(\"string\",i(n));return R.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+A(e,2)+A(e,2)+A(t,4)+A(r,4)+A(s.length,2)+s}(this.dirRecords.length,r,e,this.zipComment,this.encodeFileName);this.push({data:n,meta:{percent:100}})},s.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},s.prototype.registerPrevious=function(e){this._sources.push(e);var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.closedSource(t.previous.streamInfo),t._sources.length?t.prepareNextSource():t.end()}),e.on(\"error\",function(e){t.error(e)}),this},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},s.prototype.error=function(e){var t=this._sources;if(!i.prototype.error.call(this,e))return!1;for(var r=0;r<t.length;r++)try{t[r].error(e)}catch(e){}return!0},s.prototype.lock=function(){i.prototype.lock.call(this);for(var e=this._sources,t=0;t<e.length;t++)e[t].lock()},t.exports=s},{\"../crc32\":4,\"../signature\":23,\"../stream/GenericWorker\":28,\"../utf8\":31,\"../utils\":32}],9:[function(e,t,r){\"use strict\";var u=e(\"../compressions\"),n=e(\"./ZipFileWorker\");r.generateWorker=function(e,a,t){var o=new n(a.streamFiles,t,a.platform,a.encodeFileName),h=0;try{e.forEach(function(e,t){h++;var r=function(e,t){var r=e||t,n=u[r];if(!n)throw new Error(r+\" is not a valid compression method !\");return n}(t.options.compression,a.compression),n=t.options.compressionOptions||a.compressionOptions||{},i=t.dir,s=t.date;t._compressWorker(r,n).withStreamInfo(\"file\",{name:e,dir:i,date:s,comment:t.comment||\"\",unixPermissions:t.unixPermissions,dosPermissions:t.dosPermissions}).pipe(o)}),o.entriesCount=h}catch(e){o.error(e)}return o}},{\"../compressions\":3,\"./ZipFileWorker\":8}],10:[function(e,t,r){\"use strict\";function n(){if(!(this instanceof n))return new n;if(arguments.length)throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");this.files=Object.create(null),this.comment=null,this.root=\"\",this.clone=function(){var e=new n;for(var t in this)\"function\"!=typeof this[t]&&(e[t]=this[t]);return e}}(n.prototype=e(\"./object\")).loadAsync=e(\"./load\"),n.support=e(\"./support\"),n.defaults=e(\"./defaults\"),n.version=\"3.10.1\",n.loadAsync=function(e,t){return(new n).loadAsync(e,t)},n.external=e(\"./external\"),t.exports=n},{\"./defaults\":5,\"./external\":6,\"./load\":11,\"./object\":15,\"./support\":30}],11:[function(e,t,r){\"use strict\";var u=e(\"./utils\"),i=e(\"./external\"),n=e(\"./utf8\"),s=e(\"./zipEntries\"),a=e(\"./stream/Crc32Probe\"),l=e(\"./nodejsUtils\");function f(n){return new i.Promise(function(e,t){var r=n.decompressed.getContentWorker().pipe(new a);r.on(\"error\",function(e){t(e)}).on(\"end\",function(){r.streamInfo.crc32!==n.decompressed.crc32?t(new Error(\"Corrupted zip : CRC32 mismatch\")):e()}).resume()})}t.exports=function(e,o){var h=this;return o=u.extend(o||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:n.utf8decode}),l.isNode&&l.isStream(e)?i.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\")):u.prepareContent(\"the loaded zip file\",e,!0,o.optimizedBinaryString,o.base64).then(function(e){var t=new s(o);return t.load(e),t}).then(function(e){var t=[i.Promise.resolve(e)],r=e.files;if(o.checkCRC32)for(var n=0;n<r.length;n++)t.push(f(r[n]));return i.Promise.all(t)}).then(function(e){for(var t=e.shift(),r=t.files,n=0;n<r.length;n++){var i=r[n],s=i.fileNameStr,a=u.resolve(i.fileNameStr);h.file(a,i.decompressed,{binary:!0,optimizedBinaryString:!0,date:i.date,dir:i.dir,comment:i.fileCommentStr.length?i.fileCommentStr:null,unixPermissions:i.unixPermissions,dosPermissions:i.dosPermissions,createFolders:o.createFolders}),i.dir||(h.file(a).unsafeOriginalName=s)}return t.zipComment.length&&(h.comment=t.zipComment),h})}},{\"./external\":6,\"./nodejsUtils\":14,\"./stream/Crc32Probe\":25,\"./utf8\":31,\"./utils\":32,\"./zipEntries\":33}],12:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../stream/GenericWorker\");function s(e,t){i.call(this,\"Nodejs stream input adapter for \"+e),this._upstreamEnded=!1,this._bindStream(t)}n.inherits(s,i),s.prototype._bindStream=function(e){var t=this;(this._stream=e).pause(),e.on(\"data\",function(e){t.push({data:e,meta:{percent:0}})}).on(\"error\",function(e){t.isPaused?this.generatedError=e:t.error(e)}).on(\"end\",function(){t.isPaused?t._upstreamEnded=!0:t.end()})},s.prototype.pause=function(){return!!i.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},t.exports=s},{\"../stream/GenericWorker\":28,\"../utils\":32}],13:[function(e,t,r){\"use strict\";var i=e(\"readable-stream\").Readable;function n(e,t,r){i.call(this,t),this._helper=e;var n=this;e.on(\"data\",function(e,t){n.push(e)||n._helper.pause(),r&&r(t)}).on(\"error\",function(e){n.emit(\"error\",e)}).on(\"end\",function(){n.push(null)})}e(\"../utils\").inherits(n,i),n.prototype._read=function(){this._helper.resume()},t.exports=n},{\"../utils\":32,\"readable-stream\":16}],14:[function(e,t,r){\"use strict\";t.exports={isNode:\"undefined\"!=typeof Buffer,newBufferFrom:function(e,t){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(e,t);if(\"number\"==typeof e)throw new Error('The \"data\" argument must not be a number');return new Buffer(e,t)},allocBuffer:function(e){if(Buffer.alloc)return Buffer.alloc(e);var t=new Buffer(e);return t.fill(0),t},isBuffer:function(e){return Buffer.isBuffer(e)},isStream:function(e){return e&&\"function\"==typeof e.on&&\"function\"==typeof e.pause&&\"function\"==typeof e.resume}}},{}],15:[function(e,t,r){\"use strict\";function s(e,t,r){var n,i=u.getTypeOf(t),s=u.extend(r||{},f);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),\"string\"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(e=g(e)),s.createFolders&&(n=_(e))&&b.call(this,n,!0);var a=\"string\"===i&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!a),(t instanceof c&&0===t.uncompressedSize||s.dir||!t||0===t.length)&&(s.base64=!1,s.binary=!0,t=\"\",s.compression=\"STORE\",i=\"string\");var o=null;o=t instanceof c||t instanceof l?t:p.isNode&&p.isStream(t)?new m(e,t):u.prepareContent(e,t,s.binary,s.optimizedBinaryString,s.base64);var h=new d(e,o,s);this.files[e]=h}var i=e(\"./utf8\"),u=e(\"./utils\"),l=e(\"./stream/GenericWorker\"),a=e(\"./stream/StreamHelper\"),f=e(\"./defaults\"),c=e(\"./compressedObject\"),d=e(\"./zipObject\"),o=e(\"./generate\"),p=e(\"./nodejsUtils\"),m=e(\"./nodejs/NodejsStreamInputAdapter\"),_=function(e){\"/\"===e.slice(-1)&&(e=e.substring(0,e.length-1));var t=e.lastIndexOf(\"/\");return 0<t?e.substring(0,t):\"\"},g=function(e){return\"/\"!==e.slice(-1)&&(e+=\"/\"),e},b=function(e,t){return t=void 0!==t?t:f.createFolders,e=g(e),this.files[e]||s.call(this,e,null,{dir:!0,createFolders:t}),this.files[e]};function h(e){return\"[object RegExp]\"===Object.prototype.toString.call(e)}var n={load:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},forEach:function(e){var t,r,n;for(t in this.files)n=this.files[t],(r=t.slice(this.root.length,t.length))&&t.slice(0,this.root.length)===this.root&&e(r,n)},filter:function(r){var n=[];return this.forEach(function(e,t){r(e,t)&&n.push(t)}),n},file:function(e,t,r){if(1!==arguments.length)return e=this.root+e,s.call(this,e,t,r),this;if(h(e)){var n=e;return this.filter(function(e,t){return!t.dir&&n.test(e)})}var i=this.files[this.root+e];return i&&!i.dir?i:null},folder:function(r){if(!r)return this;if(h(r))return this.filter(function(e,t){return t.dir&&r.test(e)});var e=this.root+r,t=b.call(this,e),n=this.clone();return n.root=t.name,n},remove:function(r){r=this.root+r;var e=this.files[r];if(e||(\"/\"!==r.slice(-1)&&(r+=\"/\"),e=this.files[r]),e&&!e.dir)delete this.files[r];else for(var t=this.filter(function(e,t){return t.name.slice(0,r.length)===r}),n=0;n<t.length;n++)delete this.files[t[n].name];return this},generate:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},generateInternalStream:function(e){var t,r={};try{if((r=u.extend(e||{},{streamFiles:!1,compression:\"STORE\",compressionOptions:null,type:\"\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:i.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),\"binarystring\"===r.type&&(r.type=\"string\"),!r.type)throw new Error(\"No output type specified.\");u.checkSupport(r.type),\"darwin\"!==r.platform&&\"freebsd\"!==r.platform&&\"linux\"!==r.platform&&\"sunos\"!==r.platform||(r.platform=\"UNIX\"),\"win32\"===r.platform&&(r.platform=\"DOS\");var n=r.comment||this.comment||\"\";t=o.generateWorker(this,r,n)}catch(e){(t=new l(\"error\")).error(e)}return new a(t,r.type||\"string\",r.mimeType)},generateAsync:function(e,t){return this.generateInternalStream(e).accumulate(t)},generateNodeStream:function(e,t){return(e=e||{}).type||(e.type=\"nodebuffer\"),this.generateInternalStream(e).toNodejsStream(t)}};t.exports=n},{\"./compressedObject\":2,\"./defaults\":5,\"./generate\":9,\"./nodejs/NodejsStreamInputAdapter\":12,\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31,\"./utils\":32,\"./zipObject\":35}],16:[function(e,t,r){\"use strict\";t.exports=e(\"stream\")},{stream:void 0}],17:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e);for(var t=0;t<this.data.length;t++)e[t]=255&e[t]}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data[this.zero+e]},i.prototype.lastIndexOfSignature=function(e){for(var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===t&&this.data[s+1]===r&&this.data[s+2]===n&&this.data[s+3]===i)return s-this.zero;return-1},i.prototype.readAndCheckSignature=function(e){var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.readData(4);return t===s[0]&&r===s[1]&&n===s[2]&&i===s[3]},i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return[];var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],18:[function(e,t,r){\"use strict\";var n=e(\"../utils\");function i(e){this.data=e,this.length=e.length,this.index=0,this.zero=0}i.prototype={checkOffset:function(e){this.checkIndex(this.index+e)},checkIndex:function(e){if(this.length<this.zero+e||e<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+e+\"). Corrupted zip ?\")},setIndex:function(e){this.checkIndex(e),this.index=e},skip:function(e){this.setIndex(this.index+e)},byteAt:function(){},readInt:function(e){var t,r=0;for(this.checkOffset(e),t=this.index+e-1;t>=this.index;t--)r=(r<<8)+this.byteAt(t);return this.index+=e,r},readString:function(e){return n.transformTo(\"string\",this.readData(e))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var e=this.readInt(4);return new Date(Date.UTC(1980+(e>>25&127),(e>>21&15)-1,e>>16&31,e>>11&31,e>>5&63,(31&e)<<1))}},t.exports=i},{\"../utils\":32}],19:[function(e,t,r){\"use strict\";var n=e(\"./Uint8ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./Uint8ArrayReader\":21}],20:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data.charCodeAt(this.zero+e)},i.prototype.lastIndexOfSignature=function(e){return this.data.lastIndexOf(e)-this.zero},i.prototype.readAndCheckSignature=function(e){return e===this.readData(4)},i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],21:[function(e,t,r){\"use strict\";var n=e(\"./ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return new Uint8Array(0);var t=this.data.subarray(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./ArrayReader\":17}],22:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../support\"),s=e(\"./ArrayReader\"),a=e(\"./StringReader\"),o=e(\"./NodeBufferReader\"),h=e(\"./Uint8ArrayReader\");t.exports=function(e){var t=n.getTypeOf(e);return n.checkSupport(t),\"string\"!==t||i.uint8array?\"nodebuffer\"===t?new o(e):i.uint8array?new h(n.transformTo(\"uint8array\",e)):new s(n.transformTo(\"array\",e)):new a(e)}},{\"../support\":30,\"../utils\":32,\"./ArrayReader\":17,\"./NodeBufferReader\":19,\"./StringReader\":20,\"./Uint8ArrayReader\":21}],23:[function(e,t,r){\"use strict\";r.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",r.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",r.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",r.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",r.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],24:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../utils\");function s(e){n.call(this,\"ConvertWorker to \"+e),this.destType=e}i.inherits(s,n),s.prototype.processChunk=function(e){this.push({data:i.transformTo(this.destType,e.data),meta:e.meta})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],25:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../crc32\");function s(){n.call(this,\"Crc32Probe\"),this.withStreamInfo(\"crc32\",0)}e(\"../utils\").inherits(s,n),s.prototype.processChunk=function(e){this.streamInfo.crc32=i(e.data,this.streamInfo.crc32||0),this.push(e)},t.exports=s},{\"../crc32\":4,\"../utils\":32,\"./GenericWorker\":28}],26:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataLengthProbe for \"+e),this.propName=e,this.withStreamInfo(e,0)}n.inherits(s,i),s.prototype.processChunk=function(e){if(e){var t=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=t+e.data.length}i.prototype.processChunk.call(this,e)},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],27:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataWorker\");var t=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type=\"\",this._tickScheduled=!1,e.then(function(e){t.dataIsReady=!0,t.data=e,t.max=e&&e.length||0,t.type=n.getTypeOf(e),t.isPaused||t._tickAndRepeat()},function(e){t.error(e)})}n.inherits(s,i),s.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,n.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(n.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var e=null,t=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case\"string\":e=this.data.substring(this.index,t);break;case\"uint8array\":e=this.data.subarray(this.index,t);break;case\"array\":case\"nodebuffer\":e=this.data.slice(this.index,t)}return this.index=t,this.push({data:e,meta:{percent:this.max?this.index/this.max*100:0}})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],28:[function(e,t,r){\"use strict\";function n(e){this.name=e||\"default\",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}n.prototype={push:function(e){this.emit(\"data\",e)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit(\"end\"),this.cleanUp(),this.isFinished=!0}catch(e){this.emit(\"error\",e)}return!0},error:function(e){return!this.isFinished&&(this.isPaused?this.generatedError=e:(this.isFinished=!0,this.emit(\"error\",e),this.previous&&this.previous.error(e),this.cleanUp()),!0)},on:function(e,t){return this._listeners[e].push(t),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(e,t){if(this._listeners[e])for(var r=0;r<this._listeners[e].length;r++)this._listeners[e][r].call(this,t)},pipe:function(e){return e.registerPrevious(this)},registerPrevious:function(e){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.streamInfo=e.streamInfo,this.mergeStreamInfo(),this.previous=e;var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.end()}),e.on(\"error\",function(e){t.error(e)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var e=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),e=!0),this.previous&&this.previous.resume(),!e},flush:function(){},processChunk:function(e){this.push(e)},withStreamInfo:function(e,t){return this.extraStreamInfo[e]=t,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var e in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,e)&&(this.streamInfo[e]=this.extraStreamInfo[e])},lock:function(){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var e=\"Worker \"+this.name;return this.previous?this.previous+\" -> \"+e:e}},t.exports=n},{}],29:[function(e,t,r){\"use strict\";var h=e(\"../utils\"),i=e(\"./ConvertWorker\"),s=e(\"./GenericWorker\"),u=e(\"../base64\"),n=e(\"../support\"),a=e(\"../external\"),o=null;if(n.nodestream)try{o=e(\"../nodejs/NodejsStreamOutputAdapter\")}catch(e){}function l(e,o){return new a.Promise(function(t,r){var n=[],i=e._internalType,s=e._outputType,a=e._mimeType;e.on(\"data\",function(e,t){n.push(e),o&&o(t)}).on(\"error\",function(e){n=[],r(e)}).on(\"end\",function(){try{var e=function(e,t,r){switch(e){case\"blob\":return h.newBlob(h.transformTo(\"arraybuffer\",t),r);case\"base64\":return u.encode(t);default:return h.transformTo(e,t)}}(s,function(e,t){var r,n=0,i=null,s=0;for(r=0;r<t.length;r++)s+=t[r].length;switch(e){case\"string\":return t.join(\"\");case\"array\":return Array.prototype.concat.apply([],t);case\"uint8array\":for(i=new Uint8Array(s),r=0;r<t.length;r++)i.set(t[r],n),n+=t[r].length;return i;case\"nodebuffer\":return Buffer.concat(t);default:throw new Error(\"concat : unsupported type '\"+e+\"'\")}}(i,n),a);t(e)}catch(e){r(e)}n=[]}).resume()})}function f(e,t,r){var n=t;switch(t){case\"blob\":case\"arraybuffer\":n=\"uint8array\";break;case\"base64\":n=\"string\"}try{this._internalType=n,this._outputType=t,this._mimeType=r,h.checkSupport(n),this._worker=e.pipe(new i(n)),e.lock()}catch(e){this._worker=new s(\"error\"),this._worker.error(e)}}f.prototype={accumulate:function(e){return l(this,e)},on:function(e,t){var r=this;return\"data\"===e?this._worker.on(e,function(e){t.call(r,e.data,e.meta)}):this._worker.on(e,function(){h.delay(t,arguments,r)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(e){if(h.checkSupport(\"nodestream\"),\"nodebuffer\"!==this._outputType)throw new Error(this._outputType+\" is not supported by this method\");return new o(this,{objectMode:\"nodebuffer\"!==this._outputType},e)}},t.exports=f},{\"../base64\":1,\"../external\":6,\"../nodejs/NodejsStreamOutputAdapter\":13,\"../support\":30,\"../utils\":32,\"./ConvertWorker\":24,\"./GenericWorker\":28}],30:[function(e,t,r){\"use strict\";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,r.nodebuffer=\"undefined\"!=typeof Buffer,r.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)r.blob=!1;else{var n=new ArrayBuffer(0);try{r.blob=0===new Blob([n],{type:\"application/zip\"}).size}catch(e){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(n),r.blob=0===i.getBlob(\"application/zip\").size}catch(e){r.blob=!1}}}try{r.nodestream=!!e(\"readable-stream\").Readable}catch(e){r.nodestream=!1}},{\"readable-stream\":16}],31:[function(e,t,s){\"use strict\";for(var o=e(\"./utils\"),h=e(\"./support\"),r=e(\"./nodejsUtils\"),n=e(\"./stream/GenericWorker\"),u=new Array(256),i=0;i<256;i++)u[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;u[254]=u[254]=1;function a(){n.call(this,\"utf-8 decode\"),this.leftOver=null}function l(){n.call(this,\"utf-8 encode\")}s.utf8encode=function(e){return h.nodebuffer?r.newBufferFrom(e,\"utf-8\"):function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=h.uint8array?new Uint8Array(o):new Array(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t}(e)},s.utf8decode=function(e){return h.nodebuffer?o.transformTo(\"nodebuffer\",e).toString(\"utf-8\"):function(e){var t,r,n,i,s=e.length,a=new Array(2*s);for(t=r=0;t<s;)if((n=e[t++])<128)a[r++]=n;else if(4<(i=u[n]))a[r++]=65533,t+=i-1;else{for(n&=2===i?31:3===i?15:7;1<i&&t<s;)n=n<<6|63&e[t++],i--;1<i?a[r++]=65533:n<65536?a[r++]=n:(n-=65536,a[r++]=55296|n>>10&1023,a[r++]=56320|1023&n)}return a.length!==r&&(a.subarray?a=a.subarray(0,r):a.length=r),o.applyFromCharCode(a)}(e=o.transformTo(h.uint8array?\"uint8array\":\"array\",e))},o.inherits(a,n),a.prototype.processChunk=function(e){var t=o.transformTo(h.uint8array?\"uint8array\":\"array\",e.data);if(this.leftOver&&this.leftOver.length){if(h.uint8array){var r=t;(t=new Uint8Array(r.length+this.leftOver.length)).set(this.leftOver,0),t.set(r,this.leftOver.length)}else t=this.leftOver.concat(t);this.leftOver=null}var n=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}(t),i=t;n!==t.length&&(h.uint8array?(i=t.subarray(0,n),this.leftOver=t.subarray(n,t.length)):(i=t.slice(0,n),this.leftOver=t.slice(n,t.length))),this.push({data:s.utf8decode(i),meta:e.meta})},a.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:s.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},s.Utf8DecodeWorker=a,o.inherits(l,n),l.prototype.processChunk=function(e){this.push({data:s.utf8encode(e.data),meta:e.meta})},s.Utf8EncodeWorker=l},{\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./support\":30,\"./utils\":32}],32:[function(e,t,a){\"use strict\";var o=e(\"./support\"),h=e(\"./base64\"),r=e(\"./nodejsUtils\"),u=e(\"./external\");function n(e){return e}function l(e,t){for(var r=0;r<e.length;++r)t[r]=255&e.charCodeAt(r);return t}e(\"setimmediate\"),a.newBlob=function(t,r){a.checkSupport(\"blob\");try{return new Blob([t],{type:r})}catch(e){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return n.append(t),n.getBlob(r)}catch(e){throw new Error(\"Bug : can't construct the Blob.\")}}};var i={stringifyByChunk:function(e,t,r){var n=[],i=0,s=e.length;if(s<=r)return String.fromCharCode.apply(null,e);for(;i<s;)\"array\"===t||\"nodebuffer\"===t?n.push(String.fromCharCode.apply(null,e.slice(i,Math.min(i+r,s)))):n.push(String.fromCharCode.apply(null,e.subarray(i,Math.min(i+r,s)))),i+=r;return n.join(\"\")},stringifyByChar:function(e){for(var t=\"\",r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t},applyCanBeUsed:{uint8array:function(){try{return o.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(e){return!1}}(),nodebuffer:function(){try{return o.nodebuffer&&1===String.fromCharCode.apply(null,r.allocBuffer(1)).length}catch(e){return!1}}()}};function s(e){var t=65536,r=a.getTypeOf(e),n=!0;if(\"uint8array\"===r?n=i.applyCanBeUsed.uint8array:\"nodebuffer\"===r&&(n=i.applyCanBeUsed.nodebuffer),n)for(;1<t;)try{return i.stringifyByChunk(e,r,t)}catch(e){t=Math.floor(t/2)}return i.stringifyByChar(e)}function f(e,t){for(var r=0;r<e.length;r++)t[r]=e[r];return t}a.applyFromCharCode=s;var c={};c.string={string:n,array:function(e){return l(e,new Array(e.length))},arraybuffer:function(e){return c.string.uint8array(e).buffer},uint8array:function(e){return l(e,new Uint8Array(e.length))},nodebuffer:function(e){return l(e,r.allocBuffer(e.length))}},c.array={string:s,array:n,arraybuffer:function(e){return new Uint8Array(e).buffer},uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(e)}},c.arraybuffer={string:function(e){return s(new Uint8Array(e))},array:function(e){return f(new Uint8Array(e),new Array(e.byteLength))},arraybuffer:n,uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(new Uint8Array(e))}},c.uint8array={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return e.buffer},uint8array:n,nodebuffer:function(e){return r.newBufferFrom(e)}},c.nodebuffer={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return c.nodebuffer.uint8array(e).buffer},uint8array:function(e){return f(e,new Uint8Array(e.length))},nodebuffer:n},a.transformTo=function(e,t){if(t=t||\"\",!e)return t;a.checkSupport(e);var r=a.getTypeOf(t);return c[r][e](t)},a.resolve=function(e){for(var t=e.split(\"/\"),r=[],n=0;n<t.length;n++){var i=t[n];\".\"===i||\"\"===i&&0!==n&&n!==t.length-1||(\"..\"===i?r.pop():r.push(i))}return r.join(\"/\")},a.getTypeOf=function(e){return\"string\"==typeof e?\"string\":\"[object Array]\"===Object.prototype.toString.call(e)?\"array\":o.nodebuffer&&r.isBuffer(e)?\"nodebuffer\":o.uint8array&&e instanceof Uint8Array?\"uint8array\":o.arraybuffer&&e instanceof ArrayBuffer?\"arraybuffer\":void 0},a.checkSupport=function(e){if(!o[e.toLowerCase()])throw new Error(e+\" is not supported by this platform\")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(e){var t,r,n=\"\";for(r=0;r<(e||\"\").length;r++)n+=\"\\\\x\"+((t=e.charCodeAt(r))<16?\"0\":\"\")+t.toString(16).toUpperCase();return n},a.delay=function(e,t,r){setImmediate(function(){e.apply(r||null,t||[])})},a.inherits=function(e,t){function r(){}r.prototype=t.prototype,e.prototype=new r},a.extend=function(){var e,t,r={};for(e=0;e<arguments.length;e++)for(t in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],t)&&void 0===r[t]&&(r[t]=arguments[e][t]);return r},a.prepareContent=function(r,e,n,i,s){return u.Promise.resolve(e).then(function(n){return o.blob&&(n instanceof Blob||-1!==[\"[object File]\",\"[object Blob]\"].indexOf(Object.prototype.toString.call(n)))&&\"undefined\"!=typeof FileReader?new u.Promise(function(t,r){var e=new FileReader;e.onload=function(e){t(e.target.result)},e.onerror=function(e){r(e.target.error)},e.readAsArrayBuffer(n)}):n}).then(function(e){var t=a.getTypeOf(e);return t?(\"arraybuffer\"===t?e=a.transformTo(\"uint8array\",e):\"string\"===t&&(s?e=h.decode(e):n&&!0!==i&&(e=function(e){return l(e,o.uint8array?new Uint8Array(e.length):new Array(e.length))}(e))),e):u.Promise.reject(new Error(\"Can't read the data of '\"+r+\"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\"))})}},{\"./base64\":1,\"./external\":6,\"./nodejsUtils\":14,\"./support\":30,setimmediate:54}],33:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),i=e(\"./utils\"),s=e(\"./signature\"),a=e(\"./zipEntry\"),o=e(\"./support\");function h(e){this.files=[],this.loadOptions=e}h.prototype={checkSignature:function(e){if(!this.reader.readAndCheckSignature(e)){this.reader.index-=4;var t=this.reader.readString(4);throw new Error(\"Corrupted zip or bug: unexpected signature (\"+i.pretty(t)+\", expected \"+i.pretty(e)+\")\")}},isSignature:function(e,t){var r=this.reader.index;this.reader.setIndex(e);var n=this.reader.readString(4)===t;return this.reader.setIndex(r),n},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var e=this.reader.readData(this.zipCommentLength),t=o.uint8array?\"uint8array\":\"array\",r=i.transformTo(t,e);this.zipComment=this.loadOptions.decodeFileName(r)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var e,t,r,n=this.zip64EndOfCentralSize-44;0<n;)e=this.reader.readInt(2),t=this.reader.readInt(4),r=this.reader.readData(t),this.zip64ExtensibleData[e]={id:e,length:t,value:r}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var e,t;for(e=0;e<this.files.length;e++)t=this.files[e],this.reader.setIndex(t.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),t.readLocalPart(this.reader),t.handleUTF8(),t.processAttributes()},readCentralDir:function(){var e;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(e=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(e);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var e=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(e<0)throw!this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip: can't find end of central directory\");this.reader.setIndex(e);var t=e;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,(e=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(e),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var n=t-r;if(0<n)this.isSignature(t,s.CENTRAL_FILE_HEADER)||(this.reader.zero=n);else if(n<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(n)+\" bytes.\")},prepareReader:function(e){this.reader=n(e)},load:function(e){this.prepareReader(e),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},t.exports=h},{\"./reader/readerFor\":22,\"./signature\":23,\"./support\":30,\"./utils\":32,\"./zipEntry\":34}],34:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),s=e(\"./utils\"),i=e(\"./compressedObject\"),a=e(\"./crc32\"),o=e(\"./utf8\"),h=e(\"./compressions\"),u=e(\"./support\");function l(e,t){this.options=e,this.loadOptions=t}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(e){var t,r;if(e.skip(22),this.fileNameLength=e.readInt(2),r=e.readInt(2),this.fileName=e.readData(this.fileNameLength),e.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error(\"Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)\");if(null===(t=function(e){for(var t in h)if(Object.prototype.hasOwnProperty.call(h,t)&&h[t].magic===e)return h[t];return null}(this.compressionMethod)))throw new Error(\"Corrupted zip : compression \"+s.pretty(this.compressionMethod)+\" unknown (inner file : \"+s.transformTo(\"string\",this.fileName)+\")\");this.decompressed=new i(this.compressedSize,this.uncompressedSize,this.crc32,t,e.readData(this.compressedSize))},readCentralPart:function(e){this.versionMadeBy=e.readInt(2),e.skip(2),this.bitFlag=e.readInt(2),this.compressionMethod=e.readString(2),this.date=e.readDate(),this.crc32=e.readInt(4),this.compressedSize=e.readInt(4),this.uncompressedSize=e.readInt(4);var t=e.readInt(2);if(this.extraFieldsLength=e.readInt(2),this.fileCommentLength=e.readInt(2),this.diskNumberStart=e.readInt(2),this.internalFileAttributes=e.readInt(2),this.externalFileAttributes=e.readInt(4),this.localHeaderOffset=e.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");e.skip(t),this.readExtraFields(e),this.parseZIP64ExtraField(e),this.fileComment=e.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var e=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==e&&(this.dosPermissions=63&this.externalFileAttributes),3==e&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var e=n(this.extraFields[1].value);this.uncompressedSize===s.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===s.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===s.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===s.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(e){var t,r,n,i=e.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});e.index+4<i;)t=e.readInt(2),r=e.readInt(2),n=e.readData(r),this.extraFields[t]={id:t,length:r,value:n};e.setIndex(i)},handleUTF8:function(){var e=u.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var t=this.findExtraFieldUnicodePath();if(null!==t)this.fileNameStr=t;else{var r=s.transformTo(e,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r)}var n=this.findExtraFieldUnicodeComment();if(null!==n)this.fileCommentStr=n;else{var i=s.transformTo(e,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(i)}}},findExtraFieldUnicodePath:function(){var e=this.extraFields[28789];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileName)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null},findExtraFieldUnicodeComment:function(){var e=this.extraFields[25461];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileComment)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null}},t.exports=l},{\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./reader/readerFor\":22,\"./support\":30,\"./utf8\":31,\"./utils\":32}],35:[function(e,t,r){\"use strict\";function n(e,t,r){this.name=e,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=t,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions}}var s=e(\"./stream/StreamHelper\"),i=e(\"./stream/DataWorker\"),a=e(\"./utf8\"),o=e(\"./compressedObject\"),h=e(\"./stream/GenericWorker\");n.prototype={internalStream:function(e){var t=null,r=\"string\";try{if(!e)throw new Error(\"No output type specified.\");var n=\"string\"===(r=e.toLowerCase())||\"text\"===r;\"binarystring\"!==r&&\"text\"!==r||(r=\"string\"),t=this._decompressWorker();var i=!this._dataBinary;i&&!n&&(t=t.pipe(new a.Utf8EncodeWorker)),!i&&n&&(t=t.pipe(new a.Utf8DecodeWorker))}catch(e){(t=new h(\"error\")).error(e)}return new s(t,r,\"\")},async:function(e,t){return this.internalStream(e).accumulate(t)},nodeStream:function(e,t){return this.internalStream(e||\"nodebuffer\").toNodejsStream(t)},_compressWorker:function(e,t){if(this._data instanceof o&&this._data.compression.magic===e.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(r,e,t)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new i(this._data)}};for(var u=[\"asText\",\"asBinary\",\"asNodeBuffer\",\"asUint8Array\",\"asArrayBuffer\"],l=function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},f=0;f<u.length;f++)n.prototype[u[f]]=l;t.exports=n},{\"./compressedObject\":2,\"./stream/DataWorker\":27,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31}],36:[function(e,l,t){(function(t){\"use strict\";var r,n,e=t.MutationObserver||t.WebKitMutationObserver;if(e){var i=0,s=new e(u),a=t.document.createTextNode(\"\");s.observe(a,{characterData:!0}),r=function(){a.data=i=++i%2}}else if(t.setImmediate||void 0===t.MessageChannel)r=\"document\"in t&&\"onreadystatechange\"in t.document.createElement(\"script\")?function(){var e=t.document.createElement(\"script\");e.onreadystatechange=function(){u(),e.onreadystatechange=null,e.parentNode.removeChild(e),e=null},t.document.documentElement.appendChild(e)}:function(){setTimeout(u,0)};else{var o=new t.MessageChannel;o.port1.onmessage=u,r=function(){o.port2.postMessage(0)}}var h=[];function u(){var e,t;n=!0;for(var r=h.length;r;){for(t=h,h=[],e=-1;++e<r;)t[e]();r=h.length}n=!1}l.exports=function(e){1!==h.push(e)||n||r()}}).call(this,\"undefined\"!=typeof __webpack_require__.g?__webpack_require__.g:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],37:[function(e,t,r){\"use strict\";var i=e(\"immediate\");function u(){}var l={},s=[\"REJECTED\"],a=[\"FULFILLED\"],n=[\"PENDING\"];function o(e){if(\"function\"!=typeof e)throw new TypeError(\"resolver must be a function\");this.state=n,this.queue=[],this.outcome=void 0,e!==u&&d(this,e)}function h(e,t,r){this.promise=e,\"function\"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function f(t,r,n){i(function(){var e;try{e=r(n)}catch(e){return l.reject(t,e)}e===t?l.reject(t,new TypeError(\"Cannot resolve promise with itself\")):l.resolve(t,e)})}function c(e){var t=e&&e.then;if(e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"function\"==typeof t)return function(){t.apply(e,arguments)}}function d(t,e){var r=!1;function n(e){r||(r=!0,l.reject(t,e))}function i(e){r||(r=!0,l.resolve(t,e))}var s=p(function(){e(i,n)});\"error\"===s.status&&n(s.value)}function p(e,t){var r={};try{r.value=e(t),r.status=\"success\"}catch(e){r.status=\"error\",r.value=e}return r}(t.exports=o).prototype.finally=function(t){if(\"function\"!=typeof t)return this;var r=this.constructor;return this.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})})},o.prototype.catch=function(e){return this.then(null,e)},o.prototype.then=function(e,t){if(\"function\"!=typeof e&&this.state===a||\"function\"!=typeof t&&this.state===s)return this;var r=new this.constructor(u);this.state!==n?f(r,this.state===a?e:t,this.outcome):this.queue.push(new h(r,e,t));return r},h.prototype.callFulfilled=function(e){l.resolve(this.promise,e)},h.prototype.otherCallFulfilled=function(e){f(this.promise,this.onFulfilled,e)},h.prototype.callRejected=function(e){l.reject(this.promise,e)},h.prototype.otherCallRejected=function(e){f(this.promise,this.onRejected,e)},l.resolve=function(e,t){var r=p(c,t);if(\"error\"===r.status)return l.reject(e,r.value);var n=r.value;if(n)d(e,n);else{e.state=a,e.outcome=t;for(var i=-1,s=e.queue.length;++i<s;)e.queue[i].callFulfilled(t)}return e},l.reject=function(e,t){e.state=s,e.outcome=t;for(var r=-1,n=e.queue.length;++r<n;)e.queue[r].callRejected(t);return e},o.resolve=function(e){if(e instanceof this)return e;return l.resolve(new this(u),e)},o.reject=function(e){var t=new this(u);return l.reject(t,e)},o.all=function(e){var r=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var n=e.length,i=!1;if(!n)return this.resolve([]);var s=new Array(n),a=0,t=-1,o=new this(u);for(;++t<n;)h(e[t],t);return o;function h(e,t){r.resolve(e).then(function(e){s[t]=e,++a!==n||i||(i=!0,l.resolve(o,s))},function(e){i||(i=!0,l.reject(o,e))})}},o.race=function(e){var t=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var r=e.length,n=!1;if(!r)return this.resolve([]);var i=-1,s=new this(u);for(;++i<r;)a=e[i],t.resolve(a).then(function(e){n||(n=!0,l.resolve(s,e))},function(e){n||(n=!0,l.reject(s,e))});var a;return s}},{immediate:36}],38:[function(e,t,r){\"use strict\";var n={};(0,e(\"./lib/utils/common\").assign)(n,e(\"./lib/deflate\"),e(\"./lib/inflate\"),e(\"./lib/zlib/constants\")),t.exports=n},{\"./lib/deflate\":39,\"./lib/inflate\":40,\"./lib/utils/common\":41,\"./lib/zlib/constants\":44}],39:[function(e,t,r){\"use strict\";var a=e(\"./zlib/deflate\"),o=e(\"./utils/common\"),h=e(\"./utils/strings\"),i=e(\"./zlib/messages\"),s=e(\"./zlib/zstream\"),u=Object.prototype.toString,l=0,f=-1,c=0,d=8;function p(e){if(!(this instanceof p))return new p(e);this.options=o.assign({level:f,method:d,chunkSize:16384,windowBits:15,memLevel:8,strategy:c,to:\"\"},e||{});var t=this.options;t.raw&&0<t.windowBits?t.windowBits=-t.windowBits:t.gzip&&0<t.windowBits&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=a.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(r!==l)throw new Error(i[r]);if(t.header&&a.deflateSetHeader(this.strm,t.header),t.dictionary){var n;if(n=\"string\"==typeof t.dictionary?h.string2buf(t.dictionary):\"[object ArrayBuffer]\"===u.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(r=a.deflateSetDictionary(this.strm,n))!==l)throw new Error(i[r]);this._dict_set=!0}}function n(e,t){var r=new p(t);if(r.push(e,!0),r.err)throw r.msg||i[r.err];return r.result}p.prototype.push=function(e,t){var r,n,i=this.strm,s=this.options.chunkSize;if(this.ended)return!1;n=t===~~t?t:!0===t?4:0,\"string\"==typeof e?i.input=h.string2buf(e):\"[object ArrayBuffer]\"===u.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;do{if(0===i.avail_out&&(i.output=new o.Buf8(s),i.next_out=0,i.avail_out=s),1!==(r=a.deflate(i,n))&&r!==l)return this.onEnd(r),!(this.ended=!0);0!==i.avail_out&&(0!==i.avail_in||4!==n&&2!==n)||(\"string\"===this.options.to?this.onData(h.buf2binstring(o.shrinkBuf(i.output,i.next_out))):this.onData(o.shrinkBuf(i.output,i.next_out)))}while((0<i.avail_in||0===i.avail_out)&&1!==r);return 4===n?(r=a.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===l):2!==n||(this.onEnd(l),!(i.avail_out=0))},p.prototype.onData=function(e){this.chunks.push(e)},p.prototype.onEnd=function(e){e===l&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Deflate=p,r.deflate=n,r.deflateRaw=function(e,t){return(t=t||{}).raw=!0,n(e,t)},r.gzip=function(e,t){return(t=t||{}).gzip=!0,n(e,t)}},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/deflate\":46,\"./zlib/messages\":51,\"./zlib/zstream\":53}],40:[function(e,t,r){\"use strict\";var c=e(\"./zlib/inflate\"),d=e(\"./utils/common\"),p=e(\"./utils/strings\"),m=e(\"./zlib/constants\"),n=e(\"./zlib/messages\"),i=e(\"./zlib/zstream\"),s=e(\"./zlib/gzheader\"),_=Object.prototype.toString;function a(e){if(!(this instanceof a))return new a(e);this.options=d.assign({chunkSize:16384,windowBits:0,to:\"\"},e||{});var t=this.options;t.raw&&0<=t.windowBits&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(0<=t.windowBits&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),15<t.windowBits&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new i,this.strm.avail_out=0;var r=c.inflateInit2(this.strm,t.windowBits);if(r!==m.Z_OK)throw new Error(n[r]);this.header=new s,c.inflateGetHeader(this.strm,this.header)}function o(e,t){var r=new a(t);if(r.push(e,!0),r.err)throw r.msg||n[r.err];return r.result}a.prototype.push=function(e,t){var r,n,i,s,a,o,h=this.strm,u=this.options.chunkSize,l=this.options.dictionary,f=!1;if(this.ended)return!1;n=t===~~t?t:!0===t?m.Z_FINISH:m.Z_NO_FLUSH,\"string\"==typeof e?h.input=p.binstring2buf(e):\"[object ArrayBuffer]\"===_.call(e)?h.input=new Uint8Array(e):h.input=e,h.next_in=0,h.avail_in=h.input.length;do{if(0===h.avail_out&&(h.output=new d.Buf8(u),h.next_out=0,h.avail_out=u),(r=c.inflate(h,m.Z_NO_FLUSH))===m.Z_NEED_DICT&&l&&(o=\"string\"==typeof l?p.string2buf(l):\"[object ArrayBuffer]\"===_.call(l)?new Uint8Array(l):l,r=c.inflateSetDictionary(this.strm,o)),r===m.Z_BUF_ERROR&&!0===f&&(r=m.Z_OK,f=!1),r!==m.Z_STREAM_END&&r!==m.Z_OK)return this.onEnd(r),!(this.ended=!0);h.next_out&&(0!==h.avail_out&&r!==m.Z_STREAM_END&&(0!==h.avail_in||n!==m.Z_FINISH&&n!==m.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(i=p.utf8border(h.output,h.next_out),s=h.next_out-i,a=p.buf2string(h.output,i),h.next_out=s,h.avail_out=u-s,s&&d.arraySet(h.output,h.output,i,s,0),this.onData(a)):this.onData(d.shrinkBuf(h.output,h.next_out)))),0===h.avail_in&&0===h.avail_out&&(f=!0)}while((0<h.avail_in||0===h.avail_out)&&r!==m.Z_STREAM_END);return r===m.Z_STREAM_END&&(n=m.Z_FINISH),n===m.Z_FINISH?(r=c.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===m.Z_OK):n!==m.Z_SYNC_FLUSH||(this.onEnd(m.Z_OK),!(h.avail_out=0))},a.prototype.onData=function(e){this.chunks.push(e)},a.prototype.onEnd=function(e){e===m.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=d.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Inflate=a,r.inflate=o,r.inflateRaw=function(e,t){return(t=t||{}).raw=!0,o(e,t)},r.ungzip=o},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/constants\":44,\"./zlib/gzheader\":47,\"./zlib/inflate\":49,\"./zlib/messages\":51,\"./zlib/zstream\":53}],41:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;r.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var r=t.shift();if(r){if(\"object\"!=typeof r)throw new TypeError(r+\"must be non-object\");for(var n in r)r.hasOwnProperty(n)&&(e[n]=r[n])}}return e},r.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var i={arraySet:function(e,t,r,n,i){if(t.subarray&&e.subarray)e.set(t.subarray(r,r+n),i);else for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){var t,r,n,i,s,a;for(t=n=0,r=e.length;t<r;t++)n+=e[t].length;for(a=new Uint8Array(n),t=i=0,r=e.length;t<r;t++)s=e[t],a.set(s,i),i+=s.length;return a}},s={arraySet:function(e,t,r,n,i){for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){return[].concat.apply([],e)}};r.setTyped=function(e){e?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,i)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,s))},r.setTyped(n)},{}],42:[function(e,t,r){\"use strict\";var h=e(\"./common\"),i=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(e){i=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){s=!1}for(var u=new h.Buf8(256),n=0;n<256;n++)u[n]=252<=n?6:248<=n?5:240<=n?4:224<=n?3:192<=n?2:1;function l(e,t){if(t<65537&&(e.subarray&&s||!e.subarray&&i))return String.fromCharCode.apply(null,h.shrinkBuf(e,t));for(var r=\"\",n=0;n<t;n++)r+=String.fromCharCode(e[n]);return r}u[254]=u[254]=1,r.string2buf=function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=new h.Buf8(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t},r.buf2binstring=function(e){return l(e,e.length)},r.binstring2buf=function(e){for(var t=new h.Buf8(e.length),r=0,n=t.length;r<n;r++)t[r]=e.charCodeAt(r);return t},r.buf2string=function(e,t){var r,n,i,s,a=t||e.length,o=new Array(2*a);for(r=n=0;r<a;)if((i=e[r++])<128)o[n++]=i;else if(4<(s=u[i]))o[n++]=65533,r+=s-1;else{for(i&=2===s?31:3===s?15:7;1<s&&r<a;)i=i<<6|63&e[r++],s--;1<s?o[n++]=65533:i<65536?o[n++]=i:(i-=65536,o[n++]=55296|i>>10&1023,o[n++]=56320|1023&i)}return l(o,n)},r.utf8border=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}},{\"./common\":41}],43:[function(e,t,r){\"use strict\";t.exports=function(e,t,r,n){for(var i=65535&e|0,s=e>>>16&65535|0,a=0;0!==r;){for(r-=a=2e3<r?2e3:r;s=s+(i=i+t[n++]|0)|0,--a;);i%=65521,s%=65521}return i|s<<16|0}},{}],44:[function(e,t,r){\"use strict\";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(e,t,r){\"use strict\";var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}},{}],46:[function(e,t,r){\"use strict\";var h,c=e(\"../utils/common\"),u=e(\"./trees\"),d=e(\"./adler32\"),p=e(\"./crc32\"),n=e(\"./messages\"),l=0,f=4,m=0,_=-2,g=-1,b=4,i=2,v=8,y=9,s=286,a=30,o=19,w=2*s+1,k=15,x=3,S=258,z=S+x+1,C=42,E=113,A=1,I=2,O=3,B=4;function R(e,t){return e.msg=n[t],t}function T(e){return(e<<1)-(4<e?9:0)}function D(e){for(var t=e.length;0<=--t;)e[t]=0}function F(e){var t=e.state,r=t.pending;r>e.avail_out&&(r=e.avail_out),0!==r&&(c.arraySet(e.output,t.pending_buf,t.pending_out,r,e.next_out),e.next_out+=r,t.pending_out+=r,e.total_out+=r,e.avail_out-=r,t.pending-=r,0===t.pending&&(t.pending_out=0))}function N(e,t){u._tr_flush_block(e,0<=e.block_start?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,F(e.strm)}function U(e,t){e.pending_buf[e.pending++]=t}function P(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function L(e,t){var r,n,i=e.max_chain_length,s=e.strstart,a=e.prev_length,o=e.nice_match,h=e.strstart>e.w_size-z?e.strstart-(e.w_size-z):0,u=e.window,l=e.w_mask,f=e.prev,c=e.strstart+S,d=u[s+a-1],p=u[s+a];e.prev_length>=e.good_match&&(i>>=2),o>e.lookahead&&(o=e.lookahead);do{if(u[(r=t)+a]===p&&u[r+a-1]===d&&u[r]===u[s]&&u[++r]===u[s+1]){s+=2,r++;do{}while(u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&s<c);if(n=S-(c-s),s=c-S,a<n){if(e.match_start=t,o<=(a=n))break;d=u[s+a-1],p=u[s+a]}}}while((t=f[t&l])>h&&0!=--i);return a<=e.lookahead?a:e.lookahead}function j(e){var t,r,n,i,s,a,o,h,u,l,f=e.w_size;do{if(i=e.window_size-e.lookahead-e.strstart,e.strstart>=f+(f-z)){for(c.arraySet(e.window,e.window,f,f,0),e.match_start-=f,e.strstart-=f,e.block_start-=f,t=r=e.hash_size;n=e.head[--t],e.head[t]=f<=n?n-f:0,--r;);for(t=r=f;n=e.prev[--t],e.prev[t]=f<=n?n-f:0,--r;);i+=f}if(0===e.strm.avail_in)break;if(a=e.strm,o=e.window,h=e.strstart+e.lookahead,u=i,l=void 0,l=a.avail_in,u<l&&(l=u),r=0===l?0:(a.avail_in-=l,c.arraySet(o,a.input,a.next_in,l,h),1===a.state.wrap?a.adler=d(a.adler,o,l,h):2===a.state.wrap&&(a.adler=p(a.adler,o,l,h)),a.next_in+=l,a.total_in+=l,l),e.lookahead+=r,e.lookahead+e.insert>=x)for(s=e.strstart-e.insert,e.ins_h=e.window[s],e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+x-1])&e.hash_mask,e.prev[s&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=s,s++,e.insert--,!(e.lookahead+e.insert<x)););}while(e.lookahead<z&&0!==e.strm.avail_in)}function Z(e,t){for(var r,n;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==r&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r)),e.match_length>=x)if(n=u._tr_tally(e,e.strstart-e.match_start,e.match_length-x),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=x){for(e.match_length--;e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart,0!=--e.match_length;);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else n=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function W(e,t){for(var r,n,i;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=x-1,0!==r&&e.prev_length<e.max_lazy_match&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r),e.match_length<=5&&(1===e.strategy||e.match_length===x&&4096<e.strstart-e.match_start)&&(e.match_length=x-1)),e.prev_length>=x&&e.match_length<=e.prev_length){for(i=e.strstart+e.lookahead-x,n=u._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-x),e.lookahead-=e.prev_length-1,e.prev_length-=2;++e.strstart<=i&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!=--e.prev_length;);if(e.match_available=0,e.match_length=x-1,e.strstart++,n&&(N(e,!1),0===e.strm.avail_out))return A}else if(e.match_available){if((n=u._tr_tally(e,0,e.window[e.strstart-1]))&&N(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return A}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=u._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function M(e,t,r,n,i){this.good_length=e,this.max_lazy=t,this.nice_length=r,this.max_chain=n,this.func=i}function H(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=v,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new c.Buf16(2*w),this.dyn_dtree=new c.Buf16(2*(2*a+1)),this.bl_tree=new c.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new c.Buf16(k+1),this.heap=new c.Buf16(2*s+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new c.Buf16(2*s+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function G(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=i,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?C:E,e.adler=2===t.wrap?0:1,t.last_flush=l,u._tr_init(t),m):R(e,_)}function K(e){var t=G(e);return t===m&&function(e){e.window_size=2*e.w_size,D(e.head),e.max_lazy_match=h[e.level].max_lazy,e.good_match=h[e.level].good_length,e.nice_match=h[e.level].nice_length,e.max_chain_length=h[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=x-1,e.match_available=0,e.ins_h=0}(e.state),t}function Y(e,t,r,n,i,s){if(!e)return _;var a=1;if(t===g&&(t=6),n<0?(a=0,n=-n):15<n&&(a=2,n-=16),i<1||y<i||r!==v||n<8||15<n||t<0||9<t||s<0||b<s)return R(e,_);8===n&&(n=9);var o=new H;return(e.state=o).strm=e,o.wrap=a,o.gzhead=null,o.w_bits=n,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=i+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new c.Buf8(2*o.w_size),o.head=new c.Buf16(o.hash_size),o.prev=new c.Buf16(o.w_size),o.lit_bufsize=1<<i+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new c.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=t,o.strategy=s,o.method=r,K(e)}h=[new M(0,0,0,0,function(e,t){var r=65535;for(r>e.pending_buf_size-5&&(r=e.pending_buf_size-5);;){if(e.lookahead<=1){if(j(e),0===e.lookahead&&t===l)return A;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var n=e.block_start+r;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,N(e,!1),0===e.strm.avail_out))return A;if(e.strstart-e.block_start>=e.w_size-z&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):(e.strstart>e.block_start&&(N(e,!1),e.strm.avail_out),A)}),new M(4,4,8,4,Z),new M(4,5,16,8,Z),new M(4,6,32,32,Z),new M(4,4,16,16,W),new M(8,16,32,32,W),new M(8,16,128,128,W),new M(8,32,128,256,W),new M(32,128,258,1024,W),new M(32,258,258,4096,W)],r.deflateInit=function(e,t){return Y(e,t,v,15,8,0)},r.deflateInit2=Y,r.deflateReset=K,r.deflateResetKeep=G,r.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?_:(e.state.gzhead=t,m):_},r.deflate=function(e,t){var r,n,i,s;if(!e||!e.state||5<t||t<0)return e?R(e,_):_;if(n=e.state,!e.output||!e.input&&0!==e.avail_in||666===n.status&&t!==f)return R(e,0===e.avail_out?-5:_);if(n.strm=e,r=n.last_flush,n.last_flush=t,n.status===C)if(2===n.wrap)e.adler=0,U(n,31),U(n,139),U(n,8),n.gzhead?(U(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),U(n,255&n.gzhead.time),U(n,n.gzhead.time>>8&255),U(n,n.gzhead.time>>16&255),U(n,n.gzhead.time>>24&255),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(U(n,255&n.gzhead.extra.length),U(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=p(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69):(U(n,0),U(n,0),U(n,0),U(n,0),U(n,0),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,3),n.status=E);else{var a=v+(n.w_bits-8<<4)<<8;a|=(2<=n.strategy||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(a|=32),a+=31-a%31,n.status=E,P(n,a),0!==n.strstart&&(P(n,e.adler>>>16),P(n,65535&e.adler)),e.adler=1}if(69===n.status)if(n.gzhead.extra){for(i=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending!==n.pending_buf_size));)U(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=73)}else n.status=73;if(73===n.status)if(n.gzhead.name){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.gzindex=0,n.status=91)}else n.status=91;if(91===n.status)if(n.gzhead.comment){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.status=103)}else n.status=103;if(103===n.status&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&F(e),n.pending+2<=n.pending_buf_size&&(U(n,255&e.adler),U(n,e.adler>>8&255),e.adler=0,n.status=E)):n.status=E),0!==n.pending){if(F(e),0===e.avail_out)return n.last_flush=-1,m}else if(0===e.avail_in&&T(t)<=T(r)&&t!==f)return R(e,-5);if(666===n.status&&0!==e.avail_in)return R(e,-5);if(0!==e.avail_in||0!==n.lookahead||t!==l&&666!==n.status){var o=2===n.strategy?function(e,t){for(var r;;){if(0===e.lookahead&&(j(e),0===e.lookahead)){if(t===l)return A;break}if(e.match_length=0,r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):3===n.strategy?function(e,t){for(var r,n,i,s,a=e.window;;){if(e.lookahead<=S){if(j(e),e.lookahead<=S&&t===l)return A;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=x&&0<e.strstart&&(n=a[i=e.strstart-1])===a[++i]&&n===a[++i]&&n===a[++i]){s=e.strstart+S;do{}while(n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&i<s);e.match_length=S-(s-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=x?(r=u._tr_tally(e,1,e.match_length-x),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):h[n.level].func(n,t);if(o!==O&&o!==B||(n.status=666),o===A||o===O)return 0===e.avail_out&&(n.last_flush=-1),m;if(o===I&&(1===t?u._tr_align(n):5!==t&&(u._tr_stored_block(n,0,0,!1),3===t&&(D(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),F(e),0===e.avail_out))return n.last_flush=-1,m}return t!==f?m:n.wrap<=0?1:(2===n.wrap?(U(n,255&e.adler),U(n,e.adler>>8&255),U(n,e.adler>>16&255),U(n,e.adler>>24&255),U(n,255&e.total_in),U(n,e.total_in>>8&255),U(n,e.total_in>>16&255),U(n,e.total_in>>24&255)):(P(n,e.adler>>>16),P(n,65535&e.adler)),F(e),0<n.wrap&&(n.wrap=-n.wrap),0!==n.pending?m:1)},r.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==C&&69!==t&&73!==t&&91!==t&&103!==t&&t!==E&&666!==t?R(e,_):(e.state=null,t===E?R(e,-3):m):_},r.deflateSetDictionary=function(e,t){var r,n,i,s,a,o,h,u,l=t.length;if(!e||!e.state)return _;if(2===(s=(r=e.state).wrap)||1===s&&r.status!==C||r.lookahead)return _;for(1===s&&(e.adler=d(e.adler,t,l,0)),r.wrap=0,l>=r.w_size&&(0===s&&(D(r.head),r.strstart=0,r.block_start=0,r.insert=0),u=new c.Buf8(r.w_size),c.arraySet(u,t,l-r.w_size,r.w_size,0),t=u,l=r.w_size),a=e.avail_in,o=e.next_in,h=e.input,e.avail_in=l,e.next_in=0,e.input=t,j(r);r.lookahead>=x;){for(n=r.strstart,i=r.lookahead-(x-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+x-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++,--i;);r.strstart=n,r.lookahead=x-1,j(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=x-1,r.match_available=0,e.next_in=o,e.input=h,e.avail_in=a,r.wrap=s,m},r.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./messages\":51,\"./trees\":52}],47:[function(e,t,r){\"use strict\";t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}},{}],48:[function(e,t,r){\"use strict\";t.exports=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C;r=e.state,n=e.next_in,z=e.input,i=n+(e.avail_in-5),s=e.next_out,C=e.output,a=s-(t-e.avail_out),o=s+(e.avail_out-257),h=r.dmax,u=r.wsize,l=r.whave,f=r.wnext,c=r.window,d=r.hold,p=r.bits,m=r.lencode,_=r.distcode,g=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;e:do{p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=m[d&g];t:for(;;){if(d>>>=y=v>>>24,p-=y,0===(y=v>>>16&255))C[s++]=65535&v;else{if(!(16&y)){if(0==(64&y)){v=m[(65535&v)+(d&(1<<y)-1)];continue t}if(32&y){r.mode=12;break e}e.msg=\"invalid literal/length code\",r.mode=30;break e}w=65535&v,(y&=15)&&(p<y&&(d+=z[n++]<<p,p+=8),w+=d&(1<<y)-1,d>>>=y,p-=y),p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=_[d&b];r:for(;;){if(d>>>=y=v>>>24,p-=y,!(16&(y=v>>>16&255))){if(0==(64&y)){v=_[(65535&v)+(d&(1<<y)-1)];continue r}e.msg=\"invalid distance code\",r.mode=30;break e}if(k=65535&v,p<(y&=15)&&(d+=z[n++]<<p,(p+=8)<y&&(d+=z[n++]<<p,p+=8)),h<(k+=d&(1<<y)-1)){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(d>>>=y,p-=y,(y=s-a)<k){if(l<(y=k-y)&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(S=c,(x=0)===f){if(x+=u-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}}else if(f<y){if(x+=u+f-y,(y-=f)<w){for(w-=y;C[s++]=c[x++],--y;);if(x=0,f<w){for(w-=y=f;C[s++]=c[x++],--y;);x=s-k,S=C}}}else if(x+=f-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}for(;2<w;)C[s++]=S[x++],C[s++]=S[x++],C[s++]=S[x++],w-=3;w&&(C[s++]=S[x++],1<w&&(C[s++]=S[x++]))}else{for(x=s-k;C[s++]=C[x++],C[s++]=C[x++],C[s++]=C[x++],2<(w-=3););w&&(C[s++]=C[x++],1<w&&(C[s++]=C[x++]))}break}}break}}while(n<i&&s<o);n-=w=p>>3,d&=(1<<(p-=w<<3))-1,e.next_in=n,e.next_out=s,e.avail_in=n<i?i-n+5:5-(n-i),e.avail_out=s<o?o-s+257:257-(s-o),r.hold=d,r.bits=p}},{}],49:[function(e,t,r){\"use strict\";var I=e(\"../utils/common\"),O=e(\"./adler32\"),B=e(\"./crc32\"),R=e(\"./inffast\"),T=e(\"./inftrees\"),D=1,F=2,N=0,U=-2,P=1,n=852,i=592;function L(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function s(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function a(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=P,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new I.Buf32(n),t.distcode=t.distdyn=new I.Buf32(i),t.sane=1,t.back=-1,N):U}function o(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,a(e)):U}function h(e,t){var r,n;return e&&e.state?(n=e.state,t<0?(r=0,t=-t):(r=1+(t>>4),t<48&&(t&=15)),t&&(t<8||15<t)?U:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=r,n.wbits=t,o(e))):U}function u(e,t){var r,n;return e?(n=new s,(e.state=n).window=null,(r=h(e,t))!==N&&(e.state=null),r):U}var l,f,c=!0;function j(e){if(c){var t;for(l=new I.Buf32(512),f=new I.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(T(D,e.lens,0,288,l,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;T(F,e.lens,0,32,f,0,e.work,{bits:5}),c=!1}e.lencode=l,e.lenbits=9,e.distcode=f,e.distbits=5}function Z(e,t,r,n){var i,s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new I.Buf8(s.wsize)),n>=s.wsize?(I.arraySet(s.window,t,r-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):(n<(i=s.wsize-s.wnext)&&(i=n),I.arraySet(s.window,t,r-n,i,s.wnext),(n-=i)?(I.arraySet(s.window,t,r-n,n,0),s.wnext=n,s.whave=s.wsize):(s.wnext+=i,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=i))),0}r.inflateReset=o,r.inflateReset2=h,r.inflateResetKeep=a,r.inflateInit=function(e){return u(e,15)},r.inflateInit2=u,r.inflate=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C=0,E=new I.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return U;12===(r=e.state).mode&&(r.mode=13),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,f=o,c=h,x=N;e:for(;;)switch(r.mode){case P:if(0===r.wrap){r.mode=13;break}for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(2&r.wrap&&35615===u){E[r.check=0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0),l=u=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&u)<<8)+(u>>8))%31){e.msg=\"incorrect header check\",r.mode=30;break}if(8!=(15&u)){e.msg=\"unknown compression method\",r.mode=30;break}if(l-=4,k=8+(15&(u>>>=4)),0===r.wbits)r.wbits=k;else if(k>r.wbits){e.msg=\"invalid window size\",r.mode=30;break}r.dmax=1<<k,e.adler=r.check=1,r.mode=512&u?10:12,l=u=0;break;case 2:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.flags=u,8!=(255&r.flags)){e.msg=\"unknown compression method\",r.mode=30;break}if(57344&r.flags){e.msg=\"unknown header flags set\",r.mode=30;break}r.head&&(r.head.text=u>>8&1),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=3;case 3:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.time=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,E[2]=u>>>16&255,E[3]=u>>>24&255,r.check=B(r.check,E,4,0)),l=u=0,r.mode=4;case 4:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.xflags=255&u,r.head.os=u>>8),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=5;case 5:if(1024&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length=u,r.head&&(r.head.extra_len=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(o<(d=r.length)&&(d=o),d&&(r.head&&(k=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),I.arraySet(r.head.extra,n,s,d,k)),512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,r.length-=d),r.length))break e;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.name+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.comment+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(65535&r.check)){e.msg=\"header crc mismatch\",r.mode=30;break}l=u=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),e.adler=r.check=0,r.mode=12;break;case 10:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}e.adler=r.check=L(u),l=u=0,r.mode=11;case 11:if(0===r.havedict)return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,2;e.adler=r.check=1,r.mode=12;case 12:if(5===t||6===t)break e;case 13:if(r.last){u>>>=7&l,l-=7&l,r.mode=27;break}for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}switch(r.last=1&u,l-=1,3&(u>>>=1)){case 0:r.mode=14;break;case 1:if(j(r),r.mode=20,6!==t)break;u>>>=2,l-=2;break e;case 2:r.mode=17;break;case 3:e.msg=\"invalid block type\",r.mode=30}u>>>=2,l-=2;break;case 14:for(u>>>=7&l,l-=7&l;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if((65535&u)!=(u>>>16^65535)){e.msg=\"invalid stored block lengths\",r.mode=30;break}if(r.length=65535&u,l=u=0,r.mode=15,6===t)break e;case 15:r.mode=16;case 16:if(d=r.length){if(o<d&&(d=o),h<d&&(d=h),0===d)break e;I.arraySet(i,n,s,d,a),o-=d,s+=d,h-=d,a+=d,r.length-=d;break}r.mode=12;break;case 17:for(;l<14;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.nlen=257+(31&u),u>>>=5,l-=5,r.ndist=1+(31&u),u>>>=5,l-=5,r.ncode=4+(15&u),u>>>=4,l-=4,286<r.nlen||30<r.ndist){e.msg=\"too many length or distance symbols\",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.lens[A[r.have++]]=7&u,u>>>=3,l-=3}for(;r.have<19;)r.lens[A[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},x=T(0,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid code lengths set\",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(b<16)u>>>=_,l-=_,r.lens[r.have++]=b;else{if(16===b){for(z=_+2;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u>>>=_,l-=_,0===r.have){e.msg=\"invalid bit length repeat\",r.mode=30;break}k=r.lens[r.have-1],d=3+(3&u),u>>>=2,l-=2}else if(17===b){for(z=_+3;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=3+(7&(u>>>=_)),u>>>=3,l-=3}else{for(z=_+7;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=11+(127&(u>>>=_)),u>>>=7,l-=7}if(r.have+d>r.nlen+r.ndist){e.msg=\"invalid bit length repeat\",r.mode=30;break}for(;d--;)r.lens[r.have++]=k}}if(30===r.mode)break;if(0===r.lens[256]){e.msg=\"invalid code -- missing end-of-block\",r.mode=30;break}if(r.lenbits=9,S={bits:r.lenbits},x=T(D,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid literal/lengths set\",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},x=T(F,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,x){e.msg=\"invalid distances set\",r.mode=30;break}if(r.mode=20,6===t)break e;case 20:r.mode=21;case 21:if(6<=o&&258<=h){e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,R(e,c),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(g&&0==(240&g)){for(v=_,y=g,w=b;g=(C=r.lencode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,r.length=b,0===g){r.mode=26;break}if(32&g){r.back=-1,r.mode=12;break}if(64&g){e.msg=\"invalid literal/length code\",r.mode=30;break}r.extra=15&g,r.mode=22;case 22:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;g=(C=r.distcode[u&(1<<r.distbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(0==(240&g)){for(v=_,y=g,w=b;g=(C=r.distcode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,64&g){e.msg=\"invalid distance code\",r.mode=30;break}r.offset=b,r.extra=15&g,r.mode=24;case 24:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.offset+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){e.msg=\"invalid distance too far back\",r.mode=30;break}r.mode=25;case 25:if(0===h)break e;if(d=c-h,r.offset>d){if((d=r.offset-d)>r.whave&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break}p=d>r.wnext?(d-=r.wnext,r.wsize-d):r.wnext-d,d>r.length&&(d=r.length),m=r.window}else m=i,p=a-r.offset,d=r.length;for(h<d&&(d=h),h-=d,r.length-=d;i[a++]=m[p++],--d;);0===r.length&&(r.mode=21);break;case 26:if(0===h)break e;i[a++]=r.length,h--,r.mode=21;break;case 27:if(r.wrap){for(;l<32;){if(0===o)break e;o--,u|=n[s++]<<l,l+=8}if(c-=h,e.total_out+=c,r.total+=c,c&&(e.adler=r.check=r.flags?B(r.check,i,c,a-c):O(r.check,i,c,a-c)),c=h,(r.flags?u:L(u))!==r.check){e.msg=\"incorrect data check\",r.mode=30;break}l=u=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(4294967295&r.total)){e.msg=\"incorrect length check\",r.mode=30;break}l=u=0}r.mode=29;case 29:x=1;break e;case 30:x=-3;break e;case 31:return-4;case 32:default:return U}return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,(r.wsize||c!==e.avail_out&&r.mode<30&&(r.mode<27||4!==t))&&Z(e,e.output,e.next_out,c-e.avail_out)?(r.mode=31,-4):(f-=e.avail_in,c-=e.avail_out,e.total_in+=f,e.total_out+=c,r.total+=c,r.wrap&&c&&(e.adler=r.check=r.flags?B(r.check,i,c,e.next_out-c):O(r.check,i,c,e.next_out-c)),e.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==f&&0===c||4===t)&&x===N&&(x=-5),x)},r.inflateEnd=function(e){if(!e||!e.state)return U;var t=e.state;return t.window&&(t.window=null),e.state=null,N},r.inflateGetHeader=function(e,t){var r;return e&&e.state?0==(2&(r=e.state).wrap)?U:((r.head=t).done=!1,N):U},r.inflateSetDictionary=function(e,t){var r,n=t.length;return e&&e.state?0!==(r=e.state).wrap&&11!==r.mode?U:11===r.mode&&O(1,t,n,0)!==r.check?-3:Z(e,t,n,n)?(r.mode=31,-4):(r.havedict=1,N):U},r.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./inffast\":48,\"./inftrees\":50}],50:[function(e,t,r){\"use strict\";var D=e(\"../utils/common\"),F=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],N=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],P=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,r,n,i,s,a,o){var h,u,l,f,c,d,p,m,_,g=o.bits,b=0,v=0,y=0,w=0,k=0,x=0,S=0,z=0,C=0,E=0,A=null,I=0,O=new D.Buf16(16),B=new D.Buf16(16),R=null,T=0;for(b=0;b<=15;b++)O[b]=0;for(v=0;v<n;v++)O[t[r+v]]++;for(k=g,w=15;1<=w&&0===O[w];w--);if(w<k&&(k=w),0===w)return i[s++]=20971520,i[s++]=20971520,o.bits=1,0;for(y=1;y<w&&0===O[y];y++);for(k<y&&(k=y),b=z=1;b<=15;b++)if(z<<=1,(z-=O[b])<0)return-1;if(0<z&&(0===e||1!==w))return-1;for(B[1]=0,b=1;b<15;b++)B[b+1]=B[b]+O[b];for(v=0;v<n;v++)0!==t[r+v]&&(a[B[t[r+v]]++]=v);if(d=0===e?(A=R=a,19):1===e?(A=F,I-=257,R=N,T-=257,256):(A=U,R=P,-1),b=y,c=s,S=v=E=0,l=-1,f=(C=1<<(x=k))-1,1===e&&852<C||2===e&&592<C)return 1;for(;;){for(p=b-S,_=a[v]<d?(m=0,a[v]):a[v]>d?(m=R[T+a[v]],A[I+a[v]]):(m=96,0),h=1<<b-S,y=u=1<<x;i[c+(E>>S)+(u-=h)]=p<<24|m<<16|_|0,0!==u;);for(h=1<<b-1;E&h;)h>>=1;if(0!==h?(E&=h-1,E+=h):E=0,v++,0==--O[b]){if(b===w)break;b=t[r+a[v]]}if(k<b&&(E&f)!==l){for(0===S&&(S=k),c+=y,z=1<<(x=b-S);x+S<w&&!((z-=O[x+S])<=0);)x++,z<<=1;if(C+=1<<x,1===e&&852<C||2===e&&592<C)return 1;i[l=E&f]=k<<24|x<<16|c-s|0}}return 0!==E&&(i[c+E]=b-S<<24|64<<16|0),o.bits=k,0}},{\"../utils/common\":41}],51:[function(e,t,r){\"use strict\";t.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],52:[function(e,t,r){\"use strict\";var i=e(\"../utils/common\"),o=0,h=1;function n(e){for(var t=e.length;0<=--t;)e[t]=0}var s=0,a=29,u=256,l=u+1+a,f=30,c=19,_=2*l+1,g=15,d=16,p=7,m=256,b=16,v=17,y=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],k=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=new Array(2*(l+2));n(z);var C=new Array(2*f);n(C);var E=new Array(512);n(E);var A=new Array(256);n(A);var I=new Array(a);n(I);var O,B,R,T=new Array(f);function D(e,t,r,n,i){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=i,this.has_stree=e&&e.length}function F(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function N(e){return e<256?E[e]:E[256+(e>>>7)]}function U(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function P(e,t,r){e.bi_valid>d-r?(e.bi_buf|=t<<e.bi_valid&65535,U(e,e.bi_buf),e.bi_buf=t>>d-e.bi_valid,e.bi_valid+=r-d):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=r)}function L(e,t,r){P(e,r[2*t],r[2*t+1])}function j(e,t){for(var r=0;r|=1&e,e>>>=1,r<<=1,0<--t;);return r>>>1}function Z(e,t,r){var n,i,s=new Array(g+1),a=0;for(n=1;n<=g;n++)s[n]=a=a+r[n-1]<<1;for(i=0;i<=t;i++){var o=e[2*i+1];0!==o&&(e[2*i]=j(s[o]++,o))}}function W(e){var t;for(t=0;t<l;t++)e.dyn_ltree[2*t]=0;for(t=0;t<f;t++)e.dyn_dtree[2*t]=0;for(t=0;t<c;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*m]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function M(e){8<e.bi_valid?U(e,e.bi_buf):0<e.bi_valid&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function H(e,t,r,n){var i=2*t,s=2*r;return e[i]<e[s]||e[i]===e[s]&&n[t]<=n[r]}function G(e,t,r){for(var n=e.heap[r],i=r<<1;i<=e.heap_len&&(i<e.heap_len&&H(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!H(t,n,e.heap[i],e.depth));)e.heap[r]=e.heap[i],r=i,i<<=1;e.heap[r]=n}function K(e,t,r){var n,i,s,a,o=0;if(0!==e.last_lit)for(;n=e.pending_buf[e.d_buf+2*o]<<8|e.pending_buf[e.d_buf+2*o+1],i=e.pending_buf[e.l_buf+o],o++,0===n?L(e,i,t):(L(e,(s=A[i])+u+1,t),0!==(a=w[s])&&P(e,i-=I[s],a),L(e,s=N(--n),r),0!==(a=k[s])&&P(e,n-=T[s],a)),o<e.last_lit;);L(e,m,t)}function Y(e,t){var r,n,i,s=t.dyn_tree,a=t.stat_desc.static_tree,o=t.stat_desc.has_stree,h=t.stat_desc.elems,u=-1;for(e.heap_len=0,e.heap_max=_,r=0;r<h;r++)0!==s[2*r]?(e.heap[++e.heap_len]=u=r,e.depth[r]=0):s[2*r+1]=0;for(;e.heap_len<2;)s[2*(i=e.heap[++e.heap_len]=u<2?++u:0)]=1,e.depth[i]=0,e.opt_len--,o&&(e.static_len-=a[2*i+1]);for(t.max_code=u,r=e.heap_len>>1;1<=r;r--)G(e,s,r);for(i=h;r=e.heap[1],e.heap[1]=e.heap[e.heap_len--],G(e,s,1),n=e.heap[1],e.heap[--e.heap_max]=r,e.heap[--e.heap_max]=n,s[2*i]=s[2*r]+s[2*n],e.depth[i]=(e.depth[r]>=e.depth[n]?e.depth[r]:e.depth[n])+1,s[2*r+1]=s[2*n+1]=i,e.heap[1]=i++,G(e,s,1),2<=e.heap_len;);e.heap[--e.heap_max]=e.heap[1],function(e,t){var r,n,i,s,a,o,h=t.dyn_tree,u=t.max_code,l=t.stat_desc.static_tree,f=t.stat_desc.has_stree,c=t.stat_desc.extra_bits,d=t.stat_desc.extra_base,p=t.stat_desc.max_length,m=0;for(s=0;s<=g;s++)e.bl_count[s]=0;for(h[2*e.heap[e.heap_max]+1]=0,r=e.heap_max+1;r<_;r++)p<(s=h[2*h[2*(n=e.heap[r])+1]+1]+1)&&(s=p,m++),h[2*n+1]=s,u<n||(e.bl_count[s]++,a=0,d<=n&&(a=c[n-d]),o=h[2*n],e.opt_len+=o*(s+a),f&&(e.static_len+=o*(l[2*n+1]+a)));if(0!==m){do{for(s=p-1;0===e.bl_count[s];)s--;e.bl_count[s]--,e.bl_count[s+1]+=2,e.bl_count[p]--,m-=2}while(0<m);for(s=p;0!==s;s--)for(n=e.bl_count[s];0!==n;)u<(i=e.heap[--r])||(h[2*i+1]!==s&&(e.opt_len+=(s-h[2*i+1])*h[2*i],h[2*i+1]=s),n--)}}(e,t),Z(s,u,e.bl_count)}function X(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),t[2*(r+1)+1]=65535,n=0;n<=r;n++)i=a,a=t[2*(n+1)+1],++o<h&&i===a||(o<u?e.bl_tree[2*i]+=o:0!==i?(i!==s&&e.bl_tree[2*i]++,e.bl_tree[2*b]++):o<=10?e.bl_tree[2*v]++:e.bl_tree[2*y]++,s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4))}function V(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),n=0;n<=r;n++)if(i=a,a=t[2*(n+1)+1],!(++o<h&&i===a)){if(o<u)for(;L(e,i,e.bl_tree),0!=--o;);else 0!==i?(i!==s&&(L(e,i,e.bl_tree),o--),L(e,b,e.bl_tree),P(e,o-3,2)):o<=10?(L(e,v,e.bl_tree),P(e,o-3,3)):(L(e,y,e.bl_tree),P(e,o-11,7));s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4)}}n(T);var q=!1;function J(e,t,r,n){P(e,(s<<1)+(n?1:0),3),function(e,t,r,n){M(e),n&&(U(e,r),U(e,~r)),i.arraySet(e.pending_buf,e.window,t,r,e.pending),e.pending+=r}(e,t,r,!0)}r._tr_init=function(e){q||(function(){var e,t,r,n,i,s=new Array(g+1);for(n=r=0;n<a-1;n++)for(I[n]=r,e=0;e<1<<w[n];e++)A[r++]=n;for(A[r-1]=n,n=i=0;n<16;n++)for(T[n]=i,e=0;e<1<<k[n];e++)E[i++]=n;for(i>>=7;n<f;n++)for(T[n]=i<<7,e=0;e<1<<k[n]-7;e++)E[256+i++]=n;for(t=0;t<=g;t++)s[t]=0;for(e=0;e<=143;)z[2*e+1]=8,e++,s[8]++;for(;e<=255;)z[2*e+1]=9,e++,s[9]++;for(;e<=279;)z[2*e+1]=7,e++,s[7]++;for(;e<=287;)z[2*e+1]=8,e++,s[8]++;for(Z(z,l+1,s),e=0;e<f;e++)C[2*e+1]=5,C[2*e]=j(e,5);O=new D(z,w,u+1,l,g),B=new D(C,k,0,f,g),R=new D(new Array(0),x,0,c,p)}(),q=!0),e.l_desc=new F(e.dyn_ltree,O),e.d_desc=new F(e.dyn_dtree,B),e.bl_desc=new F(e.bl_tree,R),e.bi_buf=0,e.bi_valid=0,W(e)},r._tr_stored_block=J,r._tr_flush_block=function(e,t,r,n){var i,s,a=0;0<e.level?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return o;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return h;for(t=32;t<u;t++)if(0!==e.dyn_ltree[2*t])return h;return o}(e)),Y(e,e.l_desc),Y(e,e.d_desc),a=function(e){var t;for(X(e,e.dyn_ltree,e.l_desc.max_code),X(e,e.dyn_dtree,e.d_desc.max_code),Y(e,e.bl_desc),t=c-1;3<=t&&0===e.bl_tree[2*S[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),i=e.opt_len+3+7>>>3,(s=e.static_len+3+7>>>3)<=i&&(i=s)):i=s=r+5,r+4<=i&&-1!==t?J(e,t,r,n):4===e.strategy||s===i?(P(e,2+(n?1:0),3),K(e,z,C)):(P(e,4+(n?1:0),3),function(e,t,r,n){var i;for(P(e,t-257,5),P(e,r-1,5),P(e,n-4,4),i=0;i<n;i++)P(e,e.bl_tree[2*S[i]+1],3);V(e,e.dyn_ltree,t-1),V(e,e.dyn_dtree,r-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),K(e,e.dyn_ltree,e.dyn_dtree)),W(e),n&&M(e)},r._tr_tally=function(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(A[r]+u+1)]++,e.dyn_dtree[2*N(t)]++),e.last_lit===e.lit_bufsize-1},r._tr_align=function(e){P(e,2,3),L(e,m,z),function(e){16===e.bi_valid?(U(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):8<=e.bi_valid&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{\"../utils/common\":41}],53:[function(e,t,r){\"use strict\";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(e,t,r){(function(e){!function(r,n){\"use strict\";if(!r.setImmediate){var i,s,t,a,o=1,h={},u=!1,l=r.document,e=Object.getPrototypeOf&&Object.getPrototypeOf(r);e=e&&e.setTimeout?e:r,i=\"[object process]\"==={}.toString.call(r.process)?function(e){process.nextTick(function(){c(e)})}:function(){if(r.postMessage&&!r.importScripts){var e=!0,t=r.onmessage;return r.onmessage=function(){e=!1},r.postMessage(\"\",\"*\"),r.onmessage=t,e}}()?(a=\"setImmediate$\"+Math.random()+\"$\",r.addEventListener?r.addEventListener(\"message\",d,!1):r.attachEvent(\"onmessage\",d),function(e){r.postMessage(a+e,\"*\")}):r.MessageChannel?((t=new MessageChannel).port1.onmessage=function(e){c(e.data)},function(e){t.port2.postMessage(e)}):l&&\"onreadystatechange\"in l.createElement(\"script\")?(s=l.documentElement,function(e){var t=l.createElement(\"script\");t.onreadystatechange=function(){c(e),t.onreadystatechange=null,s.removeChild(t),t=null},s.appendChild(t)}):function(e){setTimeout(c,0,e)},e.setImmediate=function(e){\"function\"!=typeof e&&(e=new Function(\"\"+e));for(var t=new Array(arguments.length-1),r=0;r<t.length;r++)t[r]=arguments[r+1];var n={callback:e,args:t};return h[o]=n,i(o),o++},e.clearImmediate=f}function f(e){delete h[e]}function c(e){if(u)setTimeout(c,0,e);else{var t=h[e];if(t){u=!0;try{!function(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(n,r)}}(t)}finally{f(e),u=!1}}}}function d(e){e.source===r&&\"string\"==typeof e.data&&0===e.data.indexOf(a)&&c(+e.data.slice(a.length))}}(\"undefined\"==typeof self?void 0===e?this:e:self)}).call(this,\"undefined\"!=typeof __webpack_require__.g?__webpack_require__.g:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}]},{},[10])(10)});\n\n//# sourceURL=webpack://parser-optimizer/./node_modules/jszip/dist/jszip.min.js?");

/***/ }),

/***/ "./src/css/base.css":
/*!**************************!*\
  !*** ./src/css/base.css ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://parser-optimizer/./src/css/base.css?");

/***/ }),

/***/ "./src/css/components.css":
/*!********************************!*\
  !*** ./src/css/components.css ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://parser-optimizer/./src/css/components.css?");

/***/ }),

/***/ "./src/css/layout.css":
/*!****************************!*\
  !*** ./src/css/layout.css ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://parser-optimizer/./src/css/layout.css?");

/***/ }),

/***/ "./src/css/sections.css":
/*!******************************!*\
  !*** ./src/css/sections.css ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://parser-optimizer/./src/css/sections.css?");

/***/ }),

/***/ "./src/js/algorithm-service.js":
/*!*************************************!*\
  !*** ./src/js/algorithm-service.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AlgorithmService: () => (/* binding */ AlgorithmService)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./src/js/index.js\");\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n\n\n/**\n * AlgorithmService - Handles algorithm execution and results processing\n * No UI concerns are handled here\n */\nvar AlgorithmService = {\n  /**\n   * Run the selected cutting optimization algorithm\n   * @param {string} type - Algorithm type ('ffd', 'ilp', 'compare')\n   * @param {Object} data - Data to process\n   * @returns {Object} Algorithm results\n   * @throws {Error} If data is invalid or algorithm fails\n   */\n  runAlgorithm: function runAlgorithm(type, data) {\n    try {\n      var results;\n      if (type === 'compare') {\n        // Run both algorithms and compare results\n        var ffdResults = this.runFFDAlgorithm(data);\n        var ilpResults = this.runILPAlgorithm(data);\n\n        // Compare results and select the best\n        results = this.compareAndSelectBest(ffdResults, ilpResults);\n      } else if (type === 'greedy' || type === 'ffd') {\n        results = this.runFFDAlgorithm(data);\n      } else if (type === 'ilp') {\n        results = this.runILPAlgorithm(data);\n      } else {\n        throw new Error(\"Type d'algorithme non reconnu: \".concat(type));\n      }\n      return results;\n    } catch (error) {\n      console.error('Algorithm error:', error);\n      throw error;\n    }\n  },\n  /**\n   * Compare algorithms and automatically select the best one\n   * @param {Object} data - Data to process\n   * @returns {Object} Best algorithm results with comparison data\n   */\n  compareAlgorithms: function compareAlgorithms(data) {\n    return this.runAlgorithm('compare', data);\n  },\n  /**\n   * Transform DataManager data structure to algorithm-expected models format\n   * @param {Object} data - Raw data from DataManager\n   * @returns {Object} Transformed data organized by models (profile_orientation)\n   */\n  transformDataToModels: function transformDataToModels(data) {\n    var modelPieces = {};\n    var modelMotherBars = {};\n    console.log('🔄 Transformation des données en modèles...');\n\n    // Transform pieces grouped by profile+orientation\n    for (var profile in data.pieces) {\n      var _iterator = _createForOfIteratorHelper(data.pieces[profile]),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var piece = _step.value;\n          var orientation = piece.orientation || 'undefined';\n          var modelKey = \"\".concat(profile, \"_\").concat(orientation);\n          if (!modelPieces[modelKey]) {\n            modelPieces[modelKey] = [];\n          }\n          modelPieces[modelKey].push(piece);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    // Transform mother bars - they need to be available for each orientation that has pieces\n    for (var _profile in data.motherBars) {\n      var availableOrientations = this.getOrientationsForProfile(_profile, data.pieces);\n      var _iterator2 = _createForOfIteratorHelper(availableOrientations),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _orientation = _step2.value;\n          var _modelKey = \"\".concat(_profile, \"_\").concat(_orientation);\n          if (!modelMotherBars[_modelKey]) {\n            modelMotherBars[_modelKey] = _toConsumableArray(data.motherBars[_profile]);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    // Log transformation summary\n    var modelCount = Object.keys(modelPieces).length;\n    console.log(\"\\uD83D\\uDCCA \".concat(modelCount, \" mod\\xE8les cr\\xE9\\xE9s:\"));\n    for (var _modelKey2 in modelPieces) {\n      var pieceCount = modelPieces[_modelKey2].length;\n      var motherBarCount = modelMotherBars[_modelKey2] ? modelMotherBars[_modelKey2].length : 0;\n      console.log(\"  \\u2022 \".concat(_modelKey2, \": \").concat(pieceCount, \" pi\\xE8ces, \").concat(motherBarCount, \" barres m\\xE8res\"));\n    }\n    return {\n      pieces: modelPieces,\n      motherBars: modelMotherBars\n    };\n  },\n  /**\n   * Get all orientations for a given profile from pieces data\n   * @param {string} profile - Profile to check\n   * @param {Object} piecesData - Pieces data organized by profile\n   * @returns {Array} Array of orientations for this profile\n   */\n  getOrientationsForProfile: function getOrientationsForProfile(profile, piecesData) {\n    var orientations = new Set();\n    if (piecesData[profile]) {\n      var _iterator3 = _createForOfIteratorHelper(piecesData[profile]),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var piece = _step3.value;\n          orientations.add(piece.orientation || 'undefined');\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    // If no orientations found, default to 'undefined'\n    if (orientations.size === 0) {\n      orientations.add('undefined');\n    }\n    return Array.from(orientations);\n  },\n  /**\n   * Run the First-Fit Decreasing algorithm\n   * @param {Object} data - Data to process\n   * @returns {Object} Algorithm results\n   */\n  runFFDAlgorithm: function runFFDAlgorithm(data) {\n    // Transform data to models format\n    var modelData = this.transformDataToModels(data);\n\n    // Run algorithm with transformed data\n    var results = _index_js__WEBPACK_IMPORTED_MODULE_0__.algorithms.solveGreedyFFD(modelData.motherBars, modelData.pieces);\n    results.algorithmName = 'First-Fit Decreasing';\n    results.algorithmType = 'ffd';\n    return results;\n  },\n  /**\n   * Run the Integer Linear Programming algorithm\n   * @param {Object} data - Data to process\n   * @returns {Object} Algorithm results\n   */\n  runILPAlgorithm: function runILPAlgorithm(data) {\n    // Transform data to models format\n    var modelData = this.transformDataToModels(data);\n\n    // Run algorithm with transformed data\n    var results = _index_js__WEBPACK_IMPORTED_MODULE_0__.algorithms.solveWithILP(modelData.motherBars, modelData.pieces);\n    results.algorithmName = 'Programmation Linéaire (ILP)';\n    results.algorithmType = 'ilp';\n    return results;\n  },\n  /**\n   * Compare results and select the best algorithm\n   * @param {Object} ffdResults - FFD algorithm results\n   * @param {Object} ilpResults - ILP algorithm results \n   * @returns {Object} Best algorithm results with comparison data\n   */\n  compareAndSelectBest: function compareAndSelectBest(ffdResults, ilpResults) {\n    var _ffdResults$globalSta, _ilpResults$globalSta;\n    // Validate results have needed properties\n    if (!(ffdResults !== null && ffdResults !== void 0 && (_ffdResults$globalSta = ffdResults.globalStats) !== null && _ffdResults$globalSta !== void 0 && (_ffdResults$globalSta = _ffdResults$globalSta.statistics) !== null && _ffdResults$globalSta !== void 0 && _ffdResults$globalSta.utilizationRate) || !(ilpResults !== null && ilpResults !== void 0 && (_ilpResults$globalSta = ilpResults.globalStats) !== null && _ilpResults$globalSta !== void 0 && (_ilpResults$globalSta = _ilpResults$globalSta.statistics) !== null && _ilpResults$globalSta !== void 0 && _ilpResults$globalSta.utilizationRate)) {\n      throw new Error(\"Les résultats d'algorithme sont incomplets pour la comparaison.\");\n    }\n\n    // Get efficiency values from results\n    var ffdEfficiency = parseFloat(ffdResults.globalStats.statistics.utilizationRate);\n    var ilpEfficiency = parseFloat(ilpResults.globalStats.statistics.utilizationRate);\n\n    // Get total bars used for each algorithm\n    var ffdBarsUsed = ffdResults.globalStats.totalBarsUsed;\n    var ilpBarsUsed = ilpResults.globalStats.totalBarsUsed;\n\n    // Determine best algorithm with improved logic\n    var bestAlgorithm;\n    var bestResults;\n    console.log(\"\\uD83D\\uDD0D Comparaison des algorithmes:\");\n    console.log(\"  FFD: \".concat(ffdEfficiency, \"% efficacit\\xE9, \").concat(ffdBarsUsed, \" barres m\\xE8res\"));\n    console.log(\"  ILP: \".concat(ilpEfficiency, \"% efficacit\\xE9, \").concat(ilpBarsUsed, \" barres m\\xE8res\"));\n    if (ffdEfficiency > ilpEfficiency) {\n      // FFD est plus efficace\n      bestAlgorithm = 'ffd';\n      bestResults = ffdResults;\n      console.log(\"  \\u2705 FFD choisi: meilleure efficacit\\xE9\");\n    } else if (ilpEfficiency > ffdEfficiency) {\n      // ILP est plus efficace\n      bestAlgorithm = 'ilp';\n      bestResults = ilpResults;\n      console.log(\"  \\u2705 ILP choisi: meilleure efficacit\\xE9\");\n    } else {\n      // Même efficacité, comparer le nombre de barres mères\n      if (ffdBarsUsed < ilpBarsUsed) {\n        bestAlgorithm = 'ffd';\n        bestResults = ffdResults;\n        console.log(\"  \\u2705 FFD choisi: m\\xEAme efficacit\\xE9 mais moins de barres m\\xE8res\");\n      } else if (ilpBarsUsed < ffdBarsUsed) {\n        bestAlgorithm = 'ilp';\n        bestResults = ilpResults;\n        console.log(\"  \\u2705 ILP choisi: m\\xEAme efficacit\\xE9 mais moins de barres m\\xE8res\");\n      } else {\n        // Même efficacité et même nombre de barres : choisir ILP par défaut\n        bestAlgorithm = 'ilp';\n        bestResults = ilpResults;\n        console.log(\"  \\u2705 ILP choisi: r\\xE9sultats identiques, pr\\xE9f\\xE9rence ILP\");\n      }\n    }\n\n    // Add comparison data to results\n    bestResults.comparison = {\n      ffdEfficiency: ffdEfficiency,\n      ilpEfficiency: ilpEfficiency,\n      ffdBarsUsed: ffdBarsUsed,\n      ilpBarsUsed: ilpBarsUsed,\n      bestAlgorithm: bestAlgorithm,\n      differencePercentage: Math.abs(ffdEfficiency - ilpEfficiency).toFixed(2)\n    };\n    bestResults.bestAlgorithm = bestAlgorithm;\n    bestResults.algorithmName = bestAlgorithm === 'ffd' ? 'First-Fit Decreasing (meilleur)' : 'Programmation Linéaire (meilleur)';\n    bestResults.algorithmType = 'compare';\n    return bestResults;\n  },\n  /**\n   * Process cutting patterns for visualization\n   * @param {Object} layout - Layout pattern to process\n   * @returns {Object} Processed pattern with visualization data\n   */\n  processPattern: function processPattern(layout) {\n    var pattern = layout.pattern || layout;\n    var count = layout.count || 1;\n    var cuts = pattern.cuts || pattern.pieces || [];\n    var waste = pattern.remainingLength || pattern.waste || 0;\n    var barLength = pattern.originalLength || pattern.totalLength + waste;\n\n    // Group cuts by length\n    var cutCounts = {};\n    cuts.forEach(function (cut) {\n      cutCounts[cut] = (cutCounts[cut] || 0) + 1;\n    });\n\n    // Sort cuts by length (descending)\n    var sortedCuts = Object.entries(cutCounts).sort(function (a, b) {\n      return b[0] - a[0];\n    }).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        length = _ref2[0],\n        count = _ref2[1];\n      return {\n        length: parseInt(length),\n        count: count\n      };\n    });\n\n    // Calculate visual representations\n    var visualPieces = cuts.map(function (cut, index) {\n      return {\n        length: cut,\n        percentage: cut / barLength * 100,\n        isLast: index === cuts.length - 1 && waste === 0\n      };\n    });\n    return {\n      count: count,\n      barLength: barLength,\n      waste: waste,\n      cuts: sortedCuts,\n      visualPieces: visualPieces,\n      wastePercentage: waste / barLength * 100\n    };\n  },\n  /**\n   * Calculate global statistics from results\n   * @param {Object} results - Algorithm results\n   * @returns {Object} Calculated global statistics\n   */\n  calculateGlobalStats: function calculateGlobalStats(results) {\n    var modelResults = results.modelResults || {};\n    var totalUsedBars = 0;\n    var totalWaste = 0;\n    var totalBarLength = 0;\n\n    // Calculate totals across all models\n    for (var model in modelResults) {\n      var modelResult = modelResults[model];\n      totalUsedBars += modelResult.rawData.usedBars.length;\n\n      // Calculate waste and total length\n      var _iterator4 = _createForOfIteratorHelper(modelResult.rawData.usedBars),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var bar = _step4.value;\n          totalBarLength += bar.originalLength;\n          totalWaste += bar.remainingLength || bar.waste || 0;\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n\n    // Calculate global efficiency\n    var totalEfficiency = totalBarLength > 0 ? ((1 - totalWaste / totalBarLength) * 100).toFixed(2) : \"100.00\";\n    return {\n      totalUsedBars: totalUsedBars,\n      totalWaste: totalWaste,\n      totalBarLength: totalBarLength,\n      totalEfficiency: totalEfficiency\n    };\n  },\n  /**\n   * Calculate statistics for an individual model\n   * @param {Object} modelResult - Model result data\n   * @returns {Object} Calculated model statistics\n   */\n  calculateModelStats: function calculateModelStats(modelResult) {\n    var usedBars = modelResult.rawData.usedBars;\n    var totalModelBarLength = 0;\n    var totalModelWasteLength = 0;\n\n    // Calculate model totals\n    var _iterator5 = _createForOfIteratorHelper(usedBars),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var bar = _step5.value;\n        totalModelBarLength += bar.originalLength;\n        totalModelWasteLength += bar.remainingLength || bar.waste || 0;\n      }\n\n      // Calculate model efficiency\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    var modelEfficiency = totalModelBarLength > 0 ? ((1 - totalModelWasteLength / totalModelBarLength) * 100).toFixed(2) : \"100.00\";\n    return {\n      barCount: usedBars.length,\n      totalLength: totalModelBarLength,\n      wasteLength: totalModelWasteLength,\n      efficiency: modelEfficiency\n    };\n  }\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/algorithm-service.js?");

/***/ }),

/***/ "./src/js/algorithms/First-Fit-Decreasing.js":
/*!***************************************************!*\
  !*** ./src/js/algorithms/First-Fit-Decreasing.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   solveGreedyFFD: () => (/* binding */ solveGreedyFFD)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Résout le problème de découpe de barres avec l'algorithme First-Fit Decreasing (FFD) amélioré\n * Inclut une optimisation pour choisir la meilleure longueur de barre mère\n */\nfunction solveGreedyFFD(motherBars, pieces) {\n  var results = {};\n  var globalStats = {\n    totalBarsUsed: 0,\n    totalWaste: 0,\n    totalRemainingPieces: 0\n  };\n\n  // Traiter chaque modèle séparément\n  for (var model in pieces) {\n    if (pieces[model].length === 0 || !motherBars[model] || motherBars[model].length === 0) {\n      continue;\n    }\n    console.log(\"\\uD83D\\uDD27 Optimisation avanc\\xE9e pour le mod\\xE8le \".concat(model));\n\n    // Utiliser l'algorithme optimisé\n    var modelResult = solveModelWithOptimization(motherBars[model], pieces[model], model);\n\n    // Mettre à jour les statistiques globales\n    globalStats.totalBarsUsed += modelResult.rawData.totalMotherBarsUsed;\n    globalStats.totalWaste += modelResult.rawData.wasteLength;\n    globalStats.totalRemainingPieces += modelResult.rawData.remainingPieces.length;\n    console.log(\"\\uD83D\\uDCCA Mod\\xE8le \".concat(model, \": \").concat(modelResult.rawData.totalMotherBarsUsed, \" barres utilis\\xE9es, taux d'utilisation: \").concat(modelResult.stats.utilizationRate, \"%\"));\n    results[model] = modelResult;\n  }\n\n  // Calculer les statistiques globales\n  var globalStatistics = calculateGlobalStatistics(results);\n  console.log(\"\\uD83D\\uDCC8 GLOBAL: \".concat(globalStats.totalBarsUsed, \" barres utilis\\xE9es, taux d'utilisation: \").concat(globalStatistics.utilizationRate, \"%\"));\n  return {\n    modelResults: results,\n    globalStats: _objectSpread(_objectSpread({}, globalStats), {}, {\n      statistics: globalStatistics\n    })\n  };\n}\n\n/**\n * Algorithme optimisé qui teste différentes stratégies de découpe\n */\nfunction solveModelWithOptimization(stockBars, demandPieces, model) {\n  // Grouper les pièces par longueur\n  var piecesByLength = new Map();\n  demandPieces.forEach(function (piece) {\n    if (!piecesByLength.has(piece.length)) {\n      piecesByLength.set(piece.length, 0);\n    }\n    piecesByLength.set(piece.length, piecesByLength.get(piece.length) + piece.quantity);\n  });\n\n  // Trier les longueurs de pièces par ordre décroissant\n  var sortedPieceLengths = Array.from(piecesByLength.keys()).sort(function (a, b) {\n    return b - a;\n  });\n  console.log(\"  \\uD83D\\uDCCF Pi\\xE8ces \\xE0 d\\xE9couper: \".concat(Array.from(piecesByLength.entries()).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      len = _ref2[0],\n      qty = _ref2[1];\n    return \"\".concat(qty, \"\\xD7\").concat(len, \"cm\");\n  }).join(', ')));\n  console.log(\"  \\uD83D\\uDCE6 Stock disponible: \".concat(stockBars.map(function (bar) {\n    return \"\".concat(bar.quantity, \"\\xD7\").concat(bar.length, \"cm\");\n  }).join(', ')));\n\n  // Essayer différentes stratégies et garder la meilleure\n  var bestSolution = null;\n  var bestEfficiency = 0;\n\n  // Stratégie 1: Algorithme FFD classique\n  var ffdSolution = solveWithFFD(stockBars, demandPieces, model);\n  var ffdEfficiency = calculateEfficiency(ffdSolution);\n  if (ffdEfficiency > bestEfficiency) {\n    bestSolution = ffdSolution;\n    bestEfficiency = ffdEfficiency;\n  }\n  console.log(\"  \\uD83D\\uDD0D FFD classique: efficacit\\xE9 \".concat(ffdEfficiency.toFixed(2), \"%\"));\n\n  // Stratégie 2: Optimisation par recherche exhaustive pour petits problèmes\n  if (getTotalPieceCount(piecesByLength) <= 20 && stockBars.length <= 5) {\n    var optimizedSolution = solveWithOptimizedMatching(stockBars, piecesByLength, model);\n    var optimizedEfficiency = calculateEfficiency(optimizedSolution);\n    if (optimizedEfficiency > bestEfficiency) {\n      bestSolution = optimizedSolution;\n      bestEfficiency = optimizedEfficiency;\n    }\n    console.log(\"  \\uD83C\\uDFAF Recherche optimis\\xE9e: efficacit\\xE9 \".concat(optimizedEfficiency.toFixed(2), \"%\"));\n  }\n\n  // Stratégie 3: Heuristique de regroupement intelligent\n  var groupingSolution = solveWithIntelligentGrouping(stockBars, piecesByLength, model);\n  var groupingEfficiency = calculateEfficiency(groupingSolution);\n  if (groupingEfficiency > bestEfficiency) {\n    bestSolution = groupingSolution;\n    bestEfficiency = groupingEfficiency;\n  }\n  console.log(\"  \\uD83E\\uDDE0 Regroupement intelligent: efficacit\\xE9 \".concat(groupingEfficiency.toFixed(2), \"%\"));\n  console.log(\"  \\u2705 Meilleure solution: efficacit\\xE9 \".concat(bestEfficiency.toFixed(2), \"%\"));\n  return bestSolution;\n}\n\n/**\n * Heuristique de regroupement intelligent qui essaie de maximiser l'utilisation\n */\nfunction solveWithIntelligentGrouping(stockBars, piecesByLength, model) {\n  var result = initializeModelResult(stockBars, model);\n  var usedBars = [];\n  var remainingPieces = new Map(piecesByLength);\n\n  // Trier les barres par longueur croissante pour utiliser les plus petites d'abord\n  var sortedStockBars = _toConsumableArray(stockBars).sort(function (a, b) {\n    return a.length - b.length;\n  });\n\n  // Créer un pool de barres disponibles\n  var availableBars = [];\n  sortedStockBars.forEach(function (barType) {\n    for (var i = 0; i < barType.quantity; i++) {\n      availableBars.push({\n        length: barType.length,\n        originalLength: barType.length,\n        remainingLength: barType.length,\n        cuts: [],\n        barId: availableBars.length + 1\n      });\n    }\n  });\n\n  // Pour chaque type de pièce, essayer de trouver la meilleure combinaison\n  var pieceLengths = Array.from(piecesByLength.keys()).sort(function (a, b) {\n    return b - a;\n  });\n  var _iterator = _createForOfIteratorHelper(pieceLengths),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var pieceLength = _step.value;\n      var remainingQuantity = remainingPieces.get(pieceLength);\n      while (remainingQuantity > 0) {\n        var bestFit = findBestFitForPieces(availableBars, pieceLength, remainingQuantity);\n        if (bestFit) {\n          // Appliquer la solution trouvée\n          var piecesToPlace = Math.min(bestFit.maxPieces, remainingQuantity);\n\n          // Placer les pièces dans la barre\n          for (var i = 0; i < piecesToPlace; i++) {\n            bestFit.bar.cuts.push(pieceLength);\n            bestFit.bar.remainingLength -= pieceLength;\n          }\n\n          // Marquer cette barre comme utilisée si ce n'est pas déjà fait\n          if (!usedBars.includes(bestFit.bar)) {\n            usedBars.push(bestFit.bar);\n          }\n          remainingQuantity -= piecesToPlace;\n          remainingPieces.set(pieceLength, remainingQuantity);\n\n          // Retirer la barre du pool si elle est pleine\n          if (bestFit.bar.remainingLength < Math.min.apply(Math, _toConsumableArray(pieceLengths))) {\n            var index = availableBars.indexOf(bestFit.bar);\n            if (index > -1) {\n              availableBars.splice(index, 1);\n            }\n          }\n        } else {\n          // Aucune barre disponible pour cette pièce\n          break;\n        }\n      }\n    }\n\n    // Finaliser le résultat\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return finalizeResult(result, usedBars, remainingPieces, model);\n}\n\n/**\n * Trouve la meilleure barre pour placer un maximum de pièces d'une longueur donnée\n */\nfunction findBestFitForPieces(availableBars, pieceLength, neededQuantity) {\n  var bestFit = null;\n  var bestScore = -1;\n  var _iterator2 = _createForOfIteratorHelper(availableBars),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var bar = _step2.value;\n      if (bar.remainingLength >= pieceLength) {\n        var maxPieces = Math.floor(bar.remainingLength / pieceLength);\n        var piecesToPlace = Math.min(maxPieces, neededQuantity);\n        var wasteAfterPlacement = bar.remainingLength - piecesToPlace * pieceLength;\n\n        // Score basé sur l'utilisation et la minimisation des chutes\n        var utilizationScore = piecesToPlace * pieceLength / bar.remainingLength;\n        var wasteScore = 1 - wasteAfterPlacement / bar.originalLength;\n        var quantityScore = piecesToPlace / neededQuantity;\n        var totalScore = utilizationScore * 0.4 + wasteScore * 0.4 + quantityScore * 0.2;\n        if (totalScore > bestScore) {\n          bestScore = totalScore;\n          bestFit = {\n            bar: bar,\n            maxPieces: piecesToPlace,\n            wasteAfter: wasteAfterPlacement,\n            score: totalScore\n          };\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return bestFit;\n}\n\n/**\n * Recherche optimisée pour petits problèmes (force brute intelligente)\n */\nfunction solveWithOptimizedMatching(stockBars, piecesByLength, model) {\n  var result = initializeModelResult(stockBars, model);\n\n  // Générer toutes les combinaisons possibles de placement\n  var bestCombination = findOptimalCombination(stockBars, piecesByLength);\n  if (bestCombination) {\n    return finalizeResult(result, bestCombination.usedBars, bestCombination.remainingPieces, model);\n  }\n\n  // Fallback vers FFD si la recherche optimisée échoue\n  return solveWithFFD(stockBars, Array.from(expandPiecesMap(piecesByLength)), model);\n}\n\n/**\n * Trouve la combinaison optimale par recherche exhaustive\n */\nfunction findOptimalCombination(stockBars, piecesByLength) {\n  // Implémentation simplifiée pour l'exemple\n  // Dans la réalité, utiliserait une recherche par branch-and-bound\n\n  var allPieces = Array.from(expandPiecesMap(piecesByLength));\n  var availableBars = [];\n  stockBars.forEach(function (barType) {\n    for (var i = 0; i < Math.min(barType.quantity, 10); i++) {\n      // Limiter pour éviter l'explosion combinatoire\n      availableBars.push({\n        length: barType.length,\n        originalLength: barType.length,\n        remainingLength: barType.length,\n        cuts: [],\n        barId: availableBars.length + 1\n      });\n    }\n  });\n\n  // Générer les meilleures combinaisons possibles\n  return generateBestCombinations(availableBars, allPieces);\n}\n\n/**\n * Algorithme FFD classique (version originale) - CORRIGÉ\n */\nfunction solveWithFFD(stockBars, demandPieces, model) {\n  var result = initializeModelResult(stockBars, model);\n\n  // CORRECTION: Créer un tableau de toutes les pièces individuelles\n  var allPieces = [];\n  demandPieces.forEach(function (piece) {\n    for (var i = 0; i < piece.quantity; i++) {\n      allPieces.push(piece.length);\n    }\n  });\n\n  // Trier par ordre décroissant\n  allPieces.sort(function (a, b) {\n    return b - a;\n  });\n  var usedBars = [];\n\n  // CORRECTION: Créer un pool de barres disponibles par taille\n  var availableBarsBySize = new Map();\n  stockBars.forEach(function (barType) {\n    for (var i = 0; i < barType.quantity; i++) {\n      if (!availableBarsBySize.has(barType.length)) {\n        availableBarsBySize.set(barType.length, []);\n      }\n      availableBarsBySize.get(barType.length).push({\n        length: barType.length,\n        originalLength: barType.length,\n        remainingLength: barType.length,\n        cuts: [],\n        barId: \"\".concat(barType.length, \"_\").concat(i)\n      });\n    }\n  });\n\n  // First-Fit Decreasing avec sélection intelligente de barres\n  for (var _i = 0, _allPieces = allPieces; _i < _allPieces.length; _i++) {\n    var pieceLength = _allPieces[_i];\n    var placed = false;\n\n    // 1. Essayer de placer dans une barre déjà utilisée\n    var _iterator3 = _createForOfIteratorHelper(usedBars),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var usedBar = _step3.value;\n        if (usedBar.remainingLength >= pieceLength) {\n          usedBar.cuts.push(pieceLength);\n          usedBar.remainingLength -= pieceLength;\n          placed = true;\n          break;\n        }\n      }\n\n      // 2. Si pas placée, prendre une nouvelle barre de la plus petite taille possible\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (!placed) {\n      // Trouver la plus petite barre qui peut contenir cette pièce\n      var bestBarSize = null;\n      var bestBar = null;\n      var _iterator4 = _createForOfIteratorHelper(availableBarsBySize.entries()),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            barSize = _step4$value[0],\n            _bars = _step4$value[1];\n          if (barSize >= pieceLength && _bars.length > 0) {\n            if (!bestBarSize || barSize < bestBarSize) {\n              bestBarSize = barSize;\n              bestBar = _bars[0];\n            }\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (bestBar) {\n        // Retirer cette barre du pool\n        var bars = availableBarsBySize.get(bestBarSize);\n        var index = bars.indexOf(bestBar);\n        bars.splice(index, 1);\n\n        // Placer la pièce\n        bestBar.cuts.push(pieceLength);\n        bestBar.remainingLength -= pieceLength;\n\n        // Ajouter aux barres utilisées\n        usedBars.push(bestBar);\n        placed = true;\n      }\n    }\n\n    // 3. Si toujours pas placée, ajouter aux pièces restantes\n    if (!placed) {\n      result.rawData.remainingPieces.push(pieceLength);\n    }\n  }\n  return finalizeResult(result, usedBars, new Map(), model);\n}\n\n/**\n * CORRECTION: Calcul correct de l'efficacité\n */\nfunction calculateEfficiency(modelResult) {\n  if (!modelResult.rawData.usedBars.length) return 0;\n  var totalUsedLength = 0;\n  var totalBarsLength = 0;\n  var _iterator5 = _createForOfIteratorHelper(modelResult.rawData.usedBars),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var bar = _step5.value;\n      // Calculer la longueur totale utilisée (somme des pièces découpées)\n      var piecesLength = bar.cuts.reduce(function (sum, cut) {\n        return sum + cut;\n      }, 0);\n      totalUsedLength += piecesLength;\n\n      // Calculer la longueur totale des barres (longueur originale)\n      totalBarsLength += bar.originalLength;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return totalBarsLength > 0 ? totalUsedLength / totalBarsLength * 100 : 0;\n}\n\n/**\n * Fonctions utilitaires\n */\nfunction initializeModelResult(stockBars, model) {\n  var _stockBars$;\n  return {\n    rawData: {\n      usedBars: [],\n      wasteLength: 0,\n      totalMotherBarsUsed: 0,\n      remainingPieces: [],\n      motherBarLength: ((_stockBars$ = stockBars[0]) === null || _stockBars$ === void 0 ? void 0 : _stockBars$.length) || 0\n    },\n    layouts: [],\n    availableStock: {\n      totalBars: stockBars.reduce(function (sum, bar) {\n        return sum + bar.quantity;\n      }, 0),\n      bars: stockBars.map(function (bar) {\n        return {\n          model: model,\n          length: bar.length,\n          quantity: bar.quantity\n        };\n      })\n    }\n  };\n}\nfunction finalizeResult(result, usedBars, remainingPiecesMap, model) {\n  // Calculer les chutes\n  var totalWaste = 0;\n  usedBars.forEach(function (bar) {\n    totalWaste += bar.remainingLength;\n  });\n\n  // Convertir la map des pièces restantes en array\n  var remainingPiecesArray = [];\n  if (remainingPiecesMap instanceof Map) {\n    var _iterator6 = _createForOfIteratorHelper(remainingPiecesMap.entries()),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var _step6$value = _slicedToArray(_step6.value, 2),\n          length = _step6$value[0],\n          quantity = _step6$value[1];\n        if (quantity > 0) {\n          for (var i = 0; i < quantity; i++) {\n            remainingPiecesArray.push(length);\n          }\n        }\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n  }\n  result.rawData.usedBars = usedBars;\n  result.rawData.wasteLength = totalWaste;\n  result.rawData.totalMotherBarsUsed = usedBars.length;\n  result.rawData.remainingPieces = remainingPiecesArray;\n\n  // Créer les layouts\n  result.layouts = createLayouts(usedBars);\n\n  // Calculer les statistiques\n  result.stats = calculateModelStats(result, [{\n    length: result.rawData.motherBarLength,\n    quantity: 1000\n  }], []);\n  return result;\n}\nfunction getTotalPieceCount(piecesByLength) {\n  return Array.from(piecesByLength.values()).reduce(function (sum, count) {\n    return sum + count;\n  }, 0);\n}\nfunction expandPiecesMap(piecesByLength) {\n  var pieces = [];\n  var _iterator7 = _createForOfIteratorHelper(piecesByLength.entries()),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var _step7$value = _slicedToArray(_step7.value, 2),\n        length = _step7$value[0],\n        quantity = _step7$value[1];\n      pieces.push({\n        length: length,\n        quantity: quantity\n      });\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n  return pieces;\n}\nfunction generateBestCombinations(availableBars, allPieces) {\n  // Implémentation simplifiée - utilise FFD comme fallback\n  var usedBars = [];\n  // ... logique de génération de combinaisons ...\n  return {\n    usedBars: usedBars,\n    remainingPieces: new Map()\n  };\n}\nfunction createLayouts(usedBars) {\n  var layoutPatterns = {};\n  usedBars.forEach(function (bar) {\n    var sortedCuts = _toConsumableArray(bar.cuts).sort(function (a, b) {\n      return b - a;\n    });\n    var layoutKey = sortedCuts.join(',') + '_' + bar.remainingLength;\n    if (!layoutPatterns[layoutKey]) {\n      layoutPatterns[layoutKey] = {\n        pattern: bar,\n        count: 1,\n        pieces: sortedCuts,\n        cuts: sortedCuts,\n        waste: bar.remainingLength || 0,\n        remainingLength: bar.remainingLength || 0,\n        originalLength: bar.originalLength,\n        totalLength: bar.originalLength - (bar.remainingLength || 0)\n      };\n    } else {\n      layoutPatterns[layoutKey].count++;\n    }\n  });\n  return Object.values(layoutPatterns).sort(function (a, b) {\n    return b.count - a.count;\n  });\n}\nfunction calculateModelStats(modelResult, stockBars, demandPieces) {\n  // Initialiser les compteurs\n  var totalDemandLength = 0;\n  var totalStockLength = 0;\n  var totalUsedLength = 0;\n  var totalWasteLength = 0;\n\n  // Initialiser les variables de statut de production\n  var hasOverproduction = false;\n  var hasUnderproduction = false;\n  var overproductionDetails = [];\n  var underproductionDetails = [];\n  var totalOverproduced = 0;\n  var totalUnderproduced = 0;\n\n  // 1. Calculer la somme des longueurs de toutes les pièces à découper\n  var demandByPieceLength = new Map();\n  var _iterator8 = _createForOfIteratorHelper(demandPieces),\n    _step8;\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var piece = _step8.value;\n      totalDemandLength += piece.length * piece.quantity;\n      demandByPieceLength.set(piece.length, piece.quantity);\n    }\n\n    // 2. Calculer la somme des longueurs de toutes les barres mères disponibles\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n  var _iterator9 = _createForOfIteratorHelper(stockBars),\n    _step9;\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var _bar = _step9.value;\n      totalStockLength += _bar.length * _bar.quantity;\n    }\n\n    // 3. Calculer la somme des longueurs utilisées et des chutes dans les layouts\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n  if (modelResult.rawData && modelResult.rawData.usedBars) {\n    // Garder trace des pièces découpées par longueur\n    var cutPiecesByLength = new Map();\n    var _iterator0 = _createForOfIteratorHelper(modelResult.rawData.usedBars),\n      _step0;\n    try {\n      for (_iterator0.s(); !(_step0 = _iterator0.n()).done;) {\n        var bar = _step0.value;\n        // Pour chaque barre utilisée\n        var pieces = bar.cuts || [];\n\n        // Compter les pièces par longueur\n        var _iterator10 = _createForOfIteratorHelper(pieces),\n          _step10;\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var pieceLength = _step10.value;\n            var currentCount = cutPiecesByLength.get(pieceLength) || 0;\n            cutPiecesByLength.set(pieceLength, currentCount + 1);\n          }\n\n          // Calculer la longueur totale des pièces et la chute\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n        var pieceSum = pieces.reduce(function (sum, piece) {\n          return sum + piece;\n        }, 0);\n        var wasteLength = bar.remainingLength || 0;\n        totalUsedLength += pieceSum;\n        totalWasteLength += wasteLength;\n      }\n\n      // Vérifier s'il y a une surproduction ou sous-production\n    } catch (err) {\n      _iterator0.e(err);\n    } finally {\n      _iterator0.f();\n    }\n    var _iterator1 = _createForOfIteratorHelper(cutPiecesByLength.entries()),\n      _step1;\n    try {\n      for (_iterator1.s(); !(_step1 = _iterator1.n()).done;) {\n        var _step1$value = _slicedToArray(_step1.value, 2),\n          _pieceLength = _step1$value[0],\n          cutCount = _step1$value[1];\n        var demandCount = demandByPieceLength.get(_pieceLength) || 0;\n        var diff = cutCount - demandCount;\n        if (diff > 0) {\n          hasOverproduction = true;\n          totalOverproduced += diff;\n          overproductionDetails.push(\"\".concat(diff, \" pi\\xE8ces de longueur \").concat(_pieceLength));\n        } else if (diff < 0) {\n          hasUnderproduction = true;\n          totalUnderproduced += Math.abs(diff);\n          underproductionDetails.push(\"\".concat(Math.abs(diff), \" pi\\xE8ces de longueur \").concat(_pieceLength));\n        }\n      }\n\n      // CORRECTION: Calculer correctement le taux d'utilisation\n    } catch (err) {\n      _iterator1.e(err);\n    } finally {\n      _iterator1.f();\n    }\n    var totalBarsLength = modelResult.rawData.usedBars.reduce(function (sum, bar) {\n      return sum + bar.originalLength;\n    }, 0);\n\n    // Le taux d'utilisation doit être: longueur utilisée / longueur totale des barres utilisées\n    var utilizationRate = totalBarsLength > 0 ? (totalUsedLength / totalBarsLength * 100).toFixed(3) : \"0.000\";\n    return {\n      totalDemandLength: totalDemandLength,\n      totalStockLength: totalStockLength,\n      totalUsedLength: totalUsedLength,\n      totalWasteLength: totalWasteLength,\n      utilizationRate: utilizationRate,\n      overproductionDetails: hasOverproduction ? overproductionDetails.join(', ') : null,\n      underproductionDetails: hasUnderproduction ? underproductionDetails.join(', ') : null,\n      hasOverproduction: hasOverproduction,\n      hasUnderproduction: hasUnderproduction,\n      totalOverproduced: totalOverproduced,\n      totalUnderproduced: totalUnderproduced\n    };\n  }\n\n  // Si pas de barres utilisées, retourner des valeurs par défaut\n  return {\n    totalDemandLength: totalDemandLength,\n    totalStockLength: totalStockLength,\n    totalUsedLength: 0,\n    totalWasteLength: 0,\n    utilizationRate: \"0.000\",\n    overproductionDetails: null,\n    underproductionDetails: null,\n    hasOverproduction: false,\n    hasUnderproduction: false,\n    totalOverproduced: 0,\n    totalUnderproduced: 0\n  };\n}\nfunction calculateGlobalStatistics(results) {\n  var totalUsedLength = 0;\n  var totalBarsLength = 0;\n  for (var _i2 = 0, _Object$values = Object.values(results); _i2 < _Object$values.length; _i2++) {\n    var modelResult = _Object$values[_i2];\n    if (modelResult.rawData && modelResult.rawData.usedBars) {\n      var _iterator11 = _createForOfIteratorHelper(modelResult.rawData.usedBars),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var bar = _step11.value;\n          totalUsedLength += bar.cuts.reduce(function (sum, piece) {\n            return sum + piece;\n          }, 0);\n          totalBarsLength += bar.originalLength;\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  }\n  return {\n    totalUsedLength: totalUsedLength,\n    totalBarsLength: totalBarsLength,\n    utilizationRate: totalBarsLength > 0 ? (totalUsedLength / totalBarsLength * 100).toFixed(3) : 0\n  };\n}\n\n//# sourceURL=webpack://parser-optimizer/./src/js/algorithms/First-Fit-Decreasing.js?");

/***/ }),

/***/ "./src/js/algorithms/Integer-Linear-Programming.js":
/*!*********************************************************!*\
  !*** ./src/js/algorithms/Integer-Linear-Programming.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   solveWithILP: () => (/* binding */ solveWithILP)\n/* harmony export */ });\n/* harmony import */ var javascript_lp_solver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! javascript-lp-solver */ \"./node_modules/javascript-lp-solver/src/main.js\");\n/* harmony import */ var javascript_lp_solver__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(javascript_lp_solver__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n/**\n * Résout le problème de découpe de barres en utilisant l'ILP (Integer Linear Programming)\n * Basé sur le Column Generation approach du Cutting Stock Problem\n */\nfunction solveWithILP(motherBars, pieces) {\n  var progressCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n  console.log(\"🔧 Début de l'optimisation ILP avancée\");\n  var results = {};\n  var globalStats = {\n    totalBarsUsed: 0,\n    totalWaste: 0,\n    totalRemainingPieces: 0\n  };\n\n  // Traiter chaque modèle séparément\n  for (var model in pieces) {\n    if (!pieces[model] || pieces[model].length === 0) continue;\n    if (!motherBars[model] || motherBars[model].length === 0) continue;\n    console.log(\"\\uD83C\\uDFAF Optimisation ILP avanc\\xE9e pour le mod\\xE8le \".concat(model));\n    progressCallback({\n      step: \"Traitement du mod\\xE8le \".concat(model),\n      percentage: 10\n    });\n    try {\n      var modelResult = solveModelWithAdvancedILP(motherBars[model], pieces[model], model, progressCallback);\n      globalStats.totalBarsUsed += modelResult.rawData.totalMotherBarsUsed;\n      globalStats.totalWaste += modelResult.rawData.wasteLength;\n      globalStats.totalRemainingPieces += modelResult.rawData.remainingPieces.length;\n      results[model] = modelResult;\n      console.log(\"\\u2705 Mod\\xE8le \".concat(model, \": \").concat(modelResult.rawData.totalMotherBarsUsed, \" barres, efficacit\\xE9 \").concat(modelResult.stats.utilizationRate, \"%\"));\n    } catch (error) {\n      console.error(\"\\u274C Erreur ILP pour \".concat(model, \":\"), error);\n      // Fallback vers FFD en cas d'erreur\n      var fallbackResult = fallbackToGreedyAlgorithm(motherBars[model], pieces[model], model);\n      results[model] = fallbackResult;\n    }\n    progressCallback({\n      step: \"Mod\\xE8le \".concat(model, \" termin\\xE9\"),\n      percentage: 100\n    });\n  }\n  var globalStatistics = calculateGlobalStatistics(results);\n  console.log(\"\\uD83D\\uDCCA GLOBAL ILP: \".concat(globalStats.totalBarsUsed, \" barres, efficacit\\xE9 \").concat(globalStatistics.utilizationRate, \"%\"));\n  return {\n    modelResults: results,\n    globalStats: _objectSpread(_objectSpread({}, globalStats), {}, {\n      statistics: globalStatistics\n    })\n  };\n}\n\n/**\n * Résout un modèle spécifique avec ILP avancé\n */\nfunction solveModelWithAdvancedILP(stockBars, demandPieces, model) {\n  var progressCallback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n  console.log(\"  \\uD83D\\uDD0D Analyse du mod\\xE8le \".concat(model, \":\"));\n\n  // 1. Préparer les données - CORRECTION: Grouper correctement les pièces par longueur\n  var stockSizes = stockBars.map(function (bar) {\n    return {\n      size: parseInt(bar.length),\n      cost: 1,\n      // Coût uniforme, on minimise le nombre de barres\n      quantity: parseInt(bar.quantity)\n    };\n  });\n\n  // CORRECTION: Grouper les pièces par longueur pour avoir les quantités totales exactes\n  var pieceCounts = {};\n  var cutSizes = [];\n  demandPieces.forEach(function (piece) {\n    var length = parseInt(piece.length);\n    var quantity = parseInt(piece.quantity);\n    if (!pieceCounts[length]) {\n      pieceCounts[length] = 0;\n      cutSizes.push(length);\n    }\n    pieceCounts[length] += quantity;\n  });\n  var requiredCuts = Object.entries(pieceCounts).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      length = _ref2[0],\n      count = _ref2[1];\n    return {\n      size: parseInt(length),\n      count: count\n    };\n  });\n  console.log(\"    \\uD83D\\uDCCF Pi\\xE8ces demand\\xE9es: \".concat(requiredCuts.map(function (c) {\n    return \"\".concat(c.count, \"\\xD7\").concat(c.size, \"cm\");\n  }).join(', ')));\n  console.log(\"    \\uD83D\\uDCE6 Stock disponible: \".concat(stockSizes.map(function (s) {\n    return \"\".concat(s.quantity, \"\\xD7\").concat(s.size, \"cm\");\n  }).join(', ')));\n\n  // Vérification de faisabilité\n  var totalDemandLength = requiredCuts.reduce(function (sum, cut) {\n    return sum + cut.size * cut.count;\n  }, 0);\n  var totalStockLength = stockSizes.reduce(function (sum, stock) {\n    return sum + stock.size * stock.quantity;\n  }, 0);\n  if (totalDemandLength > totalStockLength) {\n    console.warn(\"\\u26A0\\uFE0F Stock insuffisant: \".concat(totalDemandLength, \"cm demand\\xE9s vs \").concat(totalStockLength, \"cm disponibles\"));\n    throw new Error(\"Stock insuffisant\");\n  }\n  progressCallback({\n    step: \"G\\xE9n\\xE9ration des patterns pour \".concat(model),\n    percentage: 30\n  });\n\n  // 2. Générer tous les patterns de découte possibles\n  var cuttingPatterns = generateAdvancedCuttingPatterns(stockSizes, cutSizes, 0);\n  console.log(\"    \\uD83D\\uDD27 \".concat(cuttingPatterns.totalPatterns, \" patterns g\\xE9n\\xE9r\\xE9s au total\"));\n  progressCallback({\n    step: \"R\\xE9solution ILP pour \".concat(model),\n    percentage: 70\n  });\n\n  // 3. Construire et résoudre le modèle ILP\n  var ilpSolution = solveAdvancedILPModel(cuttingPatterns, requiredCuts);\n\n  // CORRECTION: Vérifier la structure correcte de la solution\n  if (!ilpSolution || !ilpSolution.solution || !ilpSolution.solution.feasible) {\n    console.warn('❌ ILP: Aucune solution optimale trouvée avec contraintes exactes');\n    throw new Error(\"Aucune solution ILP trouvée\");\n  }\n  progressCallback({\n    step: \"Finalisation pour \".concat(model),\n    percentage: 90\n  });\n\n  // 4. Convertir la solution ILP en format attendu\n  return convertAdvancedILPSolutionToResult(ilpSolution, cuttingPatterns, stockSizes, model);\n}\n\n/**\n * Génère les patterns de découpe de manière exhaustive mais optimisée\n */\nfunction generateAdvancedCuttingPatterns(stockSizes, cutSizes, bladeSize) {\n  console.log(\"    \\uD83D\\uDD04 G\\xE9n\\xE9ration exhaustive des patterns...\");\n  var waysOfCuttingStocks = stockSizes.map(function (_ref3) {\n    var size = _ref3.size,\n      cost = _ref3.cost,\n      quantity = _ref3.quantity;\n    console.log(\"      \\uD83D\\uDCCF Analyse barre \".concat(size, \"cm:\"));\n\n    // Générer toutes les façons de découper cette barre\n    var waysOfCutting = generateAllWaysToCut(size, cutSizes, bladeSize);\n    console.log(\"        \\u2713 \".concat(waysOfCutting.length, \" patterns g\\xE9n\\xE9r\\xE9s\"));\n\n    // Afficher les 5 meilleurs patterns\n    var sortedWays = waysOfCutting.map(function (way) {\n      return {\n        cuts: way,\n        efficiency: (way.reduce(function (sum, cut) {\n          return sum + cut;\n        }, 0) / size * 100).toFixed(1),\n        waste: size - way.reduce(function (sum, cut) {\n          return sum + cut;\n        }, 0)\n      };\n    }).sort(function (a, b) {\n      return parseFloat(b.efficiency) - parseFloat(a.efficiency);\n    });\n    console.log(\"        \\uD83D\\uDCCA Top 5 patterns:\");\n    sortedWays.slice(0, 5).forEach(function (pattern, index) {\n      var cutCounts = {};\n      pattern.cuts.forEach(function (cut) {\n        cutCounts[cut] = (cutCounts[cut] || 0) + 1;\n      });\n      var cutStr = Object.entries(cutCounts).map(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n          cut = _ref5[0],\n          count = _ref5[1];\n        return \"\".concat(count, \"\\xD7\").concat(cut, \"cm\");\n      }).join(' + ');\n      console.log(\"          \".concat(index + 1, \". \").concat(cutStr, \" (\").concat(pattern.efficiency, \"% efficacit\\xE9, \").concat(pattern.waste, \"cm chute)\"));\n    });\n\n    // CORRECTION: Transformer en format pour ILP avec les bonnes clés\n    var versions = waysOfCutting.map(function (way) {\n      var stockCut = {};\n      // Initialiser toutes les tailles de coupes à 0\n      var _iterator = _createForOfIteratorHelper(cutSizes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var cut = _step.value;\n          stockCut[\"cut\".concat(cut)] = 0;\n        }\n        // Compter chaque coupe dans ce pattern\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var _iterator2 = _createForOfIteratorHelper(way),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _cut = _step2.value;\n          stockCut[\"cut\".concat(_cut)] = stockCut[\"cut\".concat(_cut)] + 1;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return stockCut;\n    });\n    return {\n      size: size,\n      cost: cost,\n      quantity: quantity,\n      versions: versions,\n      waysOfCutting: waysOfCutting\n    };\n  });\n\n  // Créer les variables pour le modèle ILP\n  var variables = {};\n  var ints = {};\n  var allPatterns = [];\n  var patternIndex = 0;\n  waysOfCuttingStocks.forEach(function (_ref6) {\n    var size = _ref6.size,\n      cost = _ref6.cost,\n      quantity = _ref6.quantity,\n      versions = _ref6.versions;\n    versions.forEach(function (cut, index) {\n      var varName = \"stock\".concat(size, \"version\").concat(index);\n      variables[varName] = _objectSpread(_objectSpread({}, cut), {}, {\n        cost: cost\n      });\n      ints[varName] = 1;\n      allPatterns.push({\n        varName: varName,\n        stockSize: size,\n        version: index,\n        cuts: cut,\n        cost: cost,\n        maxQuantity: quantity\n      });\n      patternIndex++;\n    });\n  });\n  return {\n    variables: variables,\n    ints: ints,\n    patterns: allPatterns,\n    waysOfCuttingStocks: waysOfCuttingStocks,\n    totalPatterns: patternIndex\n  };\n}\n\n/**\n * Génère récursivement toutes les façons de découper une barre\n * Inspiré de l'algorithme de référence\n */\nfunction generateAllWaysToCut(barSize, cuts, bladeSize) {\n  var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var waysToCut = [];\n\n  // Essayer chaque type de coupe\n  var _iterator3 = _createForOfIteratorHelper(cuts),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var cut = _step3.value;\n      var remainder = barSize - cut;\n      if (remainder >= 0) {\n        // Récursion pour remplir le reste de la barre\n        var subWays = generateAllWaysToCut(remainder - bladeSize,\n        // Soustraire la largeur de lame\n        cuts, bladeSize, [].concat(_toConsumableArray(state), [cut]));\n        waysToCut.push.apply(waysToCut, _toConsumableArray(subWays));\n      }\n    }\n\n    // Ajouter l'état actuel (peut être vide pour la barre complète)\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  waysToCut.push(_toConsumableArray(state));\n\n  // Éliminer les doublons et sous-ensembles\n  return removeDuplicatesAndSubsets(waysToCut);\n}\n\n/**\n * Supprime les doublons et les sous-ensembles des patterns\n */\nfunction removeDuplicatesAndSubsets(ways) {\n  var results = [];\n  var _iterator4 = _createForOfIteratorHelper(ways),\n    _step4;\n  try {\n    var _loop = function _loop() {\n      var way = _step4.value;\n      // Vérifier si ce pattern est un sous-ensemble d'un pattern existant\n      var isSubsetOfExisting = results.some(function (existing) {\n        return isSubset(way, existing);\n      });\n      if (!isSubsetOfExisting) {\n        // Supprimer les patterns existants qui sont des sous-ensembles du nouveau\n        results = results.filter(function (existing) {\n          return !isSubset(existing, way);\n        });\n        results.push(way);\n      }\n    };\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return results;\n}\n\n/**\n * Vérifie si 'a' est un sous-ensemble de 'b'\n */\nfunction isSubset(a, b) {\n  if (a.length > b.length) return false;\n  var aCopy = _toConsumableArray(a);\n  var _iterator5 = _createForOfIteratorHelper(b),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var item = _step5.value;\n      var index = aCopy.indexOf(item);\n      if (index !== -1) {\n        aCopy.splice(index, 1);\n        if (aCopy.length === 0) return true;\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return aCopy.length === 0;\n}\n\n/**\n * CORRECTION: Résout le modèle ILP avec contraintes exactes obligatoires\n */\nfunction solveAdvancedILPModel(cuttingPatterns, requiredCuts) {\n  console.log(\"    \\uD83E\\uDDEE Construction du mod\\xE8le ILP:\");\n\n  // CORRECTION: Créer les contraintes avec égalité exacte au lieu de minimum\n  var constraints = {};\n  requiredCuts.forEach(function (_ref7) {\n    var size = _ref7.size,\n      count = _ref7.count;\n    constraints[\"cut\".concat(size)] = {\n      equal: count\n    }; // CORRECTION: equal au lieu de min\n    console.log(\"      \\uD83D\\uDCD0 Contrainte: exactement \".concat(count, \" pi\\xE8ces de \").concat(size, \"cm\"));\n  });\n  var model = {\n    optimize: \"cost\",\n    opType: \"min\",\n    variables: cuttingPatterns.variables,\n    ints: cuttingPatterns.ints,\n    constraints: constraints\n  };\n  console.log(\"    \\uD83D\\uDCCA Mod\\xE8le final: \".concat(Object.keys(model.variables).length, \" variables, \").concat(Object.keys(model.constraints).length, \" contraintes\"));\n\n  // Résolution avec gestion d'erreur\n  try {\n    var startTime = Date.now();\n    console.log(\"    \\u23F3 R\\xE9solution en cours...\");\n    var solution = javascript_lp_solver__WEBPACK_IMPORTED_MODULE_0___default().Solve(model);\n    var elapsedTime = Date.now() - startTime;\n    console.log(\"    \\u23F1\\uFE0F R\\xE9solution termin\\xE9e en \".concat(elapsedTime, \"ms\"));\n\n    // CORRECTION: La structure de retour du solver est différente\n    if (!solution.feasible) {\n      console.warn(\"    ⚠️ Aucune solution faisable trouvée\");\n      return null;\n    }\n    if (typeof solution.result !== 'number' || isNaN(solution.result)) {\n      throw new Error(\"Solution invalide: \".concat(solution.result));\n    }\n    console.log(\"    \\u2705 Solution optimale trouv\\xE9e: co\\xFBt total \".concat(solution.result));\n\n    // CORRECTION: Vérifier que toutes les contraintes sont satisfaites\n    console.log(\"    \\uD83D\\uDD0D V\\xE9rification des contraintes:\");\n    var _iterator6 = _createForOfIteratorHelper(requiredCuts),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var _step6$value = _step6.value,\n          size = _step6$value.size,\n          count = _step6$value.count;\n        var totalProduced = 0;\n        var _loop3 = function _loop3() {\n          var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n            varName = _Object$entries3$_i[0],\n            quantity = _Object$entries3$_i[1];\n          if (varName.startsWith('stock') && quantity > 0) {\n            var pattern = cuttingPatterns.patterns.find(function (p) {\n              return p.varName === varName;\n            });\n            if (pattern && pattern.cuts[\"cut\".concat(size)]) {\n              totalProduced += pattern.cuts[\"cut\".concat(size)] * quantity;\n            }\n          }\n        };\n        for (var _i3 = 0, _Object$entries3 = Object.entries(solution); _i3 < _Object$entries3.length; _i3++) {\n          _loop3();\n        }\n        console.log(\"      \\u2713 \".concat(size, \"cm: \").concat(totalProduced, \"/\").concat(count, \" pi\\xE8ces (\").concat(totalProduced >= count ? 'OK' : 'MANQUE', \")\"));\n        if (totalProduced < count) {\n          console.warn(\"    \\u26A0\\uFE0F Solution incompl\\xE8te pour \".concat(size, \"cm\"));\n          throw new Error(\"Solution incompl\\xE8te: \".concat(totalProduced, \"/\").concat(count, \" pi\\xE8ces de \").concat(size, \"cm\"));\n        }\n      }\n\n      // Afficher les patterns choisis\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    console.log(\"    \\uD83D\\uDCCB Patterns s\\xE9lectionn\\xE9s:\");\n    var totalBars = 0;\n    var _loop2 = function _loop2() {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        varName = _Object$entries$_i[0],\n        quantity = _Object$entries$_i[1];\n      if (varName.startsWith('stock') && quantity > 0) {\n        var pattern = cuttingPatterns.patterns.find(function (p) {\n          return p.varName === varName;\n        });\n        if (pattern) {\n          var cuts = [];\n          for (var _i2 = 0, _Object$entries2 = Object.entries(pattern.cuts); _i2 < _Object$entries2.length; _i2++) {\n            var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n              cutKey = _Object$entries2$_i[0],\n              cutCount = _Object$entries2$_i[1];\n            if (cutKey.startsWith('cut') && cutCount > 0) {\n              var cutSize = parseInt(cutKey.replace('cut', ''));\n              for (var i = 0; i < cutCount; i++) {\n                cuts.push(cutSize);\n              }\n            }\n          }\n          var usedLength = cuts.reduce(function (sum, cut) {\n            return sum + cut;\n          }, 0);\n          var waste = pattern.stockSize - usedLength;\n          var efficiency = (usedLength / pattern.stockSize * 100).toFixed(1);\n          console.log(\"      \\u2022 \".concat(quantity, \"\\xD7 barre \").concat(pattern.stockSize, \"cm: [\").concat(cuts.join(', '), \"] (\").concat(efficiency, \"% efficacit\\xE9, \").concat(waste, \"cm chute)\"));\n          totalBars += quantity;\n        }\n      }\n    };\n    for (var _i = 0, _Object$entries = Object.entries(solution); _i < _Object$entries.length; _i++) {\n      _loop2();\n    }\n    console.log(\"    \\uD83D\\uDCE6 Total: \".concat(totalBars, \" barres utilis\\xE9es\"));\n\n    // CORRECTION: Retourner l'objet solution directement, pas un wrapper\n    return {\n      solution: solution,\n      // solution contient déjà feasible, result, etc.\n      model: model,\n      patterns: cuttingPatterns\n    };\n  } catch (error) {\n    console.error(\"    ❌ Erreur lors de la résolution ILP:\", error);\n    throw error;\n  }\n}\n\n/**\n * Convertit la solution ILP au format attendu par l'application\n */\nfunction convertAdvancedILPSolutionToResult(ilpSolution, cuttingPatterns, stockSizes, model) {\n  var _stockSizes$;\n  var solution = ilpSolution.solution;\n  var usedBars = [];\n  var barId = 1;\n  var totalWaste = 0;\n  console.log(\"    \\uD83D\\uDD04 Conversion de la solution ILP pour \".concat(model, \":\"));\n\n  // Parcourir les variables de la solution\n  var _loop4 = function _loop4() {\n    var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i4], 2),\n      varName = _Object$entries4$_i[0],\n      quantity = _Object$entries4$_i[1];\n    if (varName.startsWith('stock') && quantity > 0) {\n      // Trouver le pattern correspondant\n      var pattern = cuttingPatterns.patterns.find(function (p) {\n        return p.varName === varName;\n      });\n      if (pattern) {\n        // Créer les barres utilisées\n        for (var i = 0; i < quantity; i++) {\n          var cuts = [];\n\n          // Reconstruire la liste des coupes à partir du pattern\n          for (var _i5 = 0, _Object$entries5 = Object.entries(pattern.cuts); _i5 < _Object$entries5.length; _i5++) {\n            var _Object$entries5$_i = _slicedToArray(_Object$entries5[_i5], 2),\n              cutKey = _Object$entries5$_i[0],\n              cutCount = _Object$entries5$_i[1];\n            if (cutKey.startsWith('cut') && cutCount > 0) {\n              var cutSize = parseInt(cutKey.replace('cut', ''));\n              for (var j = 0; j < cutCount; j++) {\n                cuts.push(cutSize);\n              }\n            }\n          }\n          var usedLength = cuts.reduce(function (sum, cut) {\n            return sum + cut;\n          }, 0);\n          var waste = pattern.stockSize - usedLength;\n          usedBars.push({\n            id: barId++,\n            cuts: cuts,\n            pieces: cuts,\n            // Alias pour compatibilité\n            waste: waste,\n            remainingLength: waste,\n            originalLength: pattern.stockSize,\n            model: model\n          });\n          totalWaste += waste;\n        }\n      }\n    }\n  };\n  for (var _i4 = 0, _Object$entries4 = Object.entries(solution); _i4 < _Object$entries4.length; _i4++) {\n    _loop4();\n  }\n\n  // Calculer les pièces restantes (il ne devrait pas y avoir avec ILP optimal)\n  var remainingPieces = [];\n\n  // Créer les layouts groupés\n  var layouts = createLayoutsFromBars(usedBars);\n\n  // Calculer les statistiques\n  var stats = calculateStats(usedBars, stockSizes);\n  console.log(\"    \\uD83D\\uDCCA R\\xE9sultat final: \".concat(usedBars.length, \" barres, \").concat(totalWaste, \"cm de chutes, efficacit\\xE9 \").concat(stats.utilizationRate, \"%\"));\n  return {\n    rawData: {\n      usedBars: usedBars,\n      wasteLength: totalWaste,\n      totalMotherBarsUsed: usedBars.length,\n      remainingPieces: remainingPieces,\n      motherBarLength: ((_stockSizes$ = stockSizes[0]) === null || _stockSizes$ === void 0 ? void 0 : _stockSizes$.size) || 0\n    },\n    layouts: layouts,\n    stats: stats,\n    method: 'ILP_Advanced'\n  };\n}\n\n/**\n * Algorithme de fallback en cas d'échec ILP\n */\nfunction fallbackToGreedyAlgorithm(stockBars, demandPieces, model) {\n  var _stockBars$;\n  console.log(\"    🔄 Utilisation de l'algorithme glouton comme fallback\");\n  var usedBars = [];\n  var remainingPieces = _toConsumableArray(demandPieces);\n  var barId = 1;\n  var totalWaste = 0;\n\n  // Trier les pièces par taille décroissante\n  remainingPieces.sort(function (a, b) {\n    return parseInt(b.length) - parseInt(a.length);\n  });\n  while (remainingPieces.length > 0) {\n    // Prendre la première barre disponible\n    var availableBar = stockBars.find(function (bar) {\n      return parseInt(bar.quantity) > 0;\n    });\n    if (!availableBar) break;\n    var barLength = parseInt(availableBar.length);\n    var cuts = [];\n    var remainingLength = barLength;\n\n    // Remplir la barre avec les pièces les plus grandes possibles\n    for (var i = remainingPieces.length - 1; i >= 0; i--) {\n      var piece = remainingPieces[i];\n      var pieceLength = parseInt(piece.length);\n      if (pieceLength <= remainingLength) {\n        cuts.push(pieceLength);\n        remainingLength -= pieceLength;\n\n        // Décrémenter la quantité\n        piece.quantity = parseInt(piece.quantity) - 1;\n        if (piece.quantity <= 0) {\n          remainingPieces.splice(i, 1);\n        }\n        break;\n      }\n    }\n\n    // Si aucune pièce ne rentre, utiliser la plus petite\n    if (cuts.length === 0 && remainingPieces.length > 0) {\n      var smallestPiece = remainingPieces[remainingPieces.length - 1];\n      var _pieceLength = parseInt(smallestPiece.length);\n      cuts.push(_pieceLength);\n      remainingLength -= _pieceLength;\n      smallestPiece.quantity = parseInt(smallestPiece.quantity) - 1;\n      if (smallestPiece.quantity <= 0) {\n        remainingPieces.pop();\n      }\n    }\n    usedBars.push({\n      id: barId++,\n      cuts: cuts,\n      pieces: cuts,\n      waste: remainingLength,\n      remainingLength: remainingLength,\n      originalLength: barLength,\n      model: model\n    });\n    totalWaste += remainingLength;\n    availableBar.quantity = parseInt(availableBar.quantity) - 1;\n  }\n  var layouts = createLayoutsFromBars(usedBars);\n  var stats = calculateStats(usedBars, stockBars.map(function (bar) {\n    return {\n      size: parseInt(bar.length)\n    };\n  }));\n  return {\n    rawData: {\n      usedBars: usedBars,\n      wasteLength: totalWaste,\n      totalMotherBarsUsed: usedBars.length,\n      remainingPieces: remainingPieces.filter(function (piece) {\n        return parseInt(piece.quantity) > 0;\n      }),\n      motherBarLength: ((_stockBars$ = stockBars[0]) === null || _stockBars$ === void 0 ? void 0 : _stockBars$.length) || 0\n    },\n    layouts: layouts,\n    stats: _objectSpread(_objectSpread({}, stats), {}, {\n      method: 'Greedy_Fallback'\n    }),\n    method: 'Greedy_Fallback'\n  };\n}\n\n/**\n * Crée les layouts groupés à partir des barres utilisées\n */\nfunction createLayoutsFromBars(usedBars) {\n  var layoutMap = new Map();\n  var _iterator7 = _createForOfIteratorHelper(usedBars),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var bar = _step7.value;\n      var sortedCuts = _toConsumableArray(bar.cuts).sort(function (a, b) {\n        return b - a;\n      });\n      var key = sortedCuts.join(',') + '_' + bar.waste;\n      if (layoutMap.has(key)) {\n        layoutMap.get(key).count++;\n      } else {\n        layoutMap.set(key, {\n          count: 1,\n          pieces: sortedCuts,\n          cuts: sortedCuts,\n          waste: bar.waste,\n          remainingLength: bar.remainingLength,\n          originalLength: bar.originalLength,\n          efficiency: ((bar.originalLength - bar.waste) / bar.originalLength * 100).toFixed(1)\n        });\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n  return Array.from(layoutMap.values()).sort(function (a, b) {\n    return b.count - a.count;\n  });\n}\n\n/**\n * Calcule les statistiques du modèle\n */\nfunction calculateStats(usedBars, stockSizes) {\n  var totalUsedLength = 0;\n  var totalBarsLength = 0;\n  var _iterator8 = _createForOfIteratorHelper(usedBars),\n    _step8;\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var bar = _step8.value;\n      // Calculer la longueur totale utilisée (somme des pièces découpées)\n      var piecesLength = bar.cuts.reduce(function (sum, cut) {\n        return sum + cut;\n      }, 0);\n      totalUsedLength += piecesLength;\n\n      // Calculer la longueur totale des barres (longueur originale)\n      totalBarsLength += bar.originalLength;\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n  return {\n    totalUsedLength: totalUsedLength,\n    totalBarsLength: totalBarsLength,\n    utilizationRate: totalBarsLength > 0 ? (totalUsedLength / totalBarsLength * 100).toFixed(3) : 0,\n    averageWastePerBar: usedBars.length > 0 ? (usedBars.reduce(function (sum, bar) {\n      return sum + bar.waste;\n    }, 0) / usedBars.length).toFixed(1) : 0\n  };\n}\n\n/**\n * Calcule les statistiques globales\n */\nfunction calculateGlobalStatistics(results) {\n  var totalUsedLength = 0;\n  var totalBarsLength = 0;\n  for (var _i6 = 0, _Object$values = Object.values(results); _i6 < _Object$values.length; _i6++) {\n    var modelResult = _Object$values[_i6];\n    if (modelResult.stats) {\n      totalUsedLength += modelResult.stats.totalUsedLength;\n      totalBarsLength += modelResult.stats.totalBarsLength;\n    }\n  }\n  return {\n    totalUsedLength: totalUsedLength,\n    totalBarsLength: totalBarsLength,\n    utilizationRate: totalBarsLength > 0 ? (totalUsedLength / totalBarsLength * 100).toFixed(3) : 0\n  };\n}\n\n//# sourceURL=webpack://parser-optimizer/./src/js/algorithms/Integer-Linear-Programming.js?");

/***/ }),

/***/ "./src/js/data-manager.js":
/*!********************************!*\
  !*** ./src/js/data-manager.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataManager: () => (/* binding */ DataManager)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * DataManager - Service pur de gestion des données (CRUD)\n */\nvar DataManager = {\n  // Structure de données simplifiée\n  data: {\n    pieces: {},\n    // Barres filles groupées par profil\n    motherBars: {},\n    // Barres mères groupées par profil\n    barsList: [] // Liste plate de toutes les barres\n  },\n  /**\n   * Initialise les données\n   */\n  initData: function initData() {\n    this.data = {\n      pieces: {},\n      motherBars: {},\n      barsList: []\n    };\n    return this.data;\n  },\n  /**\n   * Récupère l'état des données\n   */\n  getData: function getData() {\n    return this.data;\n  },\n  /**\n   * Ajoute une liste de barres aux données\n   */\n  addBars: function addBars(bars) {\n    var _this = this;\n    if (!Array.isArray(bars) || bars.length === 0) return [];\n    var addedIds = [];\n    bars.forEach(function (bar) {\n      if (!bar) return; // Ignorer les barres nulles\n\n      // Générer un ID unique si manquant\n      if (!bar.id) {\n        bar.id = \"bar_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 5));\n      }\n\n      // Ajouter à la liste principale\n      _this.data.barsList.push(bar);\n\n      // Ajouter à la structure appropriée selon le type\n      if (bar.type === 'fille') {\n        _this._addToPieces(bar);\n      } else if (bar.type === 'mere' || bar.type === 'mother') {\n        _this._addToMotherBars(bar);\n      }\n      addedIds.push(bar.id);\n    });\n    return addedIds;\n  },\n  /**\n   * Trie les barres dans une collection selon l'ordre : profil → orientation → longueur\n   * @param {Array} bars - Tableau de barres à trier\n   */\n  _sortBarsCollection: function _sortBarsCollection(bars) {\n    return bars.sort(function (a, b) {\n      // 1. Trier par profil\n      if (a.profile !== b.profile) {\n        return a.profile.localeCompare(b.profile);\n      }\n\n      // 2. Trier par orientation (pour les pièces uniquement)\n      if (a.orientation && b.orientation && a.orientation !== b.orientation) {\n        var orientationOrder = {\n          'a-plat': 0,\n          'debout': 1\n        };\n        var orderA = orientationOrder[a.orientation] !== undefined ? orientationOrder[a.orientation] : 2;\n        var orderB = orientationOrder[b.orientation] !== undefined ? orientationOrder[b.orientation] : 2;\n        return orderA - orderB;\n      }\n\n      // 3. Trier par longueur\n      return a.length - b.length;\n    });\n  },\n  /**\n   * Ajoute une barre fille à la structure pieces avec tri automatique\n   */\n  _addToPieces: function _addToPieces(bar) {\n    var profile = bar.profile;\n\n    // Créer l'entrée pour ce profil si nécessaire\n    if (!this.data.pieces[profile]) {\n      this.data.pieces[profile] = [];\n    }\n\n    // Vérifier si une barre identique existe déjà\n    var existingIndex = this.data.pieces[profile].findIndex(function (b) {\n      var _b$angles, _bar$angles, _b$angles2, _bar$angles2;\n      return b.length === bar.length && b.orientation === bar.orientation && ((_b$angles = b.angles) === null || _b$angles === void 0 ? void 0 : _b$angles[1]) === ((_bar$angles = bar.angles) === null || _bar$angles === void 0 ? void 0 : _bar$angles[1]) && ((_b$angles2 = b.angles) === null || _b$angles2 === void 0 ? void 0 : _b$angles2[2]) === ((_bar$angles2 = bar.angles) === null || _bar$angles2 === void 0 ? void 0 : _bar$angles2[2]) && b.nom === bar.nom;\n    });\n    if (existingIndex !== -1) {\n      // Mettre à jour la quantité de la barre existante\n      this.data.pieces[profile][existingIndex].quantity += bar.quantity || 1;\n    } else {\n      // Ajouter la nouvelle barre avec tous les champs nécessaires\n      this.data.pieces[profile].push(_objectSpread(_objectSpread({}, bar), {}, {\n        orientation: bar.orientation || 'a-plat',\n        angles: bar.angles || {\n          1: 90,\n          2: 90\n        },\n        f4cData: bar.f4cData || {}\n      }));\n    }\n\n    // Trier automatiquement après ajout\n    this._sortBarsCollection(this.data.pieces[profile]);\n  },\n  /**\n   * Ajoute une barre mère à la structure motherBars avec tri automatique\n   */\n  _addToMotherBars: function _addToMotherBars(bar) {\n    var profile = bar.profile;\n\n    // Créer l'entrée pour ce profil si nécessaire\n    if (!this.data.motherBars[profile]) {\n      this.data.motherBars[profile] = [];\n    }\n\n    // Vérifier si une barre identique existe déjà\n    var existingIndex = this.data.motherBars[profile].findIndex(function (b) {\n      return b.length === bar.length;\n    });\n    if (existingIndex !== -1) {\n      // Mettre à jour la quantité de la barre existante\n      this.data.motherBars[profile][existingIndex].quantity += bar.quantity || 1;\n    } else {\n      // Ajouter la nouvelle barre (sans nom pour les barres mères)\n      var motherBar = _objectSpread({}, bar);\n      delete motherBar.nom; // Supprimer la propriété nom\n      this.data.motherBars[profile].push(motherBar);\n    }\n\n    // Trier automatiquement après ajout\n    this._sortBarsCollection(this.data.motherBars[profile]);\n  },\n  /**\n   * Supprime une pièce par son ID\n   */\n  deletePiece: function deletePiece(id) {\n    // Trouver la barre dans la liste principale\n    var barIndex = this.data.barsList.findIndex(function (b) {\n      return b.id === id && b.type === 'fille';\n    });\n    if (barIndex !== -1) {\n      var bar = this.data.barsList[barIndex];\n      var profile = bar.profile; // Utiliser 'profile' au lieu de 'model'\n\n      // Supprimer de la liste principale\n      this.data.barsList.splice(barIndex, 1);\n\n      // Supprimer de la structure pieces\n      if (this.data.pieces[profile]) {\n        var pieceIndex = this.data.pieces[profile].findIndex(function (p) {\n          return p.id === id;\n        });\n        if (pieceIndex !== -1) {\n          this.data.pieces[profile].splice(pieceIndex, 1);\n\n          // Nettoyer la structure si vide\n          if (this.data.pieces[profile].length === 0) {\n            delete this.data.pieces[profile];\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  /**\n   * Supprime une barre mère par son ID\n   */\n  deleteMotherBar: function deleteMotherBar(id) {\n    // Trouver la barre dans la liste principale\n    var barIndex = this.data.barsList.findIndex(function (b) {\n      return b.id === id && (b.type === 'mere' || b.type === 'mother');\n    });\n    if (barIndex !== -1) {\n      var bar = this.data.barsList[barIndex];\n      var profile = bar.profile; // Utiliser 'profile' au lieu de 'model'\n\n      // Supprimer de la liste principale\n      this.data.barsList.splice(barIndex, 1);\n\n      // Supprimer de la structure motherBars\n      if (this.data.motherBars[profile]) {\n        var barModelIndex = this.data.motherBars[profile].findIndex(function (b) {\n          return b.id === id;\n        });\n        if (barModelIndex !== -1) {\n          this.data.motherBars[profile].splice(barModelIndex, 1);\n\n          // Nettoyer la structure si vide\n          if (this.data.motherBars[profile].length === 0) {\n            delete this.data.motherBars[profile];\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  /**\n   * Met à jour la quantité d'une pièce\n   */\n  updatePieceQuantityById: function updatePieceQuantityById(id, quantity) {\n    // Parcourir la liste principale\n    for (var i = 0; i < this.data.barsList.length; i++) {\n      if (this.data.barsList[i].id === id && this.data.barsList[i].type === 'fille') {\n        // Mettre à jour dans la liste principale\n        this.data.barsList[i].quantity = quantity;\n\n        // Mettre à jour dans la structure pieces\n        var profile = this.data.barsList[i].profile; // Utiliser 'profile' au lieu de 'model'\n        if (this.data.pieces[profile]) {\n          for (var j = 0; j < this.data.pieces[profile].length; j++) {\n            if (this.data.pieces[profile][j].id === id) {\n              this.data.pieces[profile][j].quantity = quantity;\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  },\n  /**\n   * Met à jour la longueur d'une pièce\n   */\n  updatePieceLengthById: function updatePieceLengthById(id, length) {\n    for (var i = 0; i < this.data.barsList.length; i++) {\n      if (this.data.barsList[i].id === id && this.data.barsList[i].type === 'fille') {\n        // Mettre à jour dans la liste principale\n        this.data.barsList[i].length = length;\n\n        // Mettre à jour dans la structure pieces\n        var profile = this.data.barsList[i].profile; // Utiliser 'profile' au lieu de 'model'\n        if (this.data.pieces[profile]) {\n          for (var j = 0; j < this.data.pieces[profile].length; j++) {\n            if (this.data.pieces[profile][j].id === id) {\n              this.data.pieces[profile][j].length = length;\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  },\n  /**\n   * Met à jour la quantité d'une barre mère\n   */\n  updateMotherBarQuantityById: function updateMotherBarQuantityById(id, quantity) {\n    for (var i = 0; i < this.data.barsList.length; i++) {\n      if (this.data.barsList[i].id === id && (this.data.barsList[i].type === 'mere' || this.data.barsList[i].type === 'mother')) {\n        // Mettre à jour dans la liste principale\n        this.data.barsList[i].quantity = quantity;\n\n        // Mettre à jour dans la structure motherBars\n        var profile = this.data.barsList[i].profile; // Utiliser 'profile' au lieu de 'model'\n        if (this.data.motherBars[profile]) {\n          for (var j = 0; j < this.data.motherBars[profile].length; j++) {\n            if (this.data.motherBars[profile][j].id === id) {\n              this.data.motherBars[profile][j].quantity = quantity;\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  },\n  /**\n   * Met à jour la longueur d'une barre mère\n   */\n  updateMotherBarLengthById: function updateMotherBarLengthById(id, length) {\n    for (var i = 0; i < this.data.barsList.length; i++) {\n      if (this.data.barsList[i].id === id && (this.data.barsList[i].type === 'mere' || this.data.barsList[i].type === 'mother')) {\n        // Mettre à jour dans la liste principale\n        this.data.barsList[i].length = length;\n\n        // Mettre à jour dans la structure motherBars\n        var profile = this.data.barsList[i].profile; // Utiliser 'profile' au lieu de 'model'\n        if (this.data.motherBars[profile]) {\n          for (var j = 0; j < this.data.motherBars[profile].length; j++) {\n            if (this.data.motherBars[profile][j].id === id) {\n              this.data.motherBars[profile][j].length = length;\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  },\n  /**\n   * Récupère une pièce par son ID\n   * @param {string} id - ID de la pièce\n   * @returns {Object|null} La pièce ou null si non trouvée\n   */\n  getPieceById: function getPieceById(id) {\n    // Chercher d'abord dans la structure pieces (quantités agrégées)\n    for (var profile in this.data.pieces) {\n      var _iterator = _createForOfIteratorHelper(this.data.pieces[profile]),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _piece = _step.value;\n          if (_piece.id === id) {\n            return _objectSpread({}, _piece); // Retourner une copie de la pièce avec quantité agrégée\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    // Fallback vers barsList si pas trouvé (ne devrait pas arriver)\n    var piece = this.data.barsList.find(function (b) {\n      return b.id === id && b.type === 'fille';\n    });\n    return piece ? _objectSpread({}, piece) : null;\n  },\n  /**\n   * Récupère une barre mère par son ID\n   * @param {string} id - ID de la barre mère\n   * @returns {Object|null} La barre mère ou null si non trouvée\n   */\n  getMotherBarById: function getMotherBarById(id) {\n    var bar = this.data.barsList.find(function (b) {\n      return b.id === id && (b.type === 'mother' || b.type === 'mere');\n    });\n    return bar ? _objectSpread({}, bar) : null;\n  },\n  /**\n   * Valide les données avant optimisation\n   * @returns {Object} Résultat de validation\n   */\n  validateData: function validateData() {\n    var data = this.getData();\n\n    // Vérifier qu'il y a des pièces à découper\n    var totalPieces = 0;\n    for (var profile in data.pieces) {\n      var _iterator2 = _createForOfIteratorHelper(data.pieces[profile]),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var piece = _step2.value;\n          if (!piece.length || piece.length <= 0) {\n            return {\n              valid: false,\n              message: \"La pi\\xE8ce \\\"\".concat(piece.nom || piece.profile, \"\\\" a une longueur invalide.\")\n            };\n          }\n          if (!piece.quantity || piece.quantity <= 0) {\n            return {\n              valid: false,\n              message: \"La pi\\xE8ce \\\"\".concat(piece.nom || piece.profile, \"\\\" a une quantit\\xE9 invalide.\")\n            };\n          }\n          totalPieces += piece.quantity;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n    if (totalPieces === 0) {\n      return {\n        valid: false,\n        message: 'Aucune pièce à découper. Importez des fichiers NC2 ou ajoutez des pièces manuellement.'\n      };\n    }\n\n    // Vérifier qu'il y a des barres mères\n    var totalMotherBars = 0;\n    for (var _profile in data.motherBars) {\n      var _iterator3 = _createForOfIteratorHelper(data.motherBars[_profile]),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var bar = _step3.value;\n          if (!bar.length || bar.length <= 0) {\n            return {\n              valid: false,\n              message: \"La barre m\\xE8re \\\"\".concat(bar.profile, \"\\\" a une longueur invalide.\")\n            };\n          }\n          if (!bar.quantity || bar.quantity <= 0) {\n            return {\n              valid: false,\n              message: \"La barre m\\xE8re \\\"\".concat(bar.profile, \"\\\" a une quantit\\xE9 invalide.\")\n            };\n          }\n          totalMotherBars += bar.quantity;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n    if (totalMotherBars === 0) {\n      return {\n        valid: false,\n        message: 'Aucune barre mère disponible. Ajoutez des barres mères pour l\\'optimisation.'\n      };\n    }\n    return {\n      valid: true\n    };\n  },\n  /**\n   * Met à jour une pièce avec de nouvelles valeurs et re-trie\n   * @param {string} id - ID de la pièce à mettre à jour\n   * @param {Object} updatedValues - Nouvelles valeurs\n   * @returns {boolean} Succès de l'opération\n   */\n  updatePiece: function updatePiece(id, updatedValues) {\n    // Trouver la pièce dans la liste principale\n    var pieceIndex = this.data.barsList.findIndex(function (b) {\n      return b.id === id && b.type === 'fille';\n    });\n    if (pieceIndex === -1) return false;\n    var oldPiece = this.data.barsList[pieceIndex];\n    var oldProfile = oldPiece.profile;\n    var newProfile = updatedValues.profile || oldProfile;\n\n    // Suppression de l'ancienne pièce de la structure pieces\n    if (this.data.pieces[oldProfile]) {\n      var index = this.data.pieces[oldProfile].findIndex(function (p) {\n        return p.id === id;\n      });\n      if (index !== -1) {\n        this.data.pieces[oldProfile].splice(index, 1);\n\n        // Re-trier après suppression\n        if (this.data.pieces[oldProfile].length > 0) {\n          this._sortBarsCollection(this.data.pieces[oldProfile]);\n        } else {\n          delete this.data.pieces[oldProfile];\n        }\n      }\n    }\n\n    // Mise à jour de la pièce dans la liste principale\n    this.data.barsList[pieceIndex] = _objectSpread(_objectSpread({}, oldPiece), updatedValues);\n\n    // Ajout de la pièce mise à jour dans la structure pieces\n    if (!this.data.pieces[newProfile]) {\n      this.data.pieces[newProfile] = [];\n    }\n    this.data.pieces[newProfile].push(this.data.barsList[pieceIndex]);\n\n    // Trier automatiquement après ajout\n    this._sortBarsCollection(this.data.pieces[newProfile]);\n    return true;\n  },\n  /**\n   * Met à jour une barre mère avec de nouvelles valeurs et re-trie\n   * @param {string} id - ID de la barre mère à mettre à jour\n   * @param {Object} updatedValues - Nouvelles valeurs\n   * @returns {boolean} Succès de l'opération\n   */\n  updateMotherBar: function updateMotherBar(id, updatedValues) {\n    // Trouver la barre dans la liste principale\n    var barIndex = this.data.barsList.findIndex(function (b) {\n      return b.id === id && (b.type === 'mother' || b.type === 'mere');\n    });\n    if (barIndex === -1) return false;\n    var oldBar = this.data.barsList[barIndex];\n    var oldProfile = oldBar.profile;\n    var newProfile = updatedValues.profile || oldProfile;\n\n    // Suppression de l'ancienne barre de la structure motherBars\n    if (this.data.motherBars[oldProfile]) {\n      var index = this.data.motherBars[oldProfile].findIndex(function (b) {\n        return b.id === id;\n      });\n      if (index !== -1) {\n        this.data.motherBars[oldProfile].splice(index, 1);\n\n        // Re-trier après suppression\n        if (this.data.motherBars[oldProfile].length > 0) {\n          this._sortBarsCollection(this.data.motherBars[oldProfile]);\n        } else {\n          delete this.data.motherBars[oldProfile];\n        }\n      }\n    }\n\n    // Mise à jour de la barre dans la liste principale\n    var updatedBar = _objectSpread(_objectSpread({}, oldBar), updatedValues);\n    delete updatedBar.nom; // Supprimer la propriété nom des barres mères\n    this.data.barsList[barIndex] = updatedBar;\n\n    // Ajout de la barre mise à jour dans la structure motherBars\n    if (!this.data.motherBars[newProfile]) {\n      this.data.motherBars[newProfile] = [];\n    }\n    this.data.motherBars[newProfile].push(this.data.barsList[barIndex]);\n\n    // Trier automatiquement après ajout\n    this._sortBarsCollection(this.data.motherBars[newProfile]);\n    return true;\n  },\n  /**\n   * Efface toutes les données\n   */\n  clearAllData: function clearAllData() {\n    this.data = {\n      pieces: {},\n      motherBars: {},\n      barsList: []\n    };\n    console.log('📝 Toutes les données ont été effacées');\n    return this.data;\n  }\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/data-manager.js?");

/***/ }),

/***/ "./src/js/import-manager.js":
/*!**********************************!*\
  !*** ./src/js/import-manager.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImportManager: () => (/* binding */ ImportManager)\n/* harmony export */ });\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jszip */ \"./node_modules/jszip/dist/jszip.min.js\");\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jszip__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"./src/js/index.js\");\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n/**\n * Gestionnaire d'import pour fichiers NC2 et ZIP\n * Se concentre uniquement sur le parsing des fichiers, sans manipulation des données\n */\n\n\nvar ImportManager = {\n  /**\n   * Traite plusieurs fichiers NC2 ou un ZIP\n   * @param {FileList} files - Liste des fichiers à traiter\n   * @returns {Promise<Array>} - Tableau d'objets barre\n   */\n  processMultipleFiles: function () {\n    var _processMultipleFiles = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(files) {\n      var barres, _iterator, _step, file, fileName, content, parsedData, barre, zipBarres, _t, _t2;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            barres = [];\n            _context.p = 1;\n            _iterator = _createForOfIteratorHelper(files);\n            _context.p = 2;\n            _iterator.s();\n          case 3:\n            if ((_step = _iterator.n()).done) {\n              _context.n = 8;\n              break;\n            }\n            file = _step.value;\n            fileName = file.name.toLowerCase();\n            if (!(fileName.endsWith('.nc2') || fileName.endsWith('.nc1'))) {\n              _context.n = 5;\n              break;\n            }\n            _context.n = 4;\n            return this.readFileAsText(file);\n          case 4:\n            content = _context.v;\n            parsedData = _index_js__WEBPACK_IMPORTED_MODULE_1__.Parser.parseNC2(content);\n            barre = this.convertToBarre(parsedData, file.name);\n            if (barre) {\n              barres.push(barre);\n            }\n            _context.n = 7;\n            break;\n          case 5:\n            if (!fileName.endsWith('.zip')) {\n              _context.n = 7;\n              break;\n            }\n            _context.n = 6;\n            return this.processZipFile(file);\n          case 6:\n            zipBarres = _context.v;\n            barres.push.apply(barres, _toConsumableArray(zipBarres));\n          case 7:\n            _context.n = 3;\n            break;\n          case 8:\n            _context.n = 10;\n            break;\n          case 9:\n            _context.p = 9;\n            _t = _context.v;\n            _iterator.e(_t);\n          case 10:\n            _context.p = 10;\n            _iterator.f();\n            return _context.f(10);\n          case 11:\n            return _context.a(2, barres);\n          case 12:\n            _context.p = 12;\n            _t2 = _context.v;\n            console.error('Erreur traitement fichiers:', _t2);\n            throw _t2;\n          case 13:\n            return _context.a(2);\n        }\n      }, _callee, this, [[2, 9, 10, 11], [1, 12]]);\n    }));\n    function processMultipleFiles(_x) {\n      return _processMultipleFiles.apply(this, arguments);\n    }\n    return processMultipleFiles;\n  }(),\n  /**\n   * Lit un fichier comme texte\n   * @param {File} file - Fichier à lire\n   * @returns {Promise<string>} - Contenu du fichier\n   */\n  readFileAsText: function readFileAsText(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n      reader.onload = function () {\n        return resolve(reader.result);\n      };\n      reader.onerror = function (e) {\n        return reject(new Error(\"Erreur lecture \".concat(file.name)));\n      };\n      reader.readAsText(file);\n    });\n  },\n  /**\n   * Vérifie si un fichier est valide (pas un fichier système macOS)\n   * @param {string} path - Chemin du fichier\n   * @returns {boolean} - True si le fichier est valide\n   */\n  isValidFile: function isValidFile(path) {\n    var lowerPath = path.toLowerCase();\n\n    // Filtrer les fichiers système macOS\n    if (path.includes('__MACOSX') || path.startsWith('._')) {\n      return false;\n    }\n\n    // Filtrer les fichiers cachés et système\n    if (path.startsWith('.DS_Store') || path.includes('/.DS_Store')) {\n      return false;\n    }\n\n    // Vérifier l'extension\n    return lowerPath.endsWith('.nc2') || lowerPath.endsWith('.nc1');\n  },\n  /**\n   * Traite un fichier ZIP contenant des fichiers NC2\n   * @param {File} zipFile - Fichier ZIP à traiter\n   * @returns {Promise<Array>} - Tableau d'objets barre\n   */\n  processZipFile: function () {\n    var _processZipFile = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(zipFile) {\n      var barres, arrayBuffer, zip, _i, _Object$entries, _Object$entries$_i, path, zipEntry, content, parsedData, barre, _t3;\n      return _regenerator().w(function (_context2) {\n        while (1) switch (_context2.n) {\n          case 0:\n            barres = [];\n            _context2.p = 1;\n            _context2.n = 2;\n            return new Promise(function (resolve, reject) {\n              var reader = new FileReader();\n              reader.onload = function () {\n                return resolve(reader.result);\n              };\n              reader.onerror = function () {\n                return reject(new Error(\"Erreur lecture ZIP\"));\n              };\n              reader.readAsArrayBuffer(zipFile);\n            });\n          case 2:\n            arrayBuffer = _context2.v;\n            _context2.n = 3;\n            return jszip__WEBPACK_IMPORTED_MODULE_0___default().loadAsync(arrayBuffer);\n          case 3:\n            zip = _context2.v;\n            _i = 0, _Object$entries = Object.entries(zip.files);\n          case 4:\n            if (!(_i < _Object$entries.length)) {\n              _context2.n = 9;\n              break;\n            }\n            _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), path = _Object$entries$_i[0], zipEntry = _Object$entries$_i[1];\n            if (!zipEntry.dir) {\n              _context2.n = 5;\n              break;\n            }\n            return _context2.a(3, 8);\n          case 5:\n            if (this.isValidFile(path)) {\n              _context2.n = 6;\n              break;\n            }\n            console.log(\"Fichier ignor\\xE9: \".concat(path));\n            return _context2.a(3, 8);\n          case 6:\n            _context2.n = 7;\n            return zipEntry.async('string');\n          case 7:\n            content = _context2.v;\n            try {\n              parsedData = _index_js__WEBPACK_IMPORTED_MODULE_1__.Parser.parseNC2(content);\n              barre = this.convertToBarre(parsedData, path);\n              if (barre) {\n                barres.push(barre);\n              }\n            } catch (error) {\n              console.error(\"Erreur parsing \".concat(path, \":\"), error);\n            }\n          case 8:\n            _i++;\n            _context2.n = 4;\n            break;\n          case 9:\n            return _context2.a(2, barres);\n          case 10:\n            _context2.p = 10;\n            _t3 = _context2.v;\n            console.error(\"Erreur traitement ZIP:\", _t3);\n            throw _t3;\n          case 11:\n            return _context2.a(2);\n        }\n      }, _callee2, this, [[1, 10]]);\n    }));\n    function processZipFile(_x2) {\n      return _processZipFile.apply(this, arguments);\n    }\n    return processZipFile;\n  }(),\n  /**\n   * Convertit les données parsées en objet barre\n   * @param {Object} parsedData - Données parsées du fichier NC2\n   * @param {string} filename - Nom du fichier source\n   * @returns {Object|null} - Objet barre ou null si invalide\n   */\n  convertToBarre: function convertToBarre(parsedData, filename) {\n    if (!parsedData || !parsedData.profil || parsedData.profil.trim() === '') {\n      console.error(\"Donn\\xE9es invalides: \".concat(filename));\n      return null;\n    }\n    var shortName = filename.split('/').pop();\n\n    // Format adapté à la nouvelle structure du parser\n    return {\n      nom: parsedData.nom || shortName.replace(/\\.[^/.]+$/, \"\"),\n      // Nom de la barre sans extension\n      profile: parsedData.profil || 'INCONNU',\n      length: parsedData.longueur || 0,\n      quantity: parsedData.quantite || 1,\n      orientation: parsedData.orientation || \"a-plat\",\n      type: 'fille',\n      angles: {\n        1: parsedData.angle_1 || 90,\n        2: parsedData.angle_2 || 90\n      },\n      // Propriétés F4C pour la génération PGM\n      f4cData: {\n        B021: parsedData.B021 || '',\n        B035: parsedData.B035 || '',\n        S051: parsedData.S051 || '',\n        S052: parsedData.S052 || '',\n        S053: parsedData.S053 || '',\n        S054: parsedData.S054 || '',\n        S055: parsedData.S055 || ''\n      },\n      id: \"\".concat(shortName.replace(/\\W/g, '_'), \"_\").concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 5)),\n      originalFile: shortName\n    };\n  }\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/import-manager.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Parser: () => (/* reexport safe */ _parser_js__WEBPACK_IMPORTED_MODULE_8__.Parser),\n/* harmony export */   algorithms: () => (/* binding */ algorithms)\n/* harmony export */ });\n/* harmony import */ var _css_base_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/base.css */ \"./src/css/base.css\");\n/* harmony import */ var _css_layout_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css/layout.css */ \"./src/css/layout.css\");\n/* harmony import */ var _css_components_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../css/components.css */ \"./src/css/components.css\");\n/* harmony import */ var _css_sections_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../css/sections.css */ \"./src/css/sections.css\");\n/* harmony import */ var _data_manager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data-manager.js */ \"./src/js/data-manager.js\");\n/* harmony import */ var _ui_controller_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ui-controller.js */ \"./src/js/ui-controller.js\");\n/* harmony import */ var _algorithm_service_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./algorithm-service.js */ \"./src/js/algorithm-service.js\");\n/* harmony import */ var _results_renderer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./results-renderer.js */ \"./src/js/results-renderer.js\");\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parser.js */ \"./src/js/parser.js\");\n/* harmony import */ var _import_manager_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./import-manager.js */ \"./src/js/import-manager.js\");\n/* harmony import */ var _pgm_generator_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pgm-generator.js */ \"./src/js/pgm-generator.js\");\n/* harmony import */ var _pgm_manager_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pgm-manager.js */ \"./src/js/pgm-manager.js\");\n/* harmony import */ var _algorithms_First_Fit_Decreasing_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./algorithms/First-Fit-Decreasing.js */ \"./src/js/algorithms/First-Fit-Decreasing.js\");\n/* harmony import */ var _algorithms_Integer_Linear_Programming_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./algorithms/Integer-Linear-Programming.js */ \"./src/js/algorithms/Integer-Linear-Programming.js\");\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n// Importer les fichiers CSS\n\n\n\n\n\n// Importer tous les modules nécessaires\n\n\n\n\n\n\n\n\n\n// Importer les algorithmes\n\n\n\n// Export algorithms for the algorithm service\nvar algorithms = {\n  solveGreedyFFD: _algorithms_First_Fit_Decreasing_js__WEBPACK_IMPORTED_MODULE_12__.solveGreedyFFD,\n  solveWithILP: _algorithms_Integer_Linear_Programming_js__WEBPACK_IMPORTED_MODULE_13__.solveWithILP\n};\n\n// Export parser for the import manager\n\n\n// Initialiser l'application\ndocument.addEventListener('DOMContentLoaded', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n  var _t;\n  return _regenerator().w(function (_context) {\n    while (1) switch (_context.n) {\n      case 0:\n        console.log('🚀 Chargement de l\\'application...');\n        _context.p = 1;\n        _context.n = 2;\n        return _ui_controller_js__WEBPACK_IMPORTED_MODULE_5__.UIController.init();\n      case 2:\n        console.log('✅ Application prête');\n        _context.n = 4;\n        break;\n      case 3:\n        _context.p = 3;\n        _t = _context.v;\n        console.error('❌ Erreur fatale:', _t);\n      case 4:\n        return _context.a(2);\n    }\n  }, _callee, null, [[1, 3]]);\n})));\n\n// Exposer certains modules pour le debug en développement\nif (true) {\n  window.DEBUG = {\n    DataManager: _data_manager_js__WEBPACK_IMPORTED_MODULE_4__.DataManager,\n    AlgorithmService: _algorithm_service_js__WEBPACK_IMPORTED_MODULE_6__.AlgorithmService,\n    PgmManager: _pgm_manager_js__WEBPACK_IMPORTED_MODULE_11__.PgmManager,\n    PgmGenerator: _pgm_generator_js__WEBPACK_IMPORTED_MODULE_10__.PgmGenerator,\n    // Ajouter le PGM-Generator pour le debug\n    UIController: _ui_controller_js__WEBPACK_IMPORTED_MODULE_5__.UIController\n  };\n}\n\n//# sourceURL=webpack://parser-optimizer/./src/js/index.js?");

/***/ }),

/***/ "./src/js/parser.js":
/*!**************************!*\
  !*** ./src/js/parser.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Parser: () => (/* binding */ Parser)\n/* harmony export */ });\n/**\n * Analyseur pour fichiers .nc2\n * Suit l'algorithme du diagramme de flux pour déterminer l'orientation et calculer les angles\n */\n\n// Configuration pour la structure du tableau 3D des valeurs AK\nvar AK_index = {\n  'paragraphes': 3,\n  'colonnes': 6,\n  'lignes': 5,\n  'defaut': -0.00\n};\nvar Parser = {\n  /**\n   * Analyse un fichier .nc2 en suivant l'algorithme du diagramme de flux\n   * @param {string} contenu - Contenu du fichier .nc2\n   * @returns {Object} - Barre analysée\n   */\n  parseNC2: function parseNC2(contenu) {\n    console.log(\"Analyse du fichier NC2...\");\n    var lignes = contenu.split('\\n').map(function (ligne) {\n      return ligne.trim();\n    });\n    var barreActuelle = this.initialiserNouvelleBarre();\n\n    // Analyser les premières valeurs par lignes\n    this.analyserInfosDeBaseBarre(barreActuelle, lignes);\n\n    // Analyser les tableaux des sections AK\n    var AK_valeurs = this.construireTableauAK3D(lignes);\n\n    // Récupérer les angles et l'orientation depuis AK\n    this.analyserAnglesEtOrientation(barreActuelle, AK_valeurs);\n\n    // Générer les codes F4C\n    this.genererCodesF4C(barreActuelle, AK_valeurs);\n\n    // Afficher la barre analysée pour le débogage\n    console.log(\"Barre analysée:\", barreActuelle);\n    return barreActuelle;\n  },\n  /**\n   * Initialise une nouvelle barre\n   * @returns {Object} - Objet barre initialisé\n   */\n  initialiserNouvelleBarre: function initialiserNouvelleBarre() {\n    return {\n      nom: '',\n      profil: '',\n      quantite: 1,\n      longueur: 0,\n      hauteur: 0,\n      largeur: 0,\n      orientation: '',\n      angle_1: 0,\n      angle_2: 0,\n      // Propriétés pour F4C\n      B021: '',\n      B035: '',\n      S051: '',\n      S052: '',\n      S053: '',\n      S054: '',\n      S055: ''\n    };\n  },\n  /**\n   * Analyse les informations de base d'une barre\n   * @param {Object} barreActuelle - Barre en cours de traitement\n   * @param {Array} lignes - Toutes les lignes du fichier\n   */\n  analyserInfosDeBaseBarre: function analyserInfosDeBaseBarre(barreActuelle, lignes) {\n    for (var i = 0; i < lignes.length; i++) {\n      var ligne = lignes[i];\n      var indexLigne = i + 1; // Pour l'indexation base 1\n\n      // Nom de la barre\n      if (indexLigne == 2) {\n        barreActuelle.nom = ligne.replace('**', '').split('.nc')[0];\n      }\n\n      // Quantité\n      if (indexLigne == 4) {\n        var quantite = parseInt(ligne.split('.')[0].trim());\n        if (!isNaN(quantite)) {\n          barreActuelle.quantite = quantite;\n        }\n      }\n\n      // Profil (ex: HEA100, IPE200, etc.)\n      if (indexLigne == 9) {\n        barreActuelle.profil = ligne.trim();\n      }\n\n      // Longueur\n      if (indexLigne == 11) {\n        var longueur = parseInt(ligne.split('.')[0].trim());\n        barreActuelle.longueur = longueur;\n      }\n\n      // Hauteur\n      if (indexLigne == 12) {\n        var hauteur = parseInt(ligne.split('.')[0].trim());\n        barreActuelle.hauteur = hauteur;\n      }\n\n      // Largeur\n      if (indexLigne == 13) {\n        var largeur = parseInt(ligne.split('.')[0].trim());\n        barreActuelle.largeur = largeur;\n      }\n    }\n  },\n  /**\n   * Analyse les angles et l'orientation de la barre à partir des valeurs AK\n   * @param {Object} barre - Barre à traiter\n   * @param {Array} AK_valeurs - Tableau 3D des valeurs AK\n   */\n  analyserAnglesEtOrientation: function analyserAnglesEtOrientation(barre, AK_valeurs) {\n    var AK_v4 = AK_valeurs[1][4]; // Première section AK, colonne 4\n    var AK_o4 = AK_valeurs[2][4]; // Deuxième section AK, colonne 4\n\n    if (AK_v4[2] != 0 || AK_v4[4] != 0) {\n      barre.angle_1 = AK_v4[4];\n      barre.angle_2 = AK_v4[2];\n      barre.orientation = 'debout';\n    } else if (AK_o4[1] != 0 || AK_o4[3] != 0) {\n      barre.angle_1 = AK_o4[1] != 0 ? -AK_o4[1] : AK_o4[1];\n      barre.angle_2 = AK_o4[3] != 0 ? -AK_o4[3] : AK_o4[3];\n      barre.orientation = 'a-plat';\n    } else {\n      barre.angle_1 = 0.00;\n      barre.angle_2 = 0.00;\n      barre.orientation = 'a-plat';\n    }\n  },\n  /**\n   * Génère les codes F4C\n   * @param {Object} barre - Barre à traiter\n   * @param {Array} AK_valeurs - Tableau 3D des valeurs AK\n   */\n  genererCodesF4C: function genererCodesF4C(barre, AK_valeurs) {\n    // B021 = Code profilé à 3 lettres + 5 espaces\n    barre.B021 = barre.profil.substring(0, 3) + '     ';\n\n    // B035 = Longueur du profil en centimètres\n    var racine_B035 = barre.orientation == 'debout' ? barre.largeur : barre.hauteur;\n    barre.B035 = Math.round(racine_B035 * 10000).toString();\n\n    // S052 et S053 = Quantité\n    barre.S052 = barre.quantite.toString();\n    barre.S053 = barre.quantite.toString();\n\n    // S054 et S055 = Angles (en centièmes de degré)\n    barre.S054 = Math.round((90 + barre.angle_1) * 100).toString();\n    barre.S055 = Math.round((90 + barre.angle_2) * 100).toString();\n\n    // S051 = longueur en fonction des angles\n    var position_AK_S051 = [0, 0, 0];\n    if (barre.orientation === 'a-plat') {\n      if (barre.angle_1 > 0) {\n        position_AK_S051 = [1, 1, 4]; // AK v(1;4)\n      } else {\n        position_AK_S051 = [1, 1, 2]; // AK v(1;2)\n      }\n    } else if (barre.orientation === 'debout') {\n      if (barre.angle_1 < 0) {\n        position_AK_S051 = [2, 1, 2]; // AK o(1;2)\n      } else if (barre.angle_2 > 0 || barre.angle_1 > 0 && barre.angle_2 < 0) {\n        position_AK_S051 = [2, 1, 4]; // AK o(1;4)\n      } else {\n        position_AK_S051 = [2, 1, 3]; // AK o(1;3)\n      }\n    }\n    barre.S051 = Math.round(AK_valeurs[position_AK_S051[0]][position_AK_S051[1]][position_AK_S051[2]] * 10000).toString();\n  },\n  /**\n   * Initialise un tableau 3D pour les valeurs AK avec indexation base 1\n   * @returns {Array} - Tableau 3D initialisé\n   */\n  initialiserValeursAK: function initialiserValeursAK() {\n    var AK_valeurs;\n    // Structure: AK_valeurs[paragraphe][colonne][ligne] (indexation base 1)\n\n    // Créer des tableaux avec +1 de taille pour accommoder l'indexation base 1\n    AK_valeurs = new Array(AK_index.paragraphes + 1);\n    for (var i = 0; i <= AK_index.paragraphes; i++) {\n      AK_valeurs[i] = new Array(AK_index.colonnes + 1);\n      for (var j = 0; j <= AK_index.colonnes; j++) {\n        AK_valeurs[i][j] = new Array(AK_index.lignes + 1);\n        for (var k = 0; k <= AK_index.lignes; k++) {\n          AK_valeurs[i][j][k] = AK_index.defaut;\n        }\n      }\n    }\n    return AK_valeurs;\n  },\n  /**\n   * Construit le tableau AK 3D à partir des lignes du fichier NC avec indexation base 1\n   * @param {Array} lignes - Lignes du fichier NC\n   * @returns {Array} - Tableau AK 3D rempli\n   */\n  construireTableauAK3D: function construireTableauAK3D(lignes) {\n    // Initialiser le tableau AK_valeurs\n    var AK_valeurs = this.initialiserValeursAK();\n\n    // Remplir le tableau AK_valeurs avec les données du fichier NC\n    var paragrapheActuel = 0; // Commence à 0, sera incrémenté à 1\n    var ligneDansParagraphe = 0; // Sera incrémenté à 1\n    var dansParagrapheAK = false;\n    for (var i = 0; i < lignes.length; i++) {\n      var ligne = lignes[i];\n\n      // Détecter le début d'un paragraphe AK\n      if (ligne.startsWith('AK')) {\n        dansParagrapheAK = true;\n        paragrapheActuel++; // Incrémenter pour obtenir une indexation base 1 (1, 2, 3)\n\n        // Vérifier qu'on ne dépasse pas le nombre de paragraphes définis\n        if (paragrapheActuel > AK_index.paragraphes) {\n          console.warn(\"Limite du nombre de paragraphes AK atteinte (\".concat(AK_index.paragraphes, \")\"));\n          break;\n        }\n        ligneDansParagraphe = 0; // Réinitialiser le compteur de lignes\n        continue;\n      }\n\n      // Détecter la fin d'un paragraphe AK\n      if (ligne.startsWith('EN')) {\n        dansParagrapheAK = false;\n        continue;\n      }\n\n      // Traiter les lignes à l'intérieur d'un paragraphe AK\n      if (dansParagrapheAK && ligne.trim() !== '') {\n        ligneDansParagraphe++; // Incrémenter pour obtenir une indexation base 1\n\n        // Limiter au nombre de lignes défini dans AK_index\n        if (ligneDansParagraphe > AK_index.lignes) {\n          console.warn(\"Limite de lignes dans le paragraphe AK \".concat(paragrapheActuel, \" atteinte (limite: \").concat(AK_index.lignes, \")\"));\n          continue;\n        }\n\n        // Séparer les valeurs et supprimer l'identifiant (v, o, u) s'il est présent\n        var valeurs = ligne.trim().split(/\\s+/);\n        if (valeurs.length > 0 && /^[a-zA-Z]/.test(valeurs[0])) {\n          valeurs.shift(); // Supprimer l'identifiant (v, o, u)\n        }\n\n        // Stocker chaque valeur dans le tableau AK_valeurs avec indexation base 1\n        for (var col = 0; col < valeurs.length && col < AK_index.colonnes; col++) {\n          var valeur = valeurs[col];\n\n          // Supprimer une quelconque lettre à la fin si présente\n          if (valeur.length > 0) {\n            valeur = valeur.replace(/[a-zA-Z]$/, '');\n          }\n\n          // Convertir en nombre et stocker avec indexation base 1\n          AK_valeurs[paragrapheActuel][col + 1][ligneDansParagraphe] = parseFloat(valeur) || 0;\n        }\n      }\n    }\n    return AK_valeurs;\n  }\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/parser.js?");

/***/ }),

/***/ "./src/js/pgm-generator.js":
/*!*********************************!*\
  !*** ./src/js/pgm-generator.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PgmGenerator: () => (/* binding */ PgmGenerator)\n/* harmony export */ });\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jszip */ \"./node_modules/jszip/dist/jszip.min.js\");\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jszip__WEBPACK_IMPORTED_MODULE_0__);\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Générateur de fichiers PGM à partir des objets PGM\n */\n\nvar PgmGenerator = {\n  /**\n   * Génère un fichier PGM à partir d'un objet PGM\n   * @param {Object} pgmObject - Objet PGM créé par le PGM-Manager\n   * @param {Object} dataManager - Instance du DataManager\n   * @returns {string} - Contenu du fichier PGM\n   */\n  generatePgmFromObject: function generatePgmFromObject(pgmObject, dataManager) {\n    var _this = this;\n    console.log(\"\\uD83D\\uDD27 G\\xE9n\\xE9ration PGM pour \".concat(pgmObject.id));\n    try {\n      // Récupérer les informations de base\n      var motherBar = pgmObject.motherBar;\n      var pieces = pgmObject.pieces;\n      if (!pieces || pieces.length === 0) {\n        throw new Error('Aucune pièce à découper dans l\\'objet PGM');\n      }\n\n      // Prendre les données F4C de la première pièce comme base pour le BODY\n      var firstPiece = pieces[0].pieceReference;\n\n      // Générer le BODY avec les données de la première pièce\n      var bodyContent = this.generateBody(firstPiece, motherBar);\n\n      // Grouper les pièces identiques pour optimiser les STEPs\n      var groupedSteps = this.groupIdenticalSteps(pieces);\n\n      // Générer les STEPs\n      var stepsContent = groupedSteps.map(function (group) {\n        return _this.generateStep(group.piece, group.quantity);\n      }).join('\\n');\n\n      // Assembler le contenu final\n      var pgmContent = \"<!--CEB-->\\n\".concat(bodyContent, \"\\n\").concat(stepsContent);\n      console.log(\"\\u2705 PGM g\\xE9n\\xE9r\\xE9: \".concat(groupedSteps.length, \" steps pour \").concat(pieces.length, \" pi\\xE8ces\"));\n      return pgmContent;\n    } catch (error) {\n      console.error(\"\\u274C Erreur g\\xE9n\\xE9ration PGM \".concat(pgmObject.id, \":\"), error);\n      throw error;\n    }\n  },\n  /**\n   * Génère le contenu du BODY\n   * @param {Object} pieceReference - Référence de la première pièce\n   * @param {Object} motherBar - Informations de la barre mère\n   * @returns {string} - Contenu du BODY\n   */\n  generateBody: function generateBody(pieceReference, motherBar) {\n    var f4cData = pieceReference.f4cData || {};\n\n    // Template par défaut pour le BODY\n    var bodyTemplate = {\n      B001: \"        \",\n      B002: \"700\",\n      B003: \"3\",\n      B004: \"0\",\n      B005: \"0\",\n      B006: \"0\",\n      B007: \"0\",\n      B008: \"0\",\n      B009: \"0\",\n      B010: \"0\",\n      B011: \"0\",\n      B012: \"0\",\n      B013: \"0\",\n      B021: \"HEA     \",\n      // Sera remplacé par les données de la pièce\n      B022: \"0\",\n      B023: \"0\",\n      B024: \"0\",\n      B025: \"0\",\n      B041: \"0\",\n      B026: \"0\",\n      B027: \"0\",\n      B030: \"        \",\n      B031: \"                \",\n      B032: \"                \",\n      B033: \"        \",\n      B034: \"0\",\n      B035: \"1000000\",\n      // Sera remplacé par les données de la pièce\n      B037: \"                \",\n      B036: \"0\",\n      B090: \"                \",\n      B100: \"1\"\n    };\n\n    // Appliquer les données F4C de la pièce\n    if (f4cData.B021) {\n      bodyTemplate.B021 = f4cData.B021.padEnd(8, ' ');\n    } else {\n      // Générer B021 à partir du profil\n      bodyTemplate.B021 = pieceReference.profile.substring(0, 3).padEnd(8, ' ');\n    }\n    if (f4cData.B035) {\n      bodyTemplate.B035 = f4cData.B035;\n    } else {\n      // Valeur par défaut basée sur le profil\n      bodyTemplate.B035 = \"10000\";\n    }\n\n    // Construire la chaîne BODY\n    var bodyParts = [];\n    for (var _i = 0, _Object$entries = Object.entries(bodyTemplate); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n      bodyParts.push(\"\".concat(key, \"=\\\"\").concat(value, \"\\\"\"));\n    }\n    return \"<BODY \".concat(bodyParts.join(' '), \" ></BODY>\");\n  },\n  /**\n   * Groupe les pièces identiques pour optimiser les STEPs\n   * @param {Array} pieces - Liste des pièces à découper\n   * @returns {Array} - Groupes de pièces identiques avec leur quantité\n   */\n  groupIdenticalSteps: function groupIdenticalSteps(pieces) {\n    var groups = new Map();\n    pieces.forEach(function (piece) {\n      var _pieceRef$f4cData, _pieceRef$f4cData2, _pieceRef$f4cData3;\n      var pieceRef = piece.pieceReference;\n\n      // Créer une clé unique basée sur les propriétés importantes\n      var key = JSON.stringify({\n        length: piece.length,\n        angles: pieceRef.angles,\n        f4cData: {\n          S051: (_pieceRef$f4cData = pieceRef.f4cData) === null || _pieceRef$f4cData === void 0 ? void 0 : _pieceRef$f4cData.S051,\n          S054: (_pieceRef$f4cData2 = pieceRef.f4cData) === null || _pieceRef$f4cData2 === void 0 ? void 0 : _pieceRef$f4cData2.S054,\n          S055: (_pieceRef$f4cData3 = pieceRef.f4cData) === null || _pieceRef$f4cData3 === void 0 ? void 0 : _pieceRef$f4cData3.S055\n        }\n      });\n      if (groups.has(key)) {\n        groups.get(key).quantity++;\n      } else {\n        groups.set(key, {\n          piece: piece,\n          quantity: 1\n        });\n      }\n    });\n    return Array.from(groups.values());\n  },\n  /**\n   * Génère un STEP pour une pièce\n   * @param {Object} piece - Pièce à découper\n   * @param {number} quantity - Quantité de pièces identiques\n   * @returns {string} - Contenu du STEP\n   */\n  generateStep: function generateStep(piece, quantity) {\n    var pieceRef = piece.pieceReference;\n    var f4cData = pieceRef.f4cData || {};\n\n    // Template par défaut pour le STEP\n    var stepTemplate = {\n      S051: \"15000000\",\n      // Longueur en micromètres - sera remplacé\n      S052: \"1\",\n      // Quantité - sera remplacé\n      S053: \"1\",\n      // Quantité - sera remplacé\n      S054: \"9000\",\n      // Angle début en centièmes - sera remplacé\n      S055: \"9000\",\n      // Angle fin en centièmes - sera remplacé\n      S056: \"1\",\n      S057: \"1\",\n      S058: \"1\",\n      S060: \"0\",\n      S061: \"0\",\n      S070: \"0\",\n      S071: \"0\",\n      S072: \"0\",\n      S073: \"0\",\n      S074: \"0\",\n      S075: \"0\",\n      S094: \"0\"\n    };\n\n    // Appliquer les données F4C de la pièce\n    if (f4cData.S051) {\n      stepTemplate.S051 = f4cData.S051;\n    } else {\n      // Convertir la longueur en micromètres (cm → µm)\n      stepTemplate.S051 = Math.round(piece.length * 10000).toString();\n    }\n\n    // Quantités\n    stepTemplate.S052 = quantity.toString();\n    stepTemplate.S053 = quantity.toString();\n\n    // Angles\n    if (f4cData.S054) {\n      stepTemplate.S054 = f4cData.S054;\n    } else {\n      var _pieceRef$angles;\n      // Convertir l'angle en centièmes de degré\n      var angle1 = ((_pieceRef$angles = pieceRef.angles) === null || _pieceRef$angles === void 0 ? void 0 : _pieceRef$angles[1]) || 90;\n      stepTemplate.S054 = Math.round(angle1 * 100).toString();\n    }\n    if (f4cData.S055) {\n      stepTemplate.S055 = f4cData.S055;\n    } else {\n      var _pieceRef$angles2;\n      // Convertir l'angle en centièmes de degré\n      var angle2 = ((_pieceRef$angles2 = pieceRef.angles) === null || _pieceRef$angles2 === void 0 ? void 0 : _pieceRef$angles2[2]) || 90;\n      stepTemplate.S055 = Math.round(angle2 * 100).toString();\n    }\n\n    // Construire la chaîne STEP\n    var stepParts = [];\n    for (var _i2 = 0, _Object$entries2 = Object.entries(stepTemplate); _i2 < _Object$entries2.length; _i2++) {\n      var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n        key = _Object$entries2$_i[0],\n        value = _Object$entries2$_i[1];\n      stepParts.push(\"\".concat(key, \"=\\\"\").concat(value, \"\\\"\"));\n    }\n    return \"<STEP \".concat(stepParts.join(' '), \" ></STEP>\");\n  },\n  /**\n   * Génère le nom de fichier PGM\n   * @param {Object} pgmObject - Objet PGM\n   * @returns {string} - Nom du fichier\n   */\n  generatePgmFileName: function generatePgmFileName(pgmObject) {\n    var motherBar = pgmObject.motherBar;\n    var pieces = pgmObject.pieces;\n\n    // Profil\n    var profil = motherBar.profile;\n\n    // Longueur en mètres (arrondie)\n    var longueurMetres = Math.round(motherBar.length / 100);\n\n    // Orientation\n    var orientation = motherBar.orientation;\n\n    // Noms des barres (limiter à 5 pour éviter des noms trop longs)\n    var nomsPieces = pieces.slice(0, 5).map(function (piece) {\n      var nom = piece.pieceReference.nom;\n      if (nom && nom.trim() !== '') {\n        // Nettoyer le nom (supprimer caractères spéciaux)\n        return nom.replace(/[^a-zA-Z0-9]/g, '');\n      } else {\n        // Utiliser le profil + longueur si pas de nom\n        return \"\".concat(piece.pieceReference.profile).concat(piece.length);\n      }\n    });\n\n    // Ajouter \"...\" si plus de 5 pièces\n    if (pieces.length > 5) {\n      nomsPieces.push('...');\n    }\n\n    // Assembler le nom\n    var nomFichier = \"\".concat(profil, \"_\").concat(longueurMetres, \"m_\").concat(orientation, \"__\").concat(nomsPieces.join('-'), \".pgm\");\n\n    // Nettoyer le nom final (supprimer caractères interdits dans les noms de fichier)\n    return nomFichier.replace(/[<>:\"/\\\\|?*]/g, '_');\n  },\n  /**\n   * Génère un ZIP avec tous les fichiers PGM à partir des objets PGM\n   * @param {Array} pgmObjects - Liste des objets PGM\n   * @param {Object} dataManager - Instance du DataManager\n   * @returns {Promise<Blob>} - Blob du fichier ZIP\n   */\n  generateAllPgmFromObjects: function () {\n    var _generateAllPgmFromObjects = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(pgmObjects, dataManager) {\n      var zip, fileNames, i, pgmObject, pgmContent, fileName, counter, uniqueFileName, nameParts, errorFileName, errorContent, summary, blob, _t;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            console.log(\"\\uD83C\\uDFD7\\uFE0F G\\xE9n\\xE9ration de \".concat(pgmObjects.length, \" fichiers PGM...\"));\n            if (!(!pgmObjects || pgmObjects.length === 0)) {\n              _context.n = 1;\n              break;\n            }\n            throw new Error('Aucun objet PGM fourni');\n          case 1:\n            zip = new (jszip__WEBPACK_IMPORTED_MODULE_0___default())();\n            fileNames = new Set(); // Pour éviter les doublons\n            _context.p = 2;\n            // Générer chaque fichier PGM\n            for (i = 0; i < pgmObjects.length; i++) {\n              pgmObject = pgmObjects[i];\n              try {\n                // Générer le contenu PGM\n                pgmContent = this.generatePgmFromObject(pgmObject, dataManager); // Générer le nom de fichier\n                fileName = this.generatePgmFileName(pgmObject); // Gérer les doublons en ajoutant un numéro\n                counter = 1;\n                uniqueFileName = fileName;\n                while (fileNames.has(uniqueFileName)) {\n                  nameParts = fileName.split('.pgm');\n                  uniqueFileName = \"\".concat(nameParts[0], \"_\").concat(counter, \".pgm\");\n                  counter++;\n                }\n                fileNames.add(uniqueFileName);\n\n                // Ajouter au ZIP\n                zip.file(uniqueFileName, pgmContent);\n                console.log(\"  \\u2705 \".concat(uniqueFileName, \" (\").concat(pgmObject.pieces.length, \" pi\\xE8ces)\"));\n              } catch (error) {\n                console.error(\"\\u274C Erreur g\\xE9n\\xE9ration PGM \".concat(i + 1, \":\"), error);\n\n                // Créer un fichier d'erreur pour continuer le processus\n                errorFileName = \"ERREUR_PGM_\".concat(i + 1, \".txt\");\n                errorContent = \"Erreur lors de la g\\xE9n\\xE9ration du PGM:\\n\".concat(error.message, \"\\n\\nObjet PGM:\\n\").concat(JSON.stringify(pgmObject, null, 2));\n                zip.file(errorFileName, errorContent);\n              }\n            }\n\n            // Ajouter un fichier de résumé\n            summary = this.generateSummaryFile(pgmObjects);\n            zip.file('RESUME_GENERATION.txt', summary);\n\n            // Générer le ZIP\n            console.log('📦 Création du fichier ZIP...');\n            _context.n = 3;\n            return zip.generateAsync({\n              type: \"blob\",\n              compression: \"DEFLATE\",\n              compressionOptions: {\n                level: 6\n              }\n            });\n          case 3:\n            blob = _context.v;\n            console.log(\"\\u2705 ZIP g\\xE9n\\xE9r\\xE9 avec succ\\xE8s (\".concat(fileNames.size, \" fichiers PGM)\"));\n            return _context.a(2, blob);\n          case 4:\n            _context.p = 4;\n            _t = _context.v;\n            console.error('❌ Erreur lors de la génération du ZIP:', _t);\n            throw _t;\n          case 5:\n            return _context.a(2);\n        }\n      }, _callee, this, [[2, 4]]);\n    }));\n    function generateAllPgmFromObjects(_x, _x2) {\n      return _generateAllPgmFromObjects.apply(this, arguments);\n    }\n    return generateAllPgmFromObjects;\n  }(),\n  /**\n   * Génère un fichier de résumé pour le ZIP\n   * @param {Array} pgmObjects - Liste des objets PGM\n   * @returns {string} - Contenu du fichier de résumé\n   */\n  generateSummaryFile: function generateSummaryFile(pgmObjects) {\n    var _this2 = this;\n    var now = new Date();\n    var dateStr = now.toLocaleDateString('fr-FR');\n    var timeStr = now.toLocaleTimeString('fr-FR');\n    var summary = \"R\\xC9SUM\\xC9 DE G\\xC9N\\xC9RATION PGM\\n\";\n    summary += \"========================\\n\\n\";\n    summary += \"Date de g\\xE9n\\xE9ration: \".concat(dateStr, \" \\xE0 \").concat(timeStr, \"\\n\");\n    summary += \"Nombre total de fichiers PGM: \".concat(pgmObjects.length, \"\\n\\n\");\n\n    // Statistiques par profil\n    var profileStats = {};\n    pgmObjects.forEach(function (pgm) {\n      var profile = pgm.motherBar.profile;\n      if (!profileStats[profile]) {\n        profileStats[profile] = {\n          count: 0,\n          totalPieces: 0,\n          totalLength: 0,\n          totalWaste: 0\n        };\n      }\n      profileStats[profile].count++;\n      profileStats[profile].totalPieces += pgm.pieces.length;\n      profileStats[profile].totalLength += pgm.motherBar.length;\n      profileStats[profile].totalWaste += pgm.motherBar.waste;\n    });\n    summary += \"STATISTIQUES PAR PROFIL:\\n\";\n    summary += \"------------------------\\n\";\n    for (var _i3 = 0, _Object$entries3 = Object.entries(profileStats); _i3 < _Object$entries3.length; _i3++) {\n      var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n        profile = _Object$entries3$_i[0],\n        stats = _Object$entries3$_i[1];\n      var efficiency = Math.round((1 - stats.totalWaste / stats.totalLength) * 100);\n      summary += \"\".concat(profile, \":\\n\");\n      summary += \"  - \".concat(stats.count, \" barres m\\xE8res\\n\");\n      summary += \"  - \".concat(stats.totalPieces, \" pi\\xE8ces \\xE0 d\\xE9couper\\n\");\n      summary += \"  - \".concat(Math.round(stats.totalLength), \" cm de barres\\n\");\n      summary += \"  - \".concat(Math.round(stats.totalWaste), \" cm de chutes\\n\");\n      summary += \"  - Efficacit\\xE9: \".concat(efficiency, \"%\\n\\n\");\n    }\n\n    // DÉTAIL DES BARRES À DÉCOUPER PAR PGM\n    summary += \"D\\xC9TAIL DES BARRES \\xC0 D\\xC9COUPER:\\n\";\n    summary += \"=============================\\n\\n\";\n    pgmObjects.forEach(function (pgm, pgmIndex) {\n      var fileName = _this2.generatePgmFileName(pgm);\n\n      // En-tête du PGM avec délimitation claire\n      summary += \"\\u2554\".concat('═'.repeat(80), \"\\n\");\n      summary += \"\\u2551 PGM \".concat(pgmIndex + 1, \": \").concat(fileName, \"\\n\");\n      summary += \"\\u255A\".concat('═'.repeat(80), \"\\n\\n\");\n\n      // Informations sur la barre mère\n      summary += \"Profil: \".concat(pgm.motherBar.profile, \"\\n\");\n      summary += \"Orientation: \".concat(pgm.motherBar.orientation, \"\\n\");\n      summary += \"Longueur: \".concat(Math.round(pgm.motherBar.length / 100), \".\").concat(Math.round(pgm.motherBar.length % 100 / 10), \" m\\n\");\n      summary += \"Chute: \".concat(Math.round(pgm.motherBar.waste), \" cm\\n\");\n      summary += \"Efficacit\\xE9: \".concat(pgm.metadata.efficiency, \"%\\n\\n\");\n\n      // Liste des barres à découper\n      summary += \"Barres \\xE0 d\\xE9couper:\\n\";\n      summary += \"\".concat('─'.repeat(50), \"\\n\");\n      if (pgm.pieces && pgm.pieces.length > 0) {\n        pgm.pieces.forEach(function (piece, pieceIndex) {\n          var _pieceRef$angles3, _pieceRef$angles4;\n          var pieceRef = piece.pieceReference;\n          var pieceName = pieceRef.nom && pieceRef.nom.trim() !== '' ? pieceRef.nom : \"\".concat(pieceRef.profile, \"_\").concat(piece.length, \"cm\");\n\n          // Angles si différents de 90°\n          var angle1 = ((_pieceRef$angles3 = pieceRef.angles) === null || _pieceRef$angles3 === void 0 ? void 0 : _pieceRef$angles3[1]) || 90;\n          var angle2 = ((_pieceRef$angles4 = pieceRef.angles) === null || _pieceRef$angles4 === void 0 ? void 0 : _pieceRef$angles4[2]) || 90;\n          var angleInfo = angle1 !== 90 || angle2 !== 90 ? \" - Angles: \".concat(angle1, \"\\xB0/\").concat(angle2, \"\\xB0\") : '';\n          summary += \"  \".concat((pieceIndex + 1).toString().padStart(2, ' '), \". \").concat(pieceName, \" - \").concat(piece.length, \" cm\").concat(angleInfo, \"\\n\");\n        });\n      } else {\n        summary += \"  Aucune pi\\xE8ce \\xE0 d\\xE9couper\\n\";\n      }\n      summary += \"\\n\\n\";\n    });\n    return summary;\n  }\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/pgm-generator.js?");

/***/ }),

/***/ "./src/js/pgm-manager.js":
/*!*******************************!*\
  !*** ./src/js/pgm-manager.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PgmManager: () => (/* binding */ PgmManager)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * PGM Manager - Gère la création d'objets PGM à partir des schémas de coupe\n * Chaque objet PGM représente une barre mère à découper avec les références des pièces\n */\nvar PgmManager = {\n  /**\n   * Génère les objets PGM à partir des résultats d'optimisation\n   * @param {Object} optimizationResults - Résultats de l'optimisation\n   * @param {Object} dataManager - Instance du DataManager\n   * @returns {Array} Liste d'objets PGM\n   */\n  generatePgmObjects: function generatePgmObjects(optimizationResults, dataManager) {\n    var _this = this;\n    console.log('🔧 Génération des objets PGM...');\n    var pgmObjects = [];\n    var modelResults = optimizationResults.modelResults || {};\n\n    // NOUVEAU: Créer un système de réservation des barres par modèle\n    var reservationSystem = this.createReservationSystem(dataManager, modelResults);\n\n    // Pour chaque modèle (profil + orientation)\n    var _loop = function _loop() {\n      var modelResult = modelResults[modelKey];\n      var layouts = modelResult.layouts || [];\n\n      // Extraire le profil et l'orientation du modèle\n      var _this$parseModelKey = _this.parseModelKey(modelKey),\n        profile = _this$parseModelKey.profile,\n        orientation = _this$parseModelKey.orientation;\n      console.log(\"  \\uD83D\\uDCCB Traitement du mod\\xE8le: \".concat(profile, \" (\").concat(orientation, \")\"));\n\n      // Pour chaque schéma de coupe (layout)\n      layouts.forEach(function (layout, layoutIndex) {\n        var count = layout.count || 1;\n\n        // Créer autant d'objets PGM que de barres de ce layout\n        for (var i = 0; i < count; i++) {\n          var pgmObject = _this.createPgmObjectWithReservation(profile, orientation, layout, layoutIndex, i, dataManager, reservationSystem);\n          if (pgmObject) {\n            pgmObjects.push(pgmObject);\n          }\n        }\n      });\n    };\n    for (var modelKey in modelResults) {\n      _loop();\n    }\n\n    // Afficher un rapport de réservation\n    this.reportReservationStatus(reservationSystem);\n    console.log(\"\\u2705 \".concat(pgmObjects.length, \" objets PGM g\\xE9n\\xE9r\\xE9s\"));\n    return pgmObjects;\n  },\n  /**\n   * NOUVEAU: Crée un système de réservation des barres\n   * @param {Object} dataManager - Instance du DataManager\n   * @param {Object} modelResults - Résultats par modèle\n   * @returns {Object} Système de réservation\n   */\n  createReservationSystem: function createReservationSystem(dataManager, modelResults) {\n    var _this2 = this;\n    var data = dataManager.getData();\n    var reservationSystem = {};\n\n    // Pour chaque modèle, créer un pool de barres disponibles\n    var _loop2 = function _loop2() {\n      var _this2$parseModelKey = _this2.parseModelKey(modelKey),\n        profile = _this2$parseModelKey.profile,\n        orientation = _this2$parseModelKey.orientation;\n\n      // Récupérer toutes les pièces du profil correspondant\n      var availablePieces = data.pieces[profile] || [];\n\n      // Filtrer par orientation et créer des pools par longueur\n      var piecePoolsByLength = new Map();\n      availablePieces.forEach(function (piece) {\n        var pieceOrientation = piece.orientation || 'undefined';\n        if (pieceOrientation === orientation) {\n          var length = piece.length;\n          if (!piecePoolsByLength.has(length)) {\n            piecePoolsByLength.set(length, []);\n          }\n\n          // Créer autant d'instances que la quantité de la pièce\n          for (var i = 0; i < piece.quantity; i++) {\n            piecePoolsByLength.get(length).push(_objectSpread(_objectSpread({}, piece), {}, {\n              instanceId: \"\".concat(piece.id, \"_\").concat(i),\n              originalPieceId: piece.id,\n              reserved: false,\n              usedInPgm: null\n            }));\n          }\n        }\n      });\n      reservationSystem[modelKey] = {\n        profile: profile,\n        orientation: orientation,\n        piecePoolsByLength: piecePoolsByLength\n      };\n      console.log(\"    \\uD83C\\uDFEA Pool cr\\xE9\\xE9 pour \".concat(modelKey, \":\"));\n      var _iterator = _createForOfIteratorHelper(piecePoolsByLength.entries()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            length = _step$value[0],\n            instances = _step$value[1];\n          console.log(\"      \\uD83D\\uDCCF \".concat(length, \"cm: \").concat(instances.length, \" instances disponibles\"));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    };\n    for (var modelKey in modelResults) {\n      _loop2();\n    }\n    return reservationSystem;\n  },\n  /**\n   * NOUVEAU: Crée un objet PGM avec système de réservation\n   * @param {string} profile - Profil de la barre\n   * @param {string} orientation - Orientation des pièces\n   * @param {Object} layout - Layout/schéma de coupe\n   * @param {number} layoutIndex - Index du layout\n   * @param {number} barIndex - Index de la barre dans ce layout\n   * @param {Object} dataManager - Instance du DataManager\n   * @param {Object} reservationSystem - Système de réservation\n   * @returns {Object|null} Objet PGM ou null si erreur\n   */\n  createPgmObjectWithReservation: function createPgmObjectWithReservation(profile, orientation, layout, layoutIndex, barIndex, dataManager, reservationSystem) {\n    try {\n      // CORRECTION: Récupérer les dimensions correctement\n      var motherBarLength = layout.originalLength || layout.barLength || 0;\n      var waste = Math.max(0, layout.remainingLength || layout.waste || 0);\n\n      // Récupérer les coupes de ce layout\n      var cuts = layout.cuts || layout.pieces || [];\n\n      // CORRECTION: Vérifier la cohérence des données\n      var totalCutsLength = cuts.reduce(function (sum, cut) {\n        return sum + cut;\n      }, 0);\n      var calculatedWaste = motherBarLength - totalCutsLength;\n\n      // Utiliser la chute calculée si elle est cohérente\n      var finalWaste = Math.abs(calculatedWaste - waste) < 1 ? calculatedWaste : waste;\n\n      // Assigner les références des barres à découper aux coupes avec réservation\n      var modelKey = \"\".concat(profile, \"_\").concat(orientation);\n      var pieceReferences = this.assignPieceReferencesWithReservation(cuts, modelKey, reservationSystem, \"\".concat(layoutIndex, \"_\").concat(barIndex));\n      if (!pieceReferences || pieceReferences.length === 0) {\n        console.warn(\"    \\u26A0\\uFE0F Impossible d'assigner les pi\\xE8ces pour PGM \".concat(layoutIndex, \"_\").concat(barIndex));\n        return null;\n      }\n\n      // CORRECTION: Calcul d'efficacité correct\n      var efficiency = this.calculateEfficiency(motherBarLength, finalWaste);\n\n      // Créer l'objet PGM\n      var pgmObject = {\n        // Identifiant unique\n        id: \"\".concat(profile, \"_\").concat(orientation, \"_\").concat(layoutIndex, \"_\").concat(barIndex, \"_\").concat(Date.now()),\n        // Informations de la barre mère\n        motherBar: {\n          profile: profile,\n          orientation: orientation,\n          length: motherBarLength,\n          waste: finalWaste\n        },\n        // Liste des pièces à découper avec leurs références\n        pieces: pieceReferences,\n        // Métadonnées\n        metadata: {\n          layoutIndex: layoutIndex,\n          barIndex: barIndex,\n          layoutCount: layout.count || 1,\n          totalPieces: cuts.length,\n          efficiency: efficiency\n        }\n      };\n      console.log(\"    \\uD83D\\uDD39 PGM cr\\xE9\\xE9: \".concat(cuts.length, \" pi\\xE8ces, efficacit\\xE9 \").concat(efficiency, \"%\"));\n      return pgmObject;\n    } catch (error) {\n      console.error(\"\\u274C Erreur lors de la cr\\xE9ation de l'objet PGM:\", error);\n      return null;\n    }\n  },\n  /**\n   * NOUVEAU: Assigne les références des barres à découper avec système de réservation\n   * @param {Array} cuts - Liste des longueurs des coupes\n   * @param {string} modelKey - Clé du modèle\n   * @param {Object} reservationSystem - Système de réservation\n   * @param {string} pgmId - Identifiant du PGM pour le tracking\n   * @returns {Array} Liste des références de pièces\n   */\n  assignPieceReferencesWithReservation: function assignPieceReferencesWithReservation(cuts, modelKey, reservationSystem, pgmId) {\n    console.log(\"    \\uD83D\\uDD0D Attribution avec r\\xE9servation pour \".concat(cuts.length, \" coupes (PGM \").concat(pgmId, \")\"));\n    var pieceReferences = [];\n    var modelReservation = reservationSystem[modelKey];\n    if (!modelReservation) {\n      console.error(\"    \\u274C Pas de syst\\xE8me de r\\xE9servation pour \".concat(modelKey));\n      return [];\n    }\n\n    // Assigner chaque coupe à une instance de pièce disponible\n    cuts.forEach(function (cutLength, index) {\n      var availableInstances = modelReservation.piecePoolsByLength.get(cutLength);\n      if (!availableInstances || availableInstances.length === 0) {\n        console.error(\"    \\u274C Pas d'instances disponibles pour \".concat(cutLength, \"cm\"));\n        return;\n      }\n\n      // Trouver la première instance non réservée\n      var availableInstance = availableInstances.find(function (instance) {\n        return !instance.reserved;\n      });\n      if (!availableInstance) {\n        console.error(\"    \\u274C Toutes les instances de \".concat(cutLength, \"cm sont d\\xE9j\\xE0 r\\xE9serv\\xE9es\"));\n        return;\n      }\n\n      // Réserver cette instance\n      availableInstance.reserved = true;\n      availableInstance.usedInPgm = pgmId;\n\n      // Créer la référence de pièce\n      pieceReferences.push({\n        cutIndex: index,\n        length: cutLength,\n        pieceReference: {\n          id: availableInstance.originalPieceId,\n          instanceId: availableInstance.instanceId,\n          nom: availableInstance.nom,\n          profile: availableInstance.profile,\n          orientation: availableInstance.orientation,\n          angles: availableInstance.angles || {\n            1: 90,\n            2: 90\n          },\n          f4cData: availableInstance.f4cData || {},\n          quantity: 1,\n          // Chaque instance représente une seule pièce\n          originalQuantity: availableInstance.quantity\n        }\n      });\n      console.log(\"      \\u2713 Coupe \".concat(index + 1, \": \").concat(cutLength, \"cm \\u2192 \").concat(availableInstance.instanceId, \" (\").concat(availableInstance.nom || availableInstance.originalPieceId, \")\"));\n    });\n    return pieceReferences;\n  },\n  /**\n   * NOUVEAU: Génère un rapport du statut des réservations\n   * @param {Object} reservationSystem - Système de réservation\n   */\n  reportReservationStatus: function reportReservationStatus(reservationSystem) {\n    console.log(\"\\uD83D\\uDCCA Rapport de r\\xE9servation des barres:\");\n    for (var _i = 0, _Object$entries = Object.entries(reservationSystem); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        modelKey = _Object$entries$_i[0],\n        modelReservation = _Object$entries$_i[1];\n      console.log(\"  \\uD83D\\uDCCB Mod\\xE8le \".concat(modelKey, \":\"));\n      var totalInstances = 0;\n      var reservedInstances = 0;\n      var _iterator2 = _createForOfIteratorHelper(modelReservation.piecePoolsByLength.entries()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            length = _step2$value[0],\n            instances = _step2$value[1];\n          var reserved = instances.filter(function (i) {\n            return i.reserved;\n          }).length;\n          var available = instances.length - reserved;\n          totalInstances += instances.length;\n          reservedInstances += reserved;\n          console.log(\"    \\uD83D\\uDCCF \".concat(length, \"cm: \").concat(reserved, \"/\").concat(instances.length, \" utilis\\xE9es (\").concat(available, \" restantes)\"));\n          if (available > 0) {\n            console.log(\"      \\u26A0\\uFE0F \".concat(available, \" pi\\xE8ces de \").concat(length, \"cm non utilis\\xE9es\"));\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var utilizationRate = totalInstances > 0 ? (reservedInstances / totalInstances * 100).toFixed(1) : 0;\n      console.log(\"    \\uD83D\\uDCC8 Taux d'utilisation: \".concat(utilizationRate, \"% (\").concat(reservedInstances, \"/\").concat(totalInstances, \")\"));\n    }\n  },\n  /**\n   * Analyse la clé de modèle pour extraire le profil et l'orientation\n   * @param {string} modelKey - Clé du modèle (ex: \"HEA100_a-plat\")\n   * @returns {Object} Profil et orientation\n   */\n  parseModelKey: function parseModelKey(modelKey) {\n    var parts = modelKey.split('_');\n    var profile = parts[0];\n    var orientation = parts[1] || 'undefined';\n    return {\n      profile: profile,\n      orientation: orientation\n    };\n  },\n  /**\n   * CORRECTION: Calcule l'efficacité d'une barre mère correctement\n   * @param {number} totalLength - Longueur totale de la barre\n   * @param {number} waste - Longueur de chute\n   * @returns {number} Efficacité en pourcentage\n   */\n  calculateEfficiency: function calculateEfficiency(totalLength, waste) {\n    if (totalLength <= 0) return 0;\n\n    // CORRECTION: S'assurer que waste n'est jamais négatif\n    var actualWaste = Math.max(0, waste);\n    var usedLength = totalLength - actualWaste;\n\n    // CORRECTION: S'assurer que l'efficacité ne dépasse jamais 100%\n    var efficiency = Math.min(100, Math.round(usedLength / totalLength * 100));\n    return efficiency;\n  },\n  /**\n   * Groupe les objets PGM par profil et orientation\n   * @param {Array} pgmObjects - Liste des objets PGM\n   * @returns {Object} Objets PGM groupés\n   */\n  groupPgmObjectsByModel: function groupPgmObjectsByModel(pgmObjects) {\n    var grouped = {};\n    pgmObjects.forEach(function (pgm) {\n      var modelKey = \"\".concat(pgm.motherBar.profile, \"_\").concat(pgm.motherBar.orientation);\n      if (!grouped[modelKey]) {\n        grouped[modelKey] = {\n          profile: pgm.motherBar.profile,\n          orientation: pgm.motherBar.orientation,\n          pgmObjects: []\n        };\n      }\n      grouped[modelKey].pgmObjects.push(pgm);\n    });\n    return grouped;\n  },\n  /**\n   * CORRECTION: Génère un rapport de synthèse avec calculs corrects\n   * @param {Array} pgmObjects - Liste des objets PGM\n   * @returns {Object} Rapport de synthèse\n   */\n  generateSummaryReport: function generateSummaryReport(pgmObjects) {\n    var report = {\n      totalPgmObjects: pgmObjects.length,\n      totalPieces: 0,\n      totalMotherBarLength: 0,\n      totalWaste: 0,\n      averageEfficiency: 0,\n      profileBreakdown: {},\n      orientationBreakdown: {}\n    };\n    var totalEfficiency = 0;\n    pgmObjects.forEach(function (pgm) {\n      // Compter les pièces\n      report.totalPieces += pgm.pieces.length;\n\n      // Additionner les longueurs et chutes avec vérification\n      var motherBarLength = pgm.motherBar.length || 0;\n      var waste = Math.max(0, pgm.motherBar.waste || 0);\n      report.totalMotherBarLength += motherBarLength;\n      report.totalWaste += waste;\n\n      // Additionner l'efficacité\n      totalEfficiency += pgm.metadata.efficiency;\n\n      // Compter par profil\n      var profile = pgm.motherBar.profile;\n      if (!report.profileBreakdown[profile]) {\n        report.profileBreakdown[profile] = 0;\n      }\n      report.profileBreakdown[profile]++;\n\n      // Compter par orientation\n      var orientation = pgm.motherBar.orientation;\n      if (!report.orientationBreakdown[orientation]) {\n        report.orientationBreakdown[orientation] = 0;\n      }\n      report.orientationBreakdown[orientation]++;\n    });\n\n    // Calculer l'efficacité moyenne\n    if (pgmObjects.length > 0) {\n      report.averageEfficiency = Math.round(totalEfficiency / pgmObjects.length);\n    }\n\n    // CORRECTION: Vérification de cohérence\n    console.log(\"\\uD83D\\uDCCA Rapport de synth\\xE8se PGM:\");\n    console.log(\"  \\u2022 Total barres: \".concat(report.totalPgmObjects));\n    console.log(\"  \\u2022 Total pi\\xE8ces: \".concat(report.totalPieces));\n    console.log(\"  \\u2022 Longueur totale: \".concat(report.totalMotherBarLength, \"cm\"));\n    console.log(\"  \\u2022 Chutes totales: \".concat(report.totalWaste, \"cm\"));\n    console.log(\"  \\u2022 Efficacit\\xE9 moyenne: \".concat(report.averageEfficiency, \"%\"));\n    return report;\n  }\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/pgm-manager.js?");

/***/ }),

/***/ "./src/js/results-renderer.js":
/*!************************************!*\
  !*** ./src/js/results-renderer.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResultsRenderer: () => (/* binding */ ResultsRenderer)\n/* harmony export */ });\n/**\n * ResultsRenderer - Handles rendering of algorithm results in the UI\n */\nvar ResultsRenderer = {\n  /**\n   * Format model key to user-friendly display name\n   */\n  formatModelName: function formatModelName(modelKey) {\n    var parts = modelKey.split('_');\n    var profile = parts[0];\n    var orientation = parts[1];\n    var orientationText = '';\n    switch (orientation) {\n      case 'a-plat':\n        orientationText = 'À plat';\n        break;\n      case 'debout':\n        orientationText = 'Debout';\n        break;\n      case 'undefined':\n        orientationText = 'Non définie';\n        break;\n      default:\n        orientationText = orientation;\n    }\n    return \"\".concat(profile, \" - \").concat(orientationText);\n  },\n  /**\n   * NOUVEAU: Formate une longueur en centimètres vers mètres avec décimales intelligentes\n   */\n  formatLengthInMeters: function formatLengthInMeters(lengthInCm) {\n    var meters = lengthInCm / 100;\n\n    // Si c'est un nombre entier, pas de décimales\n    if (meters % 1 === 0) {\n      return \"\".concat(meters, \"m\");\n    }\n\n    // Sinon, formatage avec jusqu'à 3 décimales en supprimant les zéros inutiles\n    var formatted = meters.toFixed(3);\n    var cleanFormatted = parseFloat(formatted).toString();\n    return \"\".concat(cleanFormatted, \"m\");\n  },\n  /**\n   * NOUVEAU: Calcule la largeur minimum nécessaire pour afficher du texte\n   */\n  shouldShowTextInPiece: function shouldShowTextInPiece(percentage, text) {\n    // Estimation grossière : il faut au moins 30px pour afficher du texte lisible\n    // Si la largeur représentée est inférieure à 8%, on n'affiche pas le texte\n    return percentage >= 8 && text.toString().length <= 4;\n  },\n  /**\n   * Render algorithm results to the container\n   */\n  renderResults: function renderResults(results, algorithmService, container) {\n    if (!container) {\n      container = document.getElementById('results-container');\n    }\n    if (!results) {\n      this.renderErrorMessage(container, \"Impossible de calculer les résultats\", \"L'algorithme n'a pas pu trouver de solution avec les données fournies.\");\n      return;\n    }\n\n    // Calculate global statistics\n    var globalStats = algorithmService.calculateGlobalStats(results);\n\n    // Build HTML for results\n    var html = this.renderGlobalSummary(results, globalStats);\n    html += this.renderModelDetails(results, algorithmService);\n\n    // Update container\n    container.innerHTML = html;\n  },\n  /**\n   * Render error message\n   */\n  renderErrorMessage: function renderErrorMessage(container, title, message) {\n    container.innerHTML = \"\\n      <div class=\\\"error-message\\\">\\n        <h3>\".concat(title, \"</h3>\\n        <p>\").concat(message, \"</p>\\n      </div>\\n    \");\n  },\n  /**\n   * Render global statistics summary\n   */\n  renderGlobalSummary: function renderGlobalSummary(results, stats) {\n    var html = \"\\n      <div class=\\\"results-summary\\\">\\n        <h3>R\\xE9sum\\xE9 global</h3>\\n    \";\n\n    // Add discrete algorithm information if available\n    if (results.comparison) {\n      html += this.renderAlgorithmInfo(results.comparison, results.bestAlgorithm);\n    }\n    html += \"\\n        <div class=\\\"stats-grid\\\">\\n          <div class=\\\"stat-card\\\">\\n            <div class=\\\"stat-label\\\">Barres m\\xE8res utilis\\xE9es</div>\\n            <div class=\\\"stat-value\\\">\".concat(stats.totalUsedBars, \"</div>\\n          </div>\\n          <div class=\\\"stat-card\\\">\\n            <div class=\\\"stat-label\\\">Longueur totale barres m\\xE8res</div>\\n            <div class=\\\"stat-value\\\">\").concat(this.formatLengthInMeters(stats.totalBarLength), \"</div>\\n          </div>\\n          <div class=\\\"stat-card\\\">\\n            <div class=\\\"stat-label\\\">Chutes (total)</div>\\n            <div class=\\\"stat-value\\\">\").concat(Math.round(stats.totalWaste), \" cm</div>\\n          </div>\\n          <div class=\\\"stat-card efficiency-card\\\">\\n            <div class=\\\"stat-label\\\">Efficacit\\xE9</div>\\n            <div class=\\\"stat-value\\\">\").concat(stats.totalEfficiency, \"%</div>\\n          </div>\\n        </div>\\n      </div>\\n    \");\n    return html;\n  },\n  /**\n   * Render discrete algorithm information (3 lines)\n   */\n  renderAlgorithmInfo: function renderAlgorithmInfo(comparison, bestAlgorithm) {\n    var algorithmName = bestAlgorithm === 'ffd' ? 'First-Fit Decreasing' : 'Programmation Linéaire';\n    return \"\\n      <div class=\\\"algorithm-info\\\">\\n        <p class=\\\"algorithm-used\\\">Algorithme utilis\\xE9 : <strong>\".concat(algorithmName, \"</strong></p>\\n        <p class=\\\"algorithm-comparison\\\">\\n          FFD : \").concat(comparison.ffdEfficiency, \"% | ILP : \").concat(comparison.ilpEfficiency, \"%\\n        </p>\\n      </div>\\n    \");\n  },\n  /**\n   * Render model details sections\n   */\n  renderModelDetails: function renderModelDetails(results, algorithmService) {\n    var modelResults = results.modelResults || {};\n    var html = \"\\n      <h3 class=\\\"mb-3\\\">D\\xE9tails par mod\\xE8le</h3>\\n      <div class=\\\"model-results\\\">\\n    \";\n\n    // Add each model's results\n    for (var model in modelResults) {\n      var modelResult = modelResults[model];\n      var modelStats = algorithmService.calculateModelStats(modelResult);\n      html += this.renderModelCard(model, modelResult, modelStats, algorithmService);\n    }\n    html += \"</div>\";\n    return html;\n  },\n  /**\n   * Render a single model card\n   */\n  renderModelCard: function renderModelCard(modelName, modelResult, stats, algorithmService) {\n    var _this = this;\n    // Format the model name for display\n    var displayName = this.formatModelName(modelName);\n    var html = \"\\n      <div class=\\\"model-card\\\">\\n        <div class=\\\"model-header\\\">\\n          <h3>\".concat(displayName, \"</h3>\\n        </div>\\n        <div class=\\\"model-content\\\">\\n          <div class=\\\"model-stats\\\">\\n            <div class=\\\"model-stat\\\">\\n              <div class=\\\"stat-label\\\">Barres m\\xE8res</div>\\n              <div class=\\\"stat-value\\\">\").concat(stats.barCount, \"</div>\\n            </div>\\n            <div class=\\\"model-stat\\\">\\n              <div class=\\\"stat-label\\\">Longueur totale</div>\\n              <div class=\\\"stat-value\\\">\").concat(this.formatLengthInMeters(stats.totalLength), \"</div>\\n            </div>\\n            <div class=\\\"model-stat\\\">\\n              <div class=\\\"stat-label\\\">Chutes</div>\\n              <div class=\\\"stat-value\\\">\").concat(Math.round(stats.wasteLength), \" cm</div>\\n            </div>\\n            <div class=\\\"model-stat\\\">\\n              <div class=\\\"stat-label\\\">Efficacit\\xE9</div>\\n              <div class=\\\"efficiency-tag\\\">\").concat(stats.efficiency, \"%</div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"cut-schemes\\\">\\n            <h4 class=\\\"mb-2\\\">Sch\\xE9mas de coupe</h4>\\n    \");\n\n    // Add each cutting pattern\n    modelResult.layouts.forEach(function (layout, index) {\n      var processedPattern = algorithmService.processPattern(layout);\n      html += _this.renderCutScheme(processedPattern, index);\n    });\n    html += \"\\n          </div>\\n        </div>\\n      </div>\\n    \";\n    return html;\n  },\n  /**\n   * Render a single cut scheme\n   */\n  renderCutScheme: function renderCutScheme(pattern, index) {\n    var _this2 = this;\n    // Generate the text representation of cuts\n    var cutsHtml = '';\n    pattern.cuts.forEach(function (cut) {\n      cutsHtml += \"<span class=\\\"cut-count\\\">\".concat(cut.count, \"\\xD7</span>\").concat(cut.length, \" cm \");\n    });\n\n    // Generate visual representation of the cuts\n    var visualBarHtml = '';\n    pattern.visualPieces.forEach(function (piece, pieceIndex) {\n      var lastPieceClass = piece.isLast ? 'last-piece' : '';\n      var showText = _this2.shouldShowTextInPiece(piece.percentage, piece.length);\n      visualBarHtml += \"\\n        <div class=\\\"cut-piece \".concat(lastPieceClass, \"\\\" \\n             style=\\\"width: \").concat(piece.percentage, \"%\\\" \\n             title=\\\"\").concat(piece.length, \" cm\\\">\\n          \").concat(showText ? piece.length : '', \"\\n        </div>\\n      \");\n    });\n\n    // Add waste piece if any\n    if (pattern.waste > 0) {\n      var showWasteText = this.shouldShowTextInPiece(pattern.wastePercentage, pattern.waste);\n      visualBarHtml += \"\\n        <div class=\\\"waste-piece\\\" \\n             style=\\\"width: \".concat(pattern.wastePercentage, \"%\\\" \\n             title=\\\"Chute: \").concat(pattern.waste, \" cm\\\">\\n          \").concat(showWasteText ? pattern.waste : '', \"\\n        </div>\\n      \");\n    }\n    return \"\\n      <div class=\\\"cut-scheme\\\">\\n        <div class=\\\"cut-scheme-header\\\">\\n          <strong>\".concat(pattern.count, \"\\xD7 Sch\\xE9ma #\").concat(index + 1, \"</strong>\\n          <span>Barre m\\xE8re <span class=\\\"bar-length-badge\\\">\").concat(this.formatLengthInMeters(pattern.barLength), \"</span></span>\\n        </div>\\n        <div class=\\\"cut-pieces\\\">\\n          Pi\\xE8ces: \").concat(cutsHtml, \"\\n        </div>\\n        <div class=\\\"waste\\\">\\n          Chute: <span class=\\\"waste-value\\\">\").concat(pattern.waste, \" cm</span>\\n        </div>\\n        <div class=\\\"cut-bar\\\">\\n          \").concat(visualBarHtml, \"\\n        </div>\\n      </div>\\n    \");\n  }\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/results-renderer.js?");

/***/ }),

/***/ "./src/js/ui-controller.js":
/*!*********************************!*\
  !*** ./src/js/ui-controller.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UIController: () => (/* binding */ UIController)\n/* harmony export */ });\n/* harmony import */ var _data_manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data-manager.js */ \"./src/js/data-manager.js\");\n/* harmony import */ var _algorithm_service_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./algorithm-service.js */ \"./src/js/algorithm-service.js\");\n/* harmony import */ var _import_manager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./import-manager.js */ \"./src/js/import-manager.js\");\n/* harmony import */ var _pgm_generator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pgm-generator.js */ \"./src/js/pgm-generator.js\");\n/* harmony import */ var _pgm_manager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pgm-manager.js */ \"./src/js/pgm-manager.js\");\n/* harmony import */ var _results_renderer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./results-renderer.js */ \"./src/js/results-renderer.js\");\n/* harmony import */ var _ui_import_handler_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ui/import-handler.js */ \"./src/js/ui/import-handler.js\");\n/* harmony import */ var _ui_edit_handler_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ui/edit-handler.js */ \"./src/js/ui/edit-handler.js\");\n/* harmony import */ var _ui_results_handler_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ui/results-handler.js */ \"./src/js/ui/results-handler.js\");\n/* harmony import */ var _ui_notification_service_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ui/notification-service.js */ \"./src/js/ui/notification-service.js\");\n/* harmony import */ var _ui_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ui/utils.js */ \"./src/js/ui/utils.js\");\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\n\n\n\n\n\n// Importer les gestionnaires UI\n\n\n\n\n\n\n/**\n * Contrôleur d'interface utilisateur principal\n * Coordonne les différentes sections et services\n */\nvar UIController = {\n  // Services et gestionnaires\n  dataManager: null,\n  algorithmService: null,\n  importManager: null,\n  pgmGenerator: null,\n  pgmManager: null,\n  // Gestionnaires UI\n  importHandler: null,\n  editHandler: null,\n  resultsHandler: null,\n  notificationService: null,\n  // État de l'application\n  currentResults: null,\n  currentPgmObjects: null,\n  /**\n   * Initialise le contrôleur et tous les services\n   */\n  init: function () {\n    var _init = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var _t;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            _context.p = 0;\n            console.log('🚀 Initialisation de l\\'application...');\n\n            // Initialiser les services principaux\n            this.initializeServices();\n\n            // Initialiser les gestionnaires UI\n            _context.n = 1;\n            return this.initializeUIHandlers();\n          case 1:\n            // Configurer les gestionnaires d'événements\n            this.setupEventListeners();\n            console.log('✅ Application initialisée avec succès');\n            _context.n = 3;\n            break;\n          case 2:\n            _context.p = 2;\n            _t = _context.v;\n            console.error('❌ Erreur lors de l\\'initialisation:', _t);\n            this.showNotification('Erreur lors de l\\'initialisation de l\\'application', 'error');\n          case 3:\n            return _context.a(2);\n        }\n      }, _callee, this, [[0, 2]]);\n    }));\n    function init() {\n      return _init.apply(this, arguments);\n    }\n    return init;\n  }(),\n  /**\n   * Initialise les services principaux\n   */\n  initializeServices: function initializeServices() {\n    // Initialiser le service de notification en premier\n    this.notificationService = _ui_notification_service_js__WEBPACK_IMPORTED_MODULE_9__.NotificationService;\n    this.notificationService.init();\n\n    // Initialiser les autres services\n    this.dataManager = _data_manager_js__WEBPACK_IMPORTED_MODULE_0__.DataManager;\n    this.algorithmService = _algorithm_service_js__WEBPACK_IMPORTED_MODULE_1__.AlgorithmService;\n    this.importManager = _import_manager_js__WEBPACK_IMPORTED_MODULE_2__.ImportManager;\n    this.pgmGenerator = _pgm_generator_js__WEBPACK_IMPORTED_MODULE_3__.PgmGenerator;\n    this.pgmManager = _pgm_manager_js__WEBPACK_IMPORTED_MODULE_4__.PgmManager;\n    console.log('📋 Services principaux initialisés');\n  },\n  /**\n   * Initialise les gestionnaires d'interface utilisateur\n   */\n  initializeUIHandlers: function () {\n    var _initializeUIHandlers = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n      var _this = this;\n      var _t2;\n      return _regenerator().w(function (_context2) {\n        while (1) switch (_context2.n) {\n          case 0:\n            _context2.p = 0;\n            // Initialiser les gestionnaires avec leurs dépendances\n            this.importHandler = _ui_import_handler_js__WEBPACK_IMPORTED_MODULE_6__.ImportHandler;\n            this.importHandler.init({\n              importManager: this.importManager,\n              dataManager: this.dataManager,\n              showNotification: function showNotification(msg, type) {\n                return _this.showNotification(msg, type);\n              },\n              refreshDataDisplay: function refreshDataDisplay() {\n                return _this.refreshDataDisplay();\n              }\n            });\n            this.editHandler = _ui_edit_handler_js__WEBPACK_IMPORTED_MODULE_7__.EditHandler;\n            this.editHandler.init({\n              dataManager: this.dataManager,\n              showNotification: function showNotification(msg, type) {\n                return _this.showNotification(msg, type);\n              },\n              refreshDataDisplay: function refreshDataDisplay() {\n                return _this.refreshDataDisplay();\n              }\n            });\n            this.resultsHandler = _ui_results_handler_js__WEBPACK_IMPORTED_MODULE_8__.ResultsHandler;\n            this.resultsHandler.init({\n              pgmGenerator: this.pgmGenerator,\n              dataManager: this.dataManager,\n              uiController: this,\n              showNotification: function showNotification(msg, type) {\n                return _this.showNotification(msg, type);\n              }\n            });\n\n            // Rendre les sections d'édition après initialisation\n            this.editHandler.renderSection();\n            console.log('🎨 Gestionnaires UI initialisés');\n            _context2.n = 2;\n            break;\n          case 1:\n            _context2.p = 1;\n            _t2 = _context2.v;\n            console.error('❌ Erreur lors de l\\'initialisation des gestionnaires UI:', _t2);\n            throw _t2;\n          case 2:\n            return _context2.a(2);\n        }\n      }, _callee2, this, [[0, 1]]);\n    }));\n    function initializeUIHandlers() {\n      return _initializeUIHandlers.apply(this, arguments);\n    }\n    return initializeUIHandlers;\n  }(),\n  /**\n   * Configure tous les gestionnaires d'événements\n   */\n  setupEventListeners: function setupEventListeners() {\n    var _this2 = this;\n    try {\n      console.log('Configuration des gestionnaires d\\'événements...');\n\n      // Configurer le bouton d'optimisation\n      var setupOptimizeButton = function setupOptimizeButton() {\n        var optimizeBtn = document.getElementById('generate-cuts-btn');\n        if (optimizeBtn) {\n          optimizeBtn.addEventListener('click', function () {\n            _this2.runOptimization();\n          });\n        }\n      };\n\n      // Configurer les boutons\n      setupOptimizeButton();\n\n      // Configuration du bouton \"Éditer les Données\"\n      this.setupEditDataButton();\n      console.log('Gestionnaires d\\'événements configurés');\n    } catch (error) {\n      console.error('Erreur lors de la configuration des événements:', error);\n    }\n  },\n  /**\n   * Configure le bouton \"Éditer les Données\"\n   */\n  setupEditDataButton: function setupEditDataButton() {\n    var _this3 = this;\n    var editDataBtn = document.querySelector('.btn-edit-data');\n    if (editDataBtn) {\n      editDataBtn.addEventListener('click', function () {\n        _this3.showSection('data-section');\n      });\n    }\n  },\n  /**\n   * Affiche une section spécifique\n   */\n  showSection: function showSection(sectionName) {\n    // Cacher toutes les sections\n    var sections = document.querySelectorAll('.content-section');\n    sections.forEach(function (section) {\n      section.classList.remove('active');\n    });\n\n    // Afficher la section demandée\n    var targetSection = document.getElementById(sectionName);\n    if (targetSection) {\n      targetSection.classList.add('active');\n    }\n\n    // Gérer l'affichage de la navigation\n    var resultsNav = document.getElementById('results-nav');\n    if (sectionName === 'result-section') {\n      // Afficher le bouton \"Éditer les Données\" sur la page résultats\n      if (resultsNav) {\n        resultsNav.style.display = 'flex';\n      }\n    } else {\n      // Cacher la navigation sur la page données\n      if (resultsNav) {\n        resultsNav.style.display = 'none';\n      }\n    }\n  },\n  /**\n   * Lance l'optimisation des découpes\n   */\n  runOptimization: function () {\n    var _runOptimization = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n      var data, results, summaryReport, _t3;\n      return _regenerator().w(function (_context3) {\n        while (1) switch (_context3.n) {\n          case 0:\n            _context3.p = 0;\n            // Vérifier qu'il y a des données\n            data = this.dataManager.getData();\n            if (this.validateDataForOptimization(data)) {\n              _context3.n = 1;\n              break;\n            }\n            return _context3.a(2);\n          case 1:\n            _ui_utils_js__WEBPACK_IMPORTED_MODULE_10__.UIUtils.showLoadingOverlay();\n\n            // Lancer l'algorithme (compare automatiquement FFD et ILP)\n            console.log('Lancement de l\\'optimisation...');\n            results = this.algorithmService.runAlgorithm('compare', data);\n            if (results) {\n              _context3.n = 2;\n              break;\n            }\n            throw new Error('Aucun résultat retourné par l\\'algorithme');\n          case 2:\n            // Stocker les résultats\n            this.currentResults = results;\n\n            // Générer les objets PGM\n            console.log('Génération des objets PGM...');\n            this.currentPgmObjects = this.pgmManager.generatePgmObjects(results, this.dataManager);\n\n            // Afficher le rapport de synthèse des PGM\n            summaryReport = this.pgmManager.generateSummaryReport(this.currentPgmObjects);\n            console.log('Rapport PGM:', summaryReport);\n\n            // Rendre les résultats\n            _results_renderer_js__WEBPACK_IMPORTED_MODULE_5__.ResultsRenderer.renderResults(results, this.algorithmService);\n\n            // Générer les aperçus PGM\n            this.resultsHandler.generatePgmPreviews();\n\n            // Afficher les onglets de résultats\n            this.showResultsTabs();\n\n            // PAS de notification de succès - l'utilisateur voit les résultats\n            _context3.n = 4;\n            break;\n          case 3:\n            _context3.p = 3;\n            _t3 = _context3.v;\n            console.error('Erreur lors de l\\'optimisation:', _t3);\n            this.showNotification(\"Erreur: \".concat(_t3.message), 'error');\n            this.currentResults = null;\n            this.currentPgmObjects = null;\n          case 4:\n            _context3.p = 4;\n            _ui_utils_js__WEBPACK_IMPORTED_MODULE_10__.UIUtils.hideLoadingOverlay();\n            return _context3.f(4);\n          case 5:\n            return _context3.a(2);\n        }\n      }, _callee3, this, [[0, 3, 4, 5]]);\n    }));\n    function runOptimization() {\n      return _runOptimization.apply(this, arguments);\n    }\n    return runOptimization;\n  }(),\n  /**\n   * MODIFIÉ: Valide les données pour l'optimisation avec messages concis\n   */\n  validateDataForOptimization: function validateDataForOptimization(data) {\n    // Vérifier qu'il y a des pièces à découper\n    var totalPieces = 0;\n    for (var profile in data.pieces) {\n      var _iterator = _createForOfIteratorHelper(data.pieces[profile]),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var piece = _step.value;\n          totalPieces += piece.quantity;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    if (totalPieces === 0) {\n      this.showNotification('Aucune barre à découper importée', 'warning');\n      return false;\n    }\n\n    // Vérifier qu'il y a des barres mères\n    var totalMotherBars = 0;\n    for (var _profile in data.motherBars) {\n      var _iterator2 = _createForOfIteratorHelper(data.motherBars[_profile]),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var bar = _step2.value;\n          totalMotherBars += bar.quantity;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n    if (totalMotherBars === 0) {\n      this.showNotification('Aucune barre mère définie', 'warning');\n      return false;\n    }\n\n    // Vérification de cohérence simplifiée\n    var incompatibleProfiles = [];\n    for (var _profile2 in data.pieces) {\n      var pieces = data.pieces[_profile2];\n      var minPieceLength = Math.min.apply(Math, _toConsumableArray(pieces.map(function (p) {\n        return p.length;\n      })));\n      var motherBars = data.motherBars[_profile2];\n      if (!motherBars || motherBars.length === 0) {\n        incompatibleProfiles.push(_profile2);\n      } else {\n        var maxMotherBarLength = Math.max.apply(Math, _toConsumableArray(motherBars.map(function (b) {\n          return b.length;\n        })));\n        if (maxMotherBarLength < minPieceLength) {\n          incompatibleProfiles.push(_profile2);\n        }\n      }\n    }\n    if (incompatibleProfiles.length > 0) {\n      this.showNotification(\"Probl\\xE8me profil \".concat(incompatibleProfiles[0]), 'warning');\n      // Continuer quand même\n    }\n    return true;\n  },\n  /**\n   * Affiche les onglets de résultats\n   */\n  showResultsTabs: function showResultsTabs() {\n    // Basculer vers l'onglet résultats\n    this.showSection('result-section');\n  },\n  /**\n   * Rafraîchit l'affichage des données\n   */\n  refreshDataDisplay: function refreshDataDisplay() {\n    try {\n      var data = this.dataManager.getData();\n\n      // Mettre à jour les compteurs\n      this.updateDataCounters(data);\n\n      // Rafraîchir les tableaux si ils sont visibles\n      if (this.editHandler) {\n        this.editHandler.refreshTables();\n      }\n      console.log('🔄 Affichage des données rafraîchi');\n    } catch (error) {\n      console.error('❌ Erreur lors du rafraîchissement:', error);\n    }\n  },\n  /**\n   * Met à jour les compteurs de données\n   */\n  updateDataCounters: function updateDataCounters(data) {\n    try {\n      // Compter les pièces\n      var totalPieces = 0;\n      for (var profile in data.pieces) {\n        var _iterator3 = _createForOfIteratorHelper(data.pieces[profile]),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var piece = _step3.value;\n            totalPieces += piece.quantity;\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n\n      // Compter les barres mères\n      var totalMotherBars = 0;\n      for (var _profile3 in data.motherBars) {\n        var _iterator4 = _createForOfIteratorHelper(data.motherBars[_profile3]),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var bar = _step4.value;\n            totalMotherBars += bar.quantity;\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n\n      // Mettre à jour l'interface si les éléments existent\n      var piecesCounter = document.getElementById('pieces-counter');\n      if (piecesCounter) {\n        piecesCounter.textContent = totalPieces;\n      }\n      var motherBarsCounter = document.getElementById('mother-bars-counter');\n      if (motherBarsCounter) {\n        motherBarsCounter.textContent = totalMotherBars;\n      }\n    } catch (error) {\n      console.error('❌ Erreur lors de la mise à jour des compteurs:', error);\n    }\n  },\n  /**\n   * Affiche une notification\n   */\n  showNotification: function showNotification(message) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n    if (this.notificationService) {\n      this.notificationService.show(message, type);\n    } else {\n      console.log(\"\".concat(type.toUpperCase(), \": \").concat(message));\n    }\n  },\n  /**\n   * Récupère les objets PGM actuels\n   */\n  getCurrentPgmObjects: function getCurrentPgmObjects() {\n    return this.currentPgmObjects;\n  }\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/ui-controller.js?");

/***/ }),

/***/ "./src/js/ui/edit-handler.js":
/*!***********************************!*\
  !*** ./src/js/ui/edit-handler.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditHandler: () => (/* binding */ EditHandler)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Gestionnaire de la section d'édition\n */\nvar EditHandler = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n  // Dépendances\n  dataManager: null,\n  showNotification: null,\n  refreshDataDisplay: null,\n  // État interne\n  editingId: null,\n  editingType: null,\n  editingMode: null,\n  // 'edit' ou 'create'\n\n  // Options de verrouillage\n  lockOptions: {\n    lockPieceCreation: true,\n    // Empêche l'ajout de nouvelles barres filles\n    lockPieceAngles: true,\n    // Empêche la modification des angles\n    lockPieceLengths: true // Empêche la modification des longueurs\n  },\n  /**\n   * Initialise le handler d'édition\n   */\n  init: function init(options) {\n    this.dataManager = options.dataManager;\n    this.showNotification = options.showNotification;\n    this.refreshDataDisplay = options.refreshDataDisplay;\n\n    // Appliquer les options de verrouillage si fournies\n    if (options.lockOptions) {\n      this.lockOptions = _objectSpread(_objectSpread({}, this.lockOptions), options.lockOptions);\n    }\n\n    // Créer les panneaux latéraux s'ils n'existent pas\n    this.createPiecePanel();\n    this.createStockPanel();\n  },\n  /**\n   * NOUVEAU: Convertit des centimètres en mètres pour l'affichage\n   */\n  formatLengthForDisplay: function formatLengthForDisplay(lengthInCm) {\n    var meters = lengthInCm / 100;\n    // Afficher avec le minimum de décimales nécessaires, virgule comme séparateur\n    return meters % 1 === 0 ? meters.toString() : meters.toString().replace('.', ',');\n  },\n  /**\n   * NOUVEAU: Convertit une valeur en mètres (avec virgule ou point) vers des centimètres\n   */\n  parseLengthFromDisplay: function parseLengthFromDisplay(displayValue) {\n    if (!displayValue || displayValue.trim() === '') return null;\n\n    // Remplacer la virgule par un point pour la conversion\n    var normalizedValue = displayValue.replace(',', '.');\n    var meters = parseFloat(normalizedValue);\n    if (isNaN(meters) || meters <= 0) return null;\n\n    // Convertir en centimètres et arrondir\n    return Math.round(meters * 100);\n  },\n  /**\n   * NOUVEAU: Configure les gestionnaires d'événements pour les champs de longueur\n   */\n  setupLengthInputHandlers: function setupLengthInputHandlers(inputElement) {\n    var _this = this;\n    // Gérer la touche Entrée\n    inputElement.addEventListener('keydown', function (e) {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        _this.saveItem();\n      }\n    });\n\n    // Formatage automatique lors de la perte de focus seulement\n    inputElement.addEventListener('blur', function (e) {\n      var value = e.target.value.trim();\n      if (value !== '') {\n        var parsed = _this.parseLengthFromDisplay(value);\n        if (parsed !== null) {\n          e.target.value = _this.formatLengthForDisplay(parsed);\n        }\n      }\n    });\n  },\n  /**\n   * CORRECTION COMPLÈTE: Configure les gestionnaires pour tous les champs du formulaire\n   */\n  setupFormKeyHandlers: function setupFormKeyHandlers() {\n    var _this2 = this;\n    // Supprimer tous les anciens gestionnaires pour éviter les doublons\n    var form = document.querySelector('.panel-form');\n    if (!form) return;\n\n    // Créer un gestionnaire unique pour toute la fenêtre quand un panneau est ouvert\n    var globalKeyHandler = function globalKeyHandler(e) {\n      if (e.key === 'Enter') {\n        // Vérifier qu'un panneau est ouvert\n        var piecePanel = document.getElementById('piece-panel');\n        var stockPanel = document.getElementById('stock-panel');\n        var isPanelOpen = piecePanel && piecePanel.classList.contains('visible') || stockPanel && stockPanel.classList.contains('visible');\n        if (isPanelOpen) {\n          e.preventDefault();\n          e.stopPropagation();\n          _this2.saveItem();\n        }\n      }\n    };\n\n    // Supprimer l'ancien gestionnaire s'il existe\n    if (this._globalKeyHandler) {\n      document.removeEventListener('keydown', this._globalKeyHandler);\n    }\n\n    // Ajouter le nouveau gestionnaire global\n    this._globalKeyHandler = globalKeyHandler;\n    document.addEventListener('keydown', this._globalKeyHandler);\n\n    // Également ajouter sur le formulaire comme backup\n    form.addEventListener('keydown', function (e) {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        _this2.saveItem();\n      }\n    });\n  },\n  /**\n   * NOUVEAU: Supprime les gestionnaires d'événements globaux\n   */\n  removeGlobalKeyHandlers: function removeGlobalKeyHandlers() {\n    if (this._globalKeyHandler) {\n      document.removeEventListener('keydown', this._globalKeyHandler);\n      this._globalKeyHandler = null;\n    }\n  },\n  /**\n   * Méthode pour rafraîchir les tableaux\n   */\n  refreshTables: function refreshTables() {\n    this.renderSection();\n  },\n  /**\n   * Rend la section d'édition\n   */\n  renderSection: function renderSection() {\n    this.renderPiecesTable();\n    this.renderStockBarsTable();\n  },\n  /**\n   * Convertit le code d'orientation en affichage lisible\n   */\n  formatOrientation: function formatOrientation(orientation) {\n    switch (orientation) {\n      case 'debout':\n        return 'Debout';\n      case 'a-plat':\n        return 'À plat';\n      default:\n        return orientation;\n    }\n  },\n  /**\n   * Trie les barres selon l'ordre : profil → orientation → longueur\n   * @param {Array} bars - Tableau de barres à trier\n   * @returns {Array} - Tableau trié\n   */\n  sortBars: function sortBars(bars) {\n    return bars.sort(function (a, b) {\n      // 1. Trier par profil\n      if (a.profile !== b.profile) {\n        return a.profile.localeCompare(b.profile);\n      }\n\n      // 2. Trier par orientation (pour les pièces uniquement)\n      if (a.orientation && b.orientation && a.orientation !== b.orientation) {\n        var orientationOrder = {\n          'a-plat': 0,\n          'debout': 1\n        };\n        var orderA = orientationOrder[a.orientation] !== undefined ? orientationOrder[a.orientation] : 2;\n        var orderB = orientationOrder[b.orientation] !== undefined ? orientationOrder[b.orientation] : 2;\n        return orderA - orderB;\n      }\n\n      // 3. Trier par longueur\n      return a.length - b.length;\n    });\n  },\n  /**\n   * Rend le tableau des barres filles avec tri automatique\n   */\n  renderPiecesTable: function renderPiecesTable() {\n    var _this3 = this;\n    var tableContainer = document.querySelector('#pieces-table');\n    var data = this.dataManager.getData();\n\n    // Récupérer toutes les barres filles\n    var allPieces = [];\n    for (var profile in data.pieces) {\n      allPieces.push.apply(allPieces, _toConsumableArray(data.pieces[profile]));\n    }\n\n    // Trier les barres selon l'ordre défini\n    var sortedPieces = this.sortBars(allPieces);\n\n    // Générer l'en-tête du tableau\n    var html = \"\\n      <table class=\\\"data-table\\\">\\n        <thead>\\n          <tr>\\n            <th>Nom</th>\\n            <th>Profil</th>\\n            <th>Orientation</th>\\n            <th>Longueur</th>\\n            <th>Angle 1</th>\\n            <th>Angle 2</th>\\n            <th>Quantit\\xE9</th>\\n            <th>Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n    \";\n\n    // Générer les lignes du tableau\n    var _iterator = _createForOfIteratorHelper(sortedPieces),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _piece$angles, _piece$angles2;\n        var piece = _step.value;\n        html += \"\\n        <tr data-id=\\\"\".concat(piece.id, \"\\\">\\n          <td>\").concat(piece.nom || '-', \"</td>\\n          <td>\").concat(piece.profile, \"</td>\\n          <td>\").concat(this.formatOrientation(piece.orientation || \"non-définie\"), \"</td>\\n          <td>\").concat(Math.round(piece.length), \" cm</td>\\n          <td>\").concat(parseFloat(((_piece$angles = piece.angles) === null || _piece$angles === void 0 ? void 0 : _piece$angles[1]) || 90).toFixed(2), \"\\xB0</td>\\n          <td>\").concat(parseFloat(((_piece$angles2 = piece.angles) === null || _piece$angles2 === void 0 ? void 0 : _piece$angles2[2]) || 90).toFixed(2), \"\\xB0</td>\\n          <td>\").concat(piece.quantity, \"</td>\\n          <td>\\n            <button class=\\\"btn btn-sm btn-primary edit-piece-btn\\\" \\n                    data-id=\\\"\").concat(piece.id, \"\\\">\\u270E</button>\\n            <button class=\\\"btn btn-sm btn-danger delete-piece-btn\\\" \\n                    data-id=\\\"\").concat(piece.id, \"\\\">\\xD7</button>\\n          </td>\\n        </tr>\\n      \");\n      }\n\n      // Ajouter une ligne pour le bouton d'ajout seulement si non verrouillé\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (!this.lockOptions.lockPieceCreation) {\n      html += \"\\n        <tr class=\\\"add-row\\\">\\n          <td colspan=\\\"8\\\">\\n            <button id=\\\"add-piece-btn\\\" class=\\\"btn btn-sm btn-primary\\\">+ Ajouter une barre \\xE0 d\\xE9couper</button>\\n          </td>\\n        </tr>\\n      \";\n    }\n    html += \"\\n      </tbody>\\n    </table>\\n    \";\n    tableContainer.innerHTML = html;\n\n    // Configurer les gestionnaires d'événements\n    if (!this.lockOptions.lockPieceCreation) {\n      var addBtn = document.getElementById('add-piece-btn');\n      if (addBtn) {\n        addBtn.addEventListener('click', function () {\n          _this3.openPiecePanel('create');\n        });\n      }\n    }\n    document.querySelectorAll('.edit-piece-btn').forEach(function (btn) {\n      btn.addEventListener('click', function () {\n        var id = btn.getAttribute('data-id');\n        _this3.openPiecePanel('edit', id);\n      });\n    });\n    document.querySelectorAll('.delete-piece-btn').forEach(function (btn) {\n      btn.addEventListener('click', function () {\n        var id = btn.getAttribute('data-id');\n        if (_this3.dataManager.deletePiece(id)) {\n          _this3.renderPiecesTable(); // Re-render avec tri automatique\n          _this3.updateAllProfileSelects();\n        } else {\n          _this3.showNotification('Erreur lors de la suppression', 'error');\n        }\n      });\n    });\n  },\n  /**\n   * Rend le tableau des barres mères avec tri automatique et longueurs en mètres\n   */\n  renderStockBarsTable: function renderStockBarsTable() {\n    var _this4 = this;\n    var tableContainer = document.querySelector('#stock-bars-table');\n    var data = this.dataManager.getData();\n\n    // Récupérer toutes les barres mères\n    var allMotherBars = [];\n    for (var profile in data.motherBars) {\n      allMotherBars.push.apply(allMotherBars, _toConsumableArray(data.motherBars[profile]));\n    }\n\n    // Trier les barres selon l'ordre défini (profil puis longueur pour les barres mères)\n    var sortedBars = this.sortBars(allMotherBars);\n\n    // Générer l'en-tête du tableau\n    var html = \"\\n      <table class=\\\"data-table\\\">\\n        <thead>\\n          <tr>\\n            <th>Profil</th>\\n            <th>Longueur</th>\\n            <th>Quantit\\xE9</th>\\n            <th>Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n    \";\n\n    // Générer les lignes du tableau avec longueurs en mètres\n    var _iterator2 = _createForOfIteratorHelper(sortedBars),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var bar = _step2.value;\n        var lengthInMeters = this.formatLengthForDisplay(bar.length);\n        html += \"\\n        <tr data-id=\\\"\".concat(bar.id, \"\\\">\\n          <td>\").concat(bar.profile, \"</td>\\n          <td>\").concat(lengthInMeters, \" m</td>\\n          <td>\").concat(bar.quantity, \"</td>\\n          <td>\\n            <button class=\\\"btn btn-sm btn-primary edit-stock-btn\\\" \\n                    data-id=\\\"\").concat(bar.id, \"\\\">\\u270E</button>\\n            <button class=\\\"btn btn-sm btn-danger delete-stock-btn\\\" \\n                    data-id=\\\"\").concat(bar.id, \"\\\">\\xD7</button>\\n          </td>\\n        </tr>\\n      \");\n      }\n\n      // Ajouter une ligne pour le bouton d'ajout\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    html += \"\\n        <tr class=\\\"add-row\\\">\\n          <td colspan=\\\"4\\\">\\n            <button id=\\\"add-stock-btn\\\" class=\\\"btn btn-sm btn-primary\\\">+ Ajouter une barre m\\xE8re</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    \";\n    tableContainer.innerHTML = html;\n\n    // Configurer les gestionnaires d'événements\n    document.getElementById('add-stock-btn').addEventListener('click', function () {\n      _this4.openStockPanel('create');\n    });\n    document.querySelectorAll('.edit-stock-btn').forEach(function (btn) {\n      btn.addEventListener('click', function () {\n        var id = btn.getAttribute('data-id');\n        _this4.openStockPanel('edit', id);\n      });\n    });\n    document.querySelectorAll('.delete-stock-btn').forEach(function (btn) {\n      btn.addEventListener('click', function () {\n        var id = btn.getAttribute('data-id');\n        if (_this4.dataManager.deleteMotherBar(id)) {\n          _this4.renderStockBarsTable(); // Re-render avec tri automatique\n          _this4.updateAllProfileSelects();\n        } else {\n          _this4.showNotification('Erreur lors de la suppression', 'error');\n        }\n      });\n    });\n  },\n  /**\n   * Ouvre le panneau des barres filles (édition ou création)\n   * @param {string} mode - Mode du panneau ('edit' ou 'create')\n   * @param {string} id - ID de la pièce à éditer (seulement en mode 'edit')\n   */\n  openPiecePanel: function openPiecePanel(mode) {\n    var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    // Vérifier si la création est verrouillée\n    if (mode === 'create' && this.lockOptions.lockPieceCreation) {\n      this.showNotification('La création de nouvelles barres filles est désactivée', 'warning');\n      return;\n    }\n    this.editingMode = mode;\n    this.editingId = id;\n    this.editingType = 'piece';\n    var panel = document.getElementById('piece-panel');\n    var overlay = document.getElementById('panel-overlay');\n    var form = panel.querySelector('.panel-form');\n    var title = panel.querySelector('.panel-title');\n\n    // Vider le formulaire\n    form.innerHTML = '';\n    if (mode === 'edit') {\n      var _item$angles, _item$angles2;\n      var item = this.dataManager.getPieceById(id);\n      if (!item) return;\n      title.textContent = \"\\xC9diter la barre \".concat(item.nom || item.profile);\n\n      // Déterminer si les champs doivent être désactivés\n      var lengthDisabled = this.lockOptions.lockPieceLengths ? 'disabled' : '';\n      var angleDisabled = this.lockOptions.lockPieceAngles ? 'disabled' : '';\n\n      // Générer le formulaire d'édition\n      form.innerHTML = \"\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-nom\\\">Nom :</label>\\n          <input type=\\\"text\\\" id=\\\"piece-nom\\\" value=\\\"\".concat(item.nom || '', \"\\\" placeholder=\\\"Nom de la barre\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-profile\\\">Profil :</label>\\n          <div class=\\\"profile-input-group\\\">\\n            <select id=\\\"piece-profile-select\\\">\\n              <option value=\\\"custom\\\">Saisie personnalis\\xE9e</option>\\n              \").concat(this.getProfileOptions(item.profile), \"\\n            </select>\\n            <input type=\\\"text\\\" id=\\\"piece-profile\\\" value=\\\"\").concat(item.profile, \"\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-length\\\">Longueur (cm) \").concat(this.lockOptions.lockPieceLengths ? '(verrouillée)' : '', \" :</label>\\n          <input type=\\\"number\\\" id=\\\"piece-length\\\" min=\\\"1\\\" step=\\\"1\\\" value=\\\"\").concat(Math.round(item.length), \"\\\" \").concat(lengthDisabled, \">\\n          \").concat(this.lockOptions.lockPieceLengths ? '<small class=\"form-help\">La longueur ne peut pas être modifiée pour les barres importées</small>' : '', \"\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-quantity\\\">Quantit\\xE9 :</label>\\n          <input type=\\\"number\\\" id=\\\"piece-quantity\\\" min=\\\"1\\\" value=\\\"\").concat(item.quantity, \"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-angle-1\\\">Angle 1 (\\xB0) \").concat(this.lockOptions.lockPieceAngles ? '(verrouillé)' : '', \" :</label>\\n          <input type=\\\"number\\\" id=\\\"piece-angle-1\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"0.01\\\" value=\\\"\").concat(parseFloat(((_item$angles = item.angles) === null || _item$angles === void 0 ? void 0 : _item$angles[1]) || 90).toFixed(2), \"\\\" \").concat(angleDisabled, \">\\n          \").concat(this.lockOptions.lockPieceAngles ? '<small class=\"form-help\">Les angles ne peuvent pas être modifiés pour les barres importées</small>' : '', \"\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-angle-2\\\">Angle 2 (\\xB0) \").concat(this.lockOptions.lockPieceAngles ? '(verrouillé)' : '', \" :</label>\\n          <input type=\\\"number\\\" id=\\\"piece-angle-2\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"0.01\\\" value=\\\"\").concat(parseFloat(((_item$angles2 = item.angles) === null || _item$angles2 === void 0 ? void 0 : _item$angles2[2]) || 90).toFixed(2), \"\\\" \").concat(angleDisabled, \">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-orientation\\\">Orientation :</label>\\n          <select id=\\\"piece-orientation\\\">\\n            <option value=\\\"a-plat\\\" \").concat(item.orientation === 'a-plat' ? 'selected' : '', \">\\xC0 plat</option>\\n            <option value=\\\"debout\\\" \").concat(item.orientation === 'debout' ? 'selected' : '', \">Debout</option>\\n          </select>\\n        </div>\\n      \");\n\n      // Initialiser les contrôles spécifiques\n      var profileSelect = document.getElementById('piece-profile-select');\n      var profileInput = document.getElementById('piece-profile');\n      profileSelect.addEventListener('change', function () {\n        if (profileSelect.value === 'custom') {\n          profileInput.removeAttribute('readonly');\n          profileInput.focus();\n        } else {\n          profileInput.value = profileSelect.value;\n          profileInput.setAttribute('readonly', 'readonly');\n        }\n      });\n\n      // Si le profil actuel n'est pas dans la liste, sélectionner \"custom\"\n      var matchingOption = Array.from(profileSelect.options).find(function (option) {\n        return option.value === item.profile;\n      });\n      if (!matchingOption) {\n        profileSelect.value = 'custom';\n        profileInput.removeAttribute('readonly');\n      } else {\n        profileSelect.value = item.profile;\n        profileInput.setAttribute('readonly', 'readonly');\n      }\n    } else {\n      // Mode création\n      title.textContent = 'Nouvelle barre à découper';\n      form.innerHTML = \"\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-nom\\\">Nom :</label>\\n          <input type=\\\"text\\\" id=\\\"piece-nom\\\" placeholder=\\\"Nom de la barre\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-profile\\\">Profil :</label>\\n          <div class=\\\"profile-input-group\\\">\\n            <select id=\\\"piece-profile-select\\\">\\n              <option value=\\\"custom\\\">Saisie personnalis\\xE9e</option>\\n              \".concat(this.getProfileOptions(), \"\\n            </select>\\n            <input type=\\\"text\\\" id=\\\"piece-profile\\\" placeholder=\\\"Saisir le profil\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-length\\\">Longueur (cm) :</label>\\n          <input type=\\\"number\\\" id=\\\"piece-length\\\" min=\\\"1\\\" step=\\\"1\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-quantity\\\">Quantit\\xE9 :</label>\\n          <input type=\\\"number\\\" id=\\\"piece-quantity\\\" min=\\\"1\\\" value=\\\"1\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-angle-1\\\">Angle 1 (\\xB0) :</label>\\n          <input type=\\\"number\\\" id=\\\"piece-angle-1\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"0.01\\\" value=\\\"90.00\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-angle-2\\\">Angle 2 (\\xB0) :</label>\\n          <input type=\\\"number\\\" id=\\\"piece-angle-2\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"0.01\\\" value=\\\"90.00\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"piece-orientation\\\">Orientation :</label>\\n          <select id=\\\"piece-orientation\\\">\\n            <option value=\\\"a-plat\\\">\\xC0 plat</option>\\n            <option value=\\\"debout\\\">Debout</option>\\n          </select>\\n        </div>\\n      \");\n\n      // Initialiser les contrôles\n      var _profileSelect = document.getElementById('piece-profile-select');\n      var _profileInput = document.getElementById('piece-profile');\n      _profileSelect.addEventListener('change', function () {\n        if (_profileSelect.value === 'custom') {\n          _profileInput.removeAttribute('readonly');\n          _profileInput.focus();\n        } else {\n          _profileInput.value = _profileSelect.value;\n          _profileInput.setAttribute('readonly', 'readonly');\n        }\n      });\n    }\n\n    // CORRECTION: Configurer les gestionnaires APRÈS génération du formulaire\n    this.setupFormKeyHandlers();\n\n    // Afficher le panneau et l'overlay\n    panel.classList.add('visible');\n    overlay.classList.add('visible');\n  },\n  /**\n   * Ouvre le panneau des barres mères (édition ou création) avec longueurs en mètres\n   * @param {string} mode - Mode du panneau ('edit' ou 'create')\n   * @param {string} id - ID de la barre à éditer (seulement en mode 'edit')\n   */\n  openStockPanel: function openStockPanel(mode) {\n    var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    // Vérifier s'il y a des barres filles avant d'ajouter une barre mère\n    if (!this.checkPiecesExistBeforeAddingMotherBar(mode)) {\n      return;\n    }\n    this.editingMode = mode;\n    this.editingId = id;\n    this.editingType = 'stock';\n    var panel = document.getElementById('stock-panel');\n    var overlay = document.getElementById('panel-overlay');\n    var form = panel.querySelector('.panel-form');\n    var title = panel.querySelector('.panel-title');\n\n    // Vider le formulaire\n    form.innerHTML = '';\n    if (mode === 'edit') {\n      var item = this.dataManager.getMotherBarById(id);\n      if (!item) return;\n      title.textContent = \"\\xC9diter la barre m\\xE8re \".concat(item.profile);\n\n      // Convertir la longueur en mètres pour l'affichage\n      var lengthInMeters = this.formatLengthForDisplay(item.length);\n\n      // Générer le formulaire d'édition\n      form.innerHTML = \"\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-profile\\\">Profil :</label>\\n          <select id=\\\"stock-profile\\\">\\n            \".concat(this.getProfileOptions(item.profile), \"\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-length\\\">Longueur (m) :</label>\\n          <input type=\\\"text\\\" id=\\\"stock-length\\\" value=\\\"\").concat(lengthInMeters, \"\\\" placeholder=\\\"ex : 12 ou 3,5\\\">\\n          <small class=\\\"form-help\\\">Saisissez la longueur en m\\xE8tres</small>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-quantity\\\">Quantit\\xE9 :</label>\\n          <input type=\\\"number\\\" id=\\\"stock-quantity\\\" min=\\\"1\\\" max=\\\"1000000\\\" value=\\\"\").concat(item.quantity, \"\\\">\\n          <small class=\\\"form-help\\\">Quantit\\xE9 disponible de cette barre m\\xE8re</small>\\n        </div>\\n      \");\n    } else {\n      // Mode création\n      title.textContent = 'Nouvelle barre mère';\n      form.innerHTML = \"\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-profile\\\">Profil :</label>\\n          <select id=\\\"stock-profile\\\">\\n            \".concat(this.getProfileOptions(), \"\\n          </select>\\n          <small class=\\\"form-help\\\">S\\xE9lectionnez un profil existant ou saisissez-en un nouveau</small>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-length\\\">Longueur (m) :</label>\\n          <input type=\\\"text\\\" id=\\\"stock-length\\\" placeholder=\\\"ex : 12 ou 3,5\\\">\\n          <small class=\\\"form-help\\\">Saisissez la longueur en m\\xE8tres</small>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-quantity\\\">Quantit\\xE9 :</label>\\n          <input type=\\\"number\\\" id=\\\"stock-quantity\\\" min=\\\"1\\\" max=\\\"1000000\\\" value=\\\"1000000\\\">\\n          <small class=\\\"form-help\\\">Quantit\\xE9 disponible (1000000 = illimit\\xE9e)</small>\\n        </div>\\n      \");\n    }\n\n    // Configurer les gestionnaires spéciaux pour le champ de longueur (SANS Entrée)\n    var lengthInput = document.getElementById('stock-length');\n    if (lengthInput) {\n      this.setupLengthInputHandlers(lengthInput);\n    }\n\n    // CORRECTION: Configurer les gestionnaires APRÈS génération du formulaire\n    this.setupFormKeyHandlers();\n\n    // Afficher le panneau et l'overlay\n    panel.classList.add('visible');\n    overlay.classList.add('visible');\n\n    // NOUVEAU: Mettre le focus sur le champ de longueur en mode création\n    if (mode === 'create') {\n      // Utiliser un petit délai pour s'assurer que le panneau est visible\n      setTimeout(function () {\n        var lengthInput = document.getElementById('stock-length');\n        if (lengthInput) {\n          lengthInput.focus();\n        }\n      }, 100);\n    }\n  },\n  /**\n   * Ferme le panneau d'édition actif et nettoie les gestionnaires\n   */\n  closePanel: function closePanel() {\n    var piecePanel = document.getElementById('piece-panel');\n    var stockPanel = document.getElementById('stock-panel');\n    var overlay = document.getElementById('panel-overlay');\n    piecePanel.classList.remove('visible');\n    stockPanel.classList.remove('visible');\n    overlay.classList.remove('visible');\n\n    // CORRECTION: Nettoyer les gestionnaires d'événements globaux\n    this.removeGlobalKeyHandlers();\n    this.editingId = null;\n    this.editingType = null;\n    this.editingMode = null;\n  },\n  /**\n   * Enregistre les modifications ou crée un nouvel élément avec re-tri automatique\n   */\n  saveItem: function saveItem() {\n    var type = this.editingType;\n    var id = this.editingId;\n    var mode = this.editingMode;\n    if (!type) return;\n    var success = false;\n    var updatedProfile = false;\n    if (type === 'piece') {\n      var nom = document.getElementById('piece-nom').value.trim();\n      var profileValue = document.getElementById('piece-profile').value.trim();\n      var quantity = parseInt(document.getElementById('piece-quantity').value, 10);\n      var orientation = document.getElementById('piece-orientation').value;\n\n      // Récupérer la longueur et les angles seulement si les champs ne sont pas verrouillés\n      var length = null;\n      var angle1 = 90,\n        angle2 = 90;\n      if (!this.lockOptions.lockPieceLengths) {\n        var lengthInput = document.getElementById('piece-length').value;\n        length = parseInt(lengthInput, 10);\n      } else if (mode === 'edit') {\n        var item = this.dataManager.getPieceById(id);\n        length = item ? item.length : null;\n      }\n      if (!this.lockOptions.lockPieceAngles) {\n        angle1 = parseFloat(document.getElementById('piece-angle-1').value);\n        angle2 = parseFloat(document.getElementById('piece-angle-2').value);\n      } else if (mode === 'edit') {\n        var _item = this.dataManager.getPieceById(id);\n        if (_item && _item.angles) {\n          angle1 = _item.angles[1] || 90;\n          angle2 = _item.angles[2] || 90;\n        }\n      }\n\n      // Préparer les données à valider\n      var pieceData = {\n        nom: nom,\n        profile: profileValue,\n        length: length,\n        quantity: quantity,\n        orientation: orientation,\n        angles: {\n          1: angle1,\n          2: angle2\n        }\n      };\n\n      // Valider les données\n      var errors = this.validatePieceData(pieceData);\n      if (errors.length > 0) {\n        this.showNotification(errors[0], 'error');\n        return;\n      }\n      if (profileValue && length && quantity) {\n        if (mode === 'edit') {\n          var piece = this.dataManager.getPieceById(id);\n          if (piece && piece.profile !== profileValue) {\n            updatedProfile = true;\n          }\n          var updatedPiece = {\n            nom: nom,\n            profile: profileValue,\n            length: length,\n            quantity: quantity,\n            orientation: orientation,\n            angles: {\n              1: angle1,\n              2: angle2\n            }\n          };\n          success = this.dataManager.updatePiece(id, updatedPiece);\n        } else {\n          var _pieceData = {\n            nom: nom,\n            profile: profileValue,\n            length: length,\n            quantity: quantity,\n            orientation: orientation,\n            angles: {\n              1: angle1,\n              2: angle2\n            },\n            type: 'fille'\n          };\n          if (this.dataManager.addBars([_pieceData]).length > 0) {\n            success = true;\n            updatedProfile = true;\n          }\n        }\n        if (success) {\n          // Re-render avec tri automatique\n          this.renderPiecesTable();\n          if (updatedProfile) {\n            this.updateAllProfileSelects();\n          }\n\n          // Rafraîchir l'affichage global SANS notification\n          if (this.refreshDataDisplay) {\n            this.refreshDataDisplay();\n          }\n\n          // Notification de succès seulement\n          var action = mode === 'edit' ? 'modifiée' : 'ajoutée';\n          this.showNotification(\"Barre \".concat(action), 'success');\n        }\n      }\n    } else if (type === 'stock') {\n      var _profileValue = document.getElementById('stock-profile').value.trim();\n      var _lengthInput = document.getElementById('stock-length').value.trim();\n      var _quantity = parseInt(document.getElementById('stock-quantity').value, 10);\n\n      // Convertir la longueur de mètres vers centimètres\n      var lengthInCm = this.parseLengthFromDisplay(_lengthInput);\n\n      // Préparer les données à valider\n      var motherBarData = {\n        profile: _profileValue,\n        length: lengthInCm,\n        quantity: _quantity\n      };\n\n      // Valider les données\n      var _errors = this.validateMotherBarData(motherBarData);\n      if (_errors.length > 0) {\n        this.showNotification(\"Erreur de validation :\\n\\u2022 \".concat(_errors.join('\\n• ')), 'error');\n        return;\n      }\n      if (_profileValue && lengthInCm && _quantity) {\n        if (mode === 'edit') {\n          var bar = this.dataManager.getMotherBarById(id);\n          if (bar && bar.profile !== _profileValue) {\n            updatedProfile = true;\n          }\n          var updatedMotherBar = {\n            profile: _profileValue,\n            length: lengthInCm,\n            quantity: _quantity\n          };\n          success = this.dataManager.updateMotherBar(id, updatedMotherBar);\n        } else {\n          var barData = {\n            profile: _profileValue,\n            length: lengthInCm,\n            quantity: _quantity,\n            type: 'mother'\n          };\n          if (this.dataManager.addBars([barData]).length > 0) {\n            success = true;\n            updatedProfile = true;\n          }\n        }\n        if (success) {\n          // Re-render avec tri automatique\n          this.renderStockBarsTable();\n          if (updatedProfile) {\n            this.updateAllProfileSelects();\n          }\n\n          // Rafraîchir l'affichage global SANS notification\n          if (this.refreshDataDisplay) {\n            this.refreshDataDisplay();\n          }\n\n          // Notification de succès seulement\n          var _action = mode === 'edit' ? 'modifiée' : 'ajoutée';\n          this.showNotification(\"Barre m\\xE8re \".concat(_action), 'success');\n        }\n      }\n    }\n    if (success) {\n      this.closePanel();\n    } else {\n      this.showNotification('Erreur lors de l\\'enregistrement', 'error');\n    }\n  }\n}, \"saveItem\", function saveItem() {\n  var type = this.editingType;\n  var id = this.editingId;\n  var mode = this.editingMode;\n  if (!type) return;\n  var success = false;\n  var updatedProfile = false;\n  if (type === 'piece') {\n    var nom = document.getElementById('piece-nom').value.trim();\n    var profileValue = document.getElementById('piece-profile').value.trim();\n    var quantity = parseInt(document.getElementById('piece-quantity').value, 10);\n    var orientation = document.getElementById('piece-orientation').value;\n    var length = null;\n    var angle1 = 90,\n      angle2 = 90;\n    if (!this.lockOptions.lockPieceLengths) {\n      var lengthInput = document.getElementById('piece-length').value;\n      length = parseInt(lengthInput, 10);\n    } else if (mode === 'edit') {\n      var item = this.dataManager.getPieceById(id);\n      length = item ? item.length : null;\n    }\n    if (!this.lockOptions.lockPieceAngles) {\n      angle1 = parseFloat(document.getElementById('piece-angle-1').value);\n      angle2 = parseFloat(document.getElementById('piece-angle-2').value);\n    } else if (mode === 'edit') {\n      var _item2 = this.dataManager.getPieceById(id);\n      if (_item2 && _item2.angles) {\n        angle1 = _item2.angles[1] || 90;\n        angle2 = _item2.angles[2] || 90;\n      }\n    }\n    var pieceData = {\n      nom: nom,\n      profile: profileValue,\n      length: length,\n      quantity: quantity,\n      orientation: orientation,\n      angles: {\n        1: angle1,\n        2: angle2\n      }\n    };\n    var errors = this.validatePieceData(pieceData);\n    if (errors.length > 0) {\n      this.showNotification(errors[0], 'error');\n      return;\n    }\n    if (profileValue && length && quantity) {\n      if (mode === 'edit') {\n        var piece = this.dataManager.getPieceById(id);\n        if (piece && piece.profile !== profileValue) {\n          updatedProfile = true;\n        }\n        var updatedPiece = {\n          nom: nom,\n          profile: profileValue,\n          length: length,\n          quantity: quantity,\n          orientation: orientation,\n          angles: {\n            1: angle1,\n            2: angle2\n          }\n        };\n        success = this.dataManager.updatePiece(id, updatedPiece);\n      } else {\n        var _pieceData2 = {\n          nom: nom,\n          profile: profileValue,\n          length: length,\n          quantity: quantity,\n          orientation: orientation,\n          angles: {\n            1: angle1,\n            2: angle2\n          },\n          type: 'fille'\n        };\n        if (this.dataManager.addBars([_pieceData2]).length > 0) {\n          success = true;\n          updatedProfile = true;\n        }\n      }\n      if (success) {\n        this.renderPiecesTable();\n        if (updatedProfile) {\n          this.updateAllProfileSelects();\n        }\n        if (this.refreshDataDisplay) {\n          this.refreshDataDisplay();\n        }\n\n        // SUPPRIMÉ: Notification de succès\n      }\n    }\n  } else if (type === 'stock') {\n    var _profileValue2 = document.getElementById('stock-profile').value.trim();\n    var _lengthInput2 = document.getElementById('stock-length').value.trim();\n    var _quantity2 = parseInt(document.getElementById('stock-quantity').value, 10);\n    var lengthInCm = this.parseLengthFromDisplay(_lengthInput2);\n    var motherBarData = {\n      profile: _profileValue2,\n      length: lengthInCm,\n      quantity: _quantity2\n    };\n    var _errors2 = this.validateMotherBarData(motherBarData);\n    if (_errors2.length > 0) {\n      this.showNotification(_errors2[0], 'error');\n      return;\n    }\n    if (_profileValue2 && lengthInCm && _quantity2) {\n      if (mode === 'edit') {\n        var bar = this.dataManager.getMotherBarById(id);\n        if (bar && bar.profile !== _profileValue2) {\n          updatedProfile = true;\n        }\n        var updatedMotherBar = {\n          profile: _profileValue2,\n          length: lengthInCm,\n          quantity: _quantity2\n        };\n        success = this.dataManager.updateMotherBar(id, updatedMotherBar);\n      } else {\n        var barData = {\n          profile: _profileValue2,\n          length: lengthInCm,\n          quantity: _quantity2,\n          type: 'mother'\n        };\n        if (this.dataManager.addBars([barData]).length > 0) {\n          success = true;\n          updatedProfile = true;\n        }\n      }\n      if (success) {\n        this.renderStockBarsTable();\n        if (updatedProfile) {\n          this.updateAllProfileSelects();\n        }\n        if (this.refreshDataDisplay) {\n          this.refreshDataDisplay();\n        }\n\n        // SUPPRIMÉ: Notification de succès\n      }\n    }\n  }\n  if (success) {\n    this.closePanel();\n  } else {\n    this.showNotification('Erreur lors de l\\'enregistrement', 'error');\n  }\n}), \"validatePieceData\", function validatePieceData(data) {\n  var errors = [];\n  if (data.nom && data.nom.length > 50) {\n    errors.push('Nom trop long (max 50 caractères)');\n  }\n  if (!data.profile || data.profile.trim() === '') {\n    errors.push('Profil obligatoire');\n  } else if (data.profile.length > 20) {\n    errors.push('Profil trop long (max 20 caractères)');\n  }\n  if (!data.length || isNaN(data.length) || data.length <= 0) {\n    errors.push('Longueur invalide');\n  } else if (data.length > 100000) {\n    errors.push('Longueur trop grande (max 100 000 cm)');\n  } else if (data.length < 1) {\n    errors.push('Longueur minimale 1 cm');\n  }\n  if (!data.quantity || isNaN(data.quantity) || data.quantity <= 0) {\n    errors.push('Quantité invalide');\n  } else if (!Number.isInteger(data.quantity)) {\n    errors.push('Quantité doit être un entier');\n  } else if (data.quantity > 10000) {\n    errors.push('Quantité trop élevée (max 10 000)');\n  }\n  if (data.angles) {\n    if (isNaN(data.angles[1]) || data.angles[1] < 0 || data.angles[1] > 360) {\n      errors.push('Angle 1 invalide (0-360°)');\n    }\n    if (isNaN(data.angles[2]) || data.angles[2] < 0 || data.angles[2] > 360) {\n      errors.push('Angle 2 invalide (0-360°)');\n    }\n  }\n  if (data.orientation && !['a-plat', 'debout'].includes(data.orientation)) {\n    errors.push('Orientation invalide');\n  }\n  return errors;\n}), \"validateMotherBarData\", function validateMotherBarData(data) {\n  var errors = [];\n  if (!data.profile || data.profile.trim() === '') {\n    errors.push('Profil obligatoire');\n  } else if (data.profile.length > 20) {\n    errors.push('Profil trop long (max 20 caractères)');\n  }\n  if (!data.length || isNaN(data.length) || data.length <= 0) {\n    errors.push('Longueur invalide');\n  } else if (data.length > 100000) {\n    errors.push('Longueur trop grande (max 100 000 cm)');\n  } else if (data.length < 10) {\n    errors.push('Longueur minimale 10 cm');\n  }\n  if (!data.quantity || isNaN(data.quantity) || data.quantity <= 0) {\n    errors.push('Quantité invalide');\n  } else if (!Number.isInteger(data.quantity)) {\n    errors.push('Quantité doit être un entier');\n  } else if (data.quantity > 1000000) {\n    errors.push('Quantité trop élevée (max 1 000 000)');\n  }\n  return errors;\n}), \"checkPiecesExistBeforeAddingMotherBar\", function checkPiecesExistBeforeAddingMotherBar(mode) {\n  if (mode === 'create') {\n    var data = this.dataManager.getData();\n    var totalPieces = 0;\n    for (var profile in data.pieces) {\n      var _iterator3 = _createForOfIteratorHelper(data.pieces[profile]),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var piece = _step3.value;\n          totalPieces += piece.quantity;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n    if (totalPieces === 0) {\n      this.showNotification('Importez d\\'abord des barres à découper', 'warning');\n      return false;\n    }\n  }\n  return true;\n}), \"openStockPanel\", function openStockPanel(mode) {\n  var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  // Vérifier s'il y a des barres filles avant d'ajouter une barre mère\n  if (!this.checkPiecesExistBeforeAddingMotherBar(mode)) {\n    return;\n  }\n  this.editingMode = mode;\n  this.editingId = id;\n  this.editingType = 'stock';\n  var panel = document.getElementById('stock-panel');\n  var overlay = document.getElementById('panel-overlay');\n  var form = panel.querySelector('.panel-form');\n  var title = panel.querySelector('.panel-title');\n\n  // Vider le formulaire\n  form.innerHTML = '';\n  if (mode === 'edit') {\n    var item = this.dataManager.getMotherBarById(id);\n    if (!item) return;\n    title.textContent = \"\\xC9diter la barre m\\xE8re \".concat(item.profile);\n\n    // Convertir la longueur en mètres pour l'affichage\n    var lengthInMeters = this.formatLengthForDisplay(item.length);\n\n    // Générer le formulaire d'édition\n    form.innerHTML = \"\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-profile\\\">Profil :</label>\\n          <select id=\\\"stock-profile\\\">\\n            \".concat(this.getProfileOptions(item.profile), \"\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-length\\\">Longueur (m) :</label>\\n          <input type=\\\"text\\\" id=\\\"stock-length\\\" value=\\\"\").concat(lengthInMeters, \"\\\" placeholder=\\\"ex : 12 ou 3,5\\\">\\n          <small class=\\\"form-help\\\">Saisissez la longueur en m\\xE8tres</small>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-quantity\\\">Quantit\\xE9 :</label>\\n          <input type=\\\"number\\\" id=\\\"stock-quantity\\\" min=\\\"1\\\" max=\\\"1000000\\\" value=\\\"\").concat(item.quantity, \"\\\">\\n          <small class=\\\"form-help\\\">Quantit\\xE9 disponible de cette barre m\\xE8re</small>\\n        </div>\\n      \");\n  } else {\n    // Mode création\n    title.textContent = 'Nouvelle barre mère';\n    form.innerHTML = \"\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-profile\\\">Profil :</label>\\n          <select id=\\\"stock-profile\\\">\\n            \".concat(this.getProfileOptions(), \"\\n          </select>\\n          <small class=\\\"form-help\\\">S\\xE9lectionnez un profil existant ou saisissez-en un nouveau</small>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-length\\\">Longueur (m) :</label>\\n          <input type=\\\"text\\\" id=\\\"stock-length\\\" placeholder=\\\"ex : 12 ou 3,5\\\">\\n          <small class=\\\"form-help\\\">Saisissez la longueur en m\\xE8tres</small>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"stock-quantity\\\">Quantit\\xE9 :</label>\\n          <input type=\\\"number\\\" id=\\\"stock-quantity\\\" min=\\\"1\\\" max=\\\"1000000\\\" value=\\\"1000000\\\">\\n          <small class=\\\"form-help\\\">Quantit\\xE9 disponible (1000000 = illimit\\xE9e)</small>\\n        </div>\\n      \");\n  }\n\n  // Configurer les gestionnaires spéciaux pour le champ de longueur (SANS Entrée)\n  var lengthInput = document.getElementById('stock-length');\n  if (lengthInput) {\n    this.setupLengthInputHandlers(lengthInput);\n  }\n\n  // CORRECTION: Configurer les gestionnaires APRÈS génération du formulaire\n  this.setupFormKeyHandlers();\n\n  // Afficher le panneau et l'overlay\n  panel.classList.add('visible');\n  overlay.classList.add('visible');\n\n  // NOUVEAU: Mettre le focus sur le champ de longueur en mode création\n  if (mode === 'create') {\n    // Utiliser un petit délai pour s'assurer que le panneau est visible\n    setTimeout(function () {\n      var lengthInput = document.getElementById('stock-length');\n      if (lengthInput) {\n        lengthInput.focus();\n      }\n    }, 100);\n  }\n}), \"saveItem\", function saveItem() {\n  var type = this.editingType;\n  var id = this.editingId;\n  var mode = this.editingMode;\n  if (!type) return;\n  var success = false;\n  var updatedProfile = false;\n  if (type === 'piece') {\n    var nom = document.getElementById('piece-nom').value.trim();\n    var profileValue = document.getElementById('piece-profile').value.trim();\n    var quantity = parseInt(document.getElementById('piece-quantity').value, 10);\n    var orientation = document.getElementById('piece-orientation').value;\n\n    // Récupérer la longueur et les angles seulement si les champs ne sont pas verrouillés\n    var length = null;\n    var angle1 = 90,\n      angle2 = 90;\n    if (!this.lockOptions.lockPieceLengths) {\n      var lengthInput = document.getElementById('piece-length').value;\n      length = parseInt(lengthInput, 10);\n    } else if (mode === 'edit') {\n      var item = this.dataManager.getPieceById(id);\n      length = item ? item.length : null;\n    }\n    if (!this.lockOptions.lockPieceAngles) {\n      angle1 = parseFloat(document.getElementById('piece-angle-1').value);\n      angle2 = parseFloat(document.getElementById('piece-angle-2').value);\n    } else if (mode === 'edit') {\n      var _item3 = this.dataManager.getPieceById(id);\n      if (_item3 && _item3.angles) {\n        angle1 = _item3.angles[1] || 90;\n        angle2 = _item3.angles[2] || 90;\n      }\n    }\n\n    // Préparer les données à valider\n    var pieceData = {\n      nom: nom,\n      profile: profileValue,\n      length: length,\n      quantity: quantity,\n      orientation: orientation,\n      angles: {\n        1: angle1,\n        2: angle2\n      }\n    };\n\n    // Valider les données\n    var errors = this.validatePieceData(pieceData);\n    if (errors.length > 0) {\n      this.showNotification(errors[0], 'error');\n      return;\n    }\n    if (profileValue && length && quantity) {\n      if (mode === 'edit') {\n        var piece = this.dataManager.getPieceById(id);\n        if (piece && piece.profile !== profileValue) {\n          updatedProfile = true;\n        }\n        var updatedPiece = {\n          nom: nom,\n          profile: profileValue,\n          length: length,\n          quantity: quantity,\n          orientation: orientation,\n          angles: {\n            1: angle1,\n            2: angle2\n          }\n        };\n        success = this.dataManager.updatePiece(id, updatedPiece);\n      } else {\n        var _pieceData3 = {\n          nom: nom,\n          profile: profileValue,\n          length: length,\n          quantity: quantity,\n          orientation: orientation,\n          angles: {\n            1: angle1,\n            2: angle2\n          },\n          type: 'fille'\n        };\n        if (this.dataManager.addBars([_pieceData3]).length > 0) {\n          success = true;\n          updatedProfile = true;\n        }\n      }\n      if (success) {\n        // Re-render avec tri automatique\n        this.renderPiecesTable();\n        if (updatedProfile) {\n          this.updateAllProfileSelects();\n        }\n\n        // Rafraîchir l'affichage global SANS notification\n        if (this.refreshDataDisplay) {\n          this.refreshDataDisplay();\n        }\n\n        // Notification de succès seulement\n        if (mode === 'edit') {\n          this.showNotification(\"Barre modifi\\xE9e\", 'success');\n        }\n      }\n    }\n  } else if (type === 'stock') {\n    var _profileValue3 = document.getElementById('stock-profile').value.trim();\n    var _lengthInput3 = document.getElementById('stock-length').value.trim();\n    var _quantity3 = parseInt(document.getElementById('stock-quantity').value, 10);\n\n    // Convertir la longueur de mètres vers centimètres\n    var lengthInCm = this.parseLengthFromDisplay(_lengthInput3);\n\n    // Préparer les données à valider\n    var motherBarData = {\n      profile: _profileValue3,\n      length: lengthInCm,\n      quantity: _quantity3\n    };\n\n    // Valider les données\n    var _errors3 = this.validateMotherBarData(motherBarData);\n    if (_errors3.length > 0) {\n      this.showNotification(\"Erreur de validation :\\n\\u2022 \".concat(_errors3.join('\\n• ')), 'error');\n      return;\n    }\n    if (_profileValue3 && lengthInCm && _quantity3) {\n      if (mode === 'edit') {\n        var bar = this.dataManager.getMotherBarById(id);\n        if (bar && bar.profile !== _profileValue3) {\n          updatedProfile = true;\n        }\n        var updatedMotherBar = {\n          profile: _profileValue3,\n          length: lengthInCm,\n          quantity: _quantity3\n        };\n        success = this.dataManager.updateMotherBar(id, updatedMotherBar);\n      } else {\n        var barData = {\n          profile: _profileValue3,\n          length: lengthInCm,\n          quantity: _quantity3,\n          type: 'mother'\n        };\n        if (this.dataManager.addBars([barData]).length > 0) {\n          success = true;\n          updatedProfile = true;\n        }\n      }\n      if (success) {\n        // Re-render avec tri automatique\n        this.renderStockBarsTable();\n        if (updatedProfile) {\n          this.updateAllProfileSelects();\n        }\n\n        // Rafraîchir l'affichage global SANS notification\n        if (this.refreshDataDisplay) {\n          this.refreshDataDisplay();\n        }\n\n        // Notification de succès seulement\n        if (mode === 'edit') {\n          this.showNotification(\"Barre m\\xE8re modifi\\xE9e\", 'success');\n        }\n      }\n    }\n  }\n  if (success) {\n    this.closePanel();\n  } else {\n    this.showNotification('Erreur lors de l\\'enregistrement', 'error');\n  }\n}), \"updateAllProfileSelects\", function updateAllProfileSelects() {\n  // Mettre à jour la liste des profils dans le panneau d'ajout/édition de barre mère\n  var stockProfileSelect = document.getElementById('stock-profile');\n  if (stockProfileSelect) {\n    var currentValue = stockProfileSelect.value;\n    stockProfileSelect.innerHTML = this.getProfileOptions(currentValue);\n  }\n\n  // Mettre à jour la liste des profils dans le panneau d'ajout/édition de barre fille\n  var pieceProfileSelect = document.getElementById('piece-profile-select');\n  if (pieceProfileSelect) {\n    var _currentValue = pieceProfileSelect.value;\n    pieceProfileSelect.innerHTML = '<option value=\"custom\">Saisie personnalisée</option>' + this.getProfileOptions(_currentValue);\n  }\n}), \"getProfileOptions\", function getProfileOptions(currentValue) {\n  var data = this.dataManager.getData();\n  var profiles = new Set();\n\n  // Collecter tous les profils uniques\n  for (var profile in data.pieces) {\n    profiles.add(profile);\n  }\n  for (var _profile in data.motherBars) {\n    profiles.add(_profile);\n  }\n\n  // Générer les options HTML\n  var optionsHtml = '';\n  var _iterator4 = _createForOfIteratorHelper(profiles),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var _profile2 = _step4.value;\n      var selected = _profile2 === currentValue ? 'selected' : '';\n      optionsHtml += \"<option value=\\\"\".concat(_profile2, \"\\\" \").concat(selected, \">\").concat(_profile2, \"</option>\");\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return optionsHtml;\n}), \"createPiecePanel\", function createPiecePanel() {\n  var _this5 = this;\n  // Vérifier si le panneau existe déjà\n  if (document.getElementById('piece-panel')) return;\n\n  // S'assurer que l'overlay existe\n  if (!document.getElementById('panel-overlay')) {\n    var overlay = document.createElement('div');\n    overlay.id = 'panel-overlay';\n    overlay.className = 'panel-overlay';\n    overlay.addEventListener('click', function () {\n      return _this5.closePanel();\n    });\n    document.body.appendChild(overlay);\n  }\n\n  // Créer le panneau\n  var panel = document.createElement('div');\n  panel.id = 'piece-panel';\n  panel.className = 'side-panel piece-panel';\n  panel.innerHTML = \"\\n      <div class=\\\"panel-header\\\">\\n        <h3 class=\\\"panel-title\\\">Barre \\xE0 d\\xE9couper</h3>\\n        <button class=\\\"panel-close\\\">&times;</button>\\n      </div>\\n      <div class=\\\"panel-form\\\">\\n        <!-- Le contenu du formulaire sera g\\xE9n\\xE9r\\xE9 dynamiquement -->\\n      </div>\\n      <div class=\\\"panel-actions\\\">\\n        <button class=\\\"btn btn-secondary cancel-btn\\\">Annuler</button>\\n        <button class=\\\"btn btn-primary save-btn\\\">Enregistrer</button>\\n      </div>\\n    \";\n\n  // Ajouter au DOM\n  document.body.appendChild(panel);\n\n  // Ajouter les gestionnaires d'événements\n  panel.querySelector('.panel-close').addEventListener('click', function () {\n    return _this5.closePanel();\n  });\n  panel.querySelector('.cancel-btn').addEventListener('click', function () {\n    return _this5.closePanel();\n  });\n  panel.querySelector('.save-btn').addEventListener('click', function () {\n    return _this5.saveItem();\n  });\n}), \"createStockPanel\", function createStockPanel() {\n  var _this6 = this;\n  // Vérifier si le panneau existe déjà\n  if (document.getElementById('stock-panel')) return;\n\n  // S'assurer que l'overlay existe\n  if (!document.getElementById('panel-overlay')) {\n    var overlay = document.createElement('div');\n    overlay.id = 'panel-overlay';\n    overlay.className = 'panel-overlay';\n    overlay.addEventListener('click', function () {\n      return _this6.closePanel();\n    });\n    document.body.appendChild(overlay);\n  }\n\n  // Créer le panneau\n  var panel = document.createElement('div');\n  panel.id = 'stock-panel';\n  panel.className = 'side-panel stock-panel';\n  panel.innerHTML = \"\\n      <div class=\\\"panel-header\\\">\\n        <h3 class=\\\"panel-title\\\">Barre m\\xE8re</h3>\\n        <button class=\\\"panel-close\\\">&times;</button>\\n      </div>\\n      <div class=\\\"panel-form\\\">\\n        <!-- Le contenu du formulaire sera g\\xE9n\\xE9r\\xE9 dynamiquement -->\\n      </div>\\n      <div class=\\\"panel-actions\\\">\\n        <button class=\\\"btn btn-secondary cancel-btn\\\">Annuler</button>\\n        <button class=\\\"btn btn-primary save-btn\\\">Enregistrer</button>\\n      </div>\\n    \";\n\n  // Ajouter au DOM\n  document.body.appendChild(panel);\n\n  // Ajouter les gestionnaires d'événements\n  panel.querySelector('.panel-close').addEventListener('click', function () {\n    return _this6.closePanel();\n  });\n  panel.querySelector('.cancel-btn').addEventListener('click', function () {\n    return _this6.closePanel();\n  });\n  panel.querySelector('.save-btn').addEventListener('click', function () {\n    return _this6.saveItem();\n  });\n});\n\n//# sourceURL=webpack://parser-optimizer/./src/js/ui/edit-handler.js?");

/***/ }),

/***/ "./src/js/ui/import-handler.js":
/*!*************************************!*\
  !*** ./src/js/ui/import-handler.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImportHandler: () => (/* binding */ ImportHandler)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/js/ui/utils.js\");\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n/**\n * Gestionnaire de la section d'import\n * Gère le drag & drop et l'import de fichiers\n */\n\nvar ImportHandler = {\n  // Dépendances\n  dataManager: null,\n  importManager: null,\n  // Callbacks\n  showNotification: null,\n  refreshDataDisplay: null,\n  // CORRIGÉ : utiliser refreshDataDisplay au lieu de navigateToSection\n\n  /**\n   * Initialise le handler d'import\n   */\n  init: function init(options) {\n    this.dataManager = options.dataManager;\n    this.importManager = options.importManager;\n    this.showNotification = options.showNotification;\n    this.refreshDataDisplay = options.refreshDataDisplay; // CORRIGÉ\n\n    this.initDropZone();\n  },\n  /**\n   * Initialise la zone de drop\n   */\n  initDropZone: function initDropZone() {\n    var _this = this;\n    var dropZone = document.querySelector('.file-drop-zone');\n    var fileInput = document.getElementById('nc2-files-input');\n\n    // Ajouter un conteneur pour les erreurs s'il n'existe pas\n    if (!document.getElementById('import-error')) {\n      var errorDiv = document.createElement('div');\n      errorDiv.id = 'import-error';\n      errorDiv.className = 'error-message hidden';\n      dropZone.parentNode.insertBefore(errorDiv, dropZone.nextSibling);\n    }\n\n    // Prévenir les comportements par défaut du navigateur\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(function (eventName) {\n      dropZone.addEventListener(eventName, function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n    });\n\n    // Ajouter/retirer la classe active pendant le drag\n    ['dragenter', 'dragover'].forEach(function (eventName) {\n      dropZone.addEventListener(eventName, function () {\n        return dropZone.classList.add('active');\n      });\n    });\n    ['dragleave', 'drop'].forEach(function (eventName) {\n      dropZone.addEventListener(eventName, function () {\n        return dropZone.classList.remove('active');\n      });\n    });\n\n    // Gérer le drop\n    dropZone.addEventListener('drop', function (e) {\n      return _this.processImportedFiles(e.dataTransfer.files);\n    });\n\n    // Gérer le clic sur l'input file\n    fileInput.addEventListener('change', function () {\n      return _this.processImportedFiles(fileInput.files);\n    });\n  },\n  /**\n   * Traite les fichiers importés\n   */\n  processImportedFiles: function () {\n    var _processImportedFiles = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(files) {\n      var importedBars, addedIds, fileInput, _t;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            if (!(files.length === 0)) {\n              _context.n = 1;\n              break;\n            }\n            return _context.a(2);\n          case 1:\n            _utils_js__WEBPACK_IMPORTED_MODULE_0__.UIUtils.showLoadingOverlay();\n            this.hideError();\n            _context.p = 2;\n            _context.n = 3;\n            return this.importManager.processMultipleFiles(files);\n          case 3:\n            importedBars = _context.v;\n            if (importedBars && importedBars.length > 0) {\n              // Ajouter les barres au DataManager\n              addedIds = this.dataManager.addBars(importedBars);\n              if (addedIds.length > 0) {\n                // Rester sur la même section et montrer un message de succès\n                this.showNotification(\"\".concat(addedIds.length, \" barres import\\xE9es avec succ\\xE8s.\"), 'success');\n\n                // CORRIGÉ : Rafraîchir l'affichage des données\n                if (this.refreshDataDisplay) {\n                  this.refreshDataDisplay();\n                }\n\n                // Faire défiler jusqu'à la zone d'édition après un court délai\n                setTimeout(function () {\n                  var editPanel = document.querySelector('.panels-container');\n                  if (editPanel) {\n                    editPanel.scrollIntoView({\n                      behavior: 'smooth',\n                      block: 'start'\n                    });\n                  }\n                }, 300);\n              } else {\n                this.showError('Aucune nouvelle pièce ajoutée.');\n              }\n            } else {\n              this.showError('Aucune pièce valide trouvée dans les fichiers.');\n            }\n            _context.n = 5;\n            break;\n          case 4:\n            _context.p = 4;\n            _t = _context.v;\n            console.error('Import error:', _t);\n            this.showError(\"Erreur d'import: \".concat(_t.message));\n          case 5:\n            _context.p = 5;\n            _utils_js__WEBPACK_IMPORTED_MODULE_0__.UIUtils.hideLoadingOverlay();\n\n            // Réinitialiser l'élément input file pour permettre la réimportation du même fichier\n            fileInput = document.getElementById('nc2-files-input');\n            if (fileInput) {\n              fileInput.value = '';\n            }\n            return _context.f(5);\n          case 6:\n            return _context.a(2);\n        }\n      }, _callee, this, [[2, 4, 5, 6]]);\n    }));\n    function processImportedFiles(_x) {\n      return _processImportedFiles.apply(this, arguments);\n    }\n    return processImportedFiles;\n  }(),\n  /**\n   * MODIFIÉ: Traite les fichiers sans notifications de succès\n   */\n  processFiles: function () {\n    var _processFiles = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(files) {\n      var showLoadingOverlay, hideLoadingOverlay, results, addedBars, errorMsg, _t2;\n      return _regenerator().w(function (_context2) {\n        while (1) switch (_context2.n) {\n          case 0:\n            if (!(!files || files.length === 0)) {\n              _context2.n = 1;\n              break;\n            }\n            return _context2.a(2);\n          case 1:\n            showLoadingOverlay = this.showLoadingOverlay || function () {};\n            hideLoadingOverlay = this.hideLoadingOverlay || function () {};\n            showLoadingOverlay();\n            _context2.p = 2;\n            _context2.n = 3;\n            return this.importManager.processFiles(files);\n          case 3:\n            results = _context2.v;\n            if (results.success.length > 0) {\n              addedBars = this.dataManager.addBars(results.bars);\n              if (addedBars.length > 0) {\n                if (this.refreshDataDisplay) {\n                  this.refreshDataDisplay();\n                }\n                // SUPPRIMÉ: Notification de succès\n              }\n            }\n\n            // Afficher seulement les erreurs\n            if (results.errors.length > 0) {\n              errorMsg = results.errors.length === 1 ? results.errors[0] : \"\".concat(results.errors.length, \" erreurs d'import\");\n              this.showNotification(errorMsg, 'error');\n            }\n            _context2.n = 5;\n            break;\n          case 4:\n            _context2.p = 4;\n            _t2 = _context2.v;\n            console.error('Erreur lors du traitement des fichiers:', _t2);\n            this.showNotification('Erreur lors de l\\'import', 'error');\n          case 5:\n            _context2.p = 5;\n            hideLoadingOverlay();\n            return _context2.f(5);\n          case 6:\n            return _context2.a(2);\n        }\n      }, _callee2, this, [[2, 4, 5, 6]]);\n    }));\n    function processFiles(_x2) {\n      return _processFiles.apply(this, arguments);\n    }\n    return processFiles;\n  }(),\n  /**\n   * Affiche une erreur d'import\n   */\n  showError: function showError(message) {\n    var errorDiv = document.getElementById('import-error');\n    if (errorDiv) {\n      errorDiv.textContent = message;\n      errorDiv.classList.remove('hidden');\n    }\n  },\n  /**\n   * Masque l'erreur d'import\n   */\n  hideError: function hideError() {\n    var errorDiv = document.getElementById('import-error');\n    if (errorDiv) {\n      errorDiv.classList.add('hidden');\n    }\n  }\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/ui/import-handler.js?");

/***/ }),

/***/ "./src/js/ui/notification-service.js":
/*!*******************************************!*\
  !*** ./src/js/ui/notification-service.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NotificationService: () => (/* binding */ NotificationService)\n/* harmony export */ });\n/**\n * Service de notification\n * Gère l'affichage des notifications à l'utilisateur\n */\nvar NotificationService = {\n  /**\n   * Initialise le service de notification\n   */\n  init: function init() {\n    this.createNotificationContainer();\n  },\n  /**\n   * Crée le conteneur de notifications\n   */\n  createNotificationContainer: function createNotificationContainer() {\n    var container = document.getElementById('notification-container');\n    if (!container) {\n      container = document.createElement('div');\n      container.id = 'notification-container';\n      container.className = 'notification-container';\n      container.style.cssText = \"\\n        position: fixed;\\n        top: 20px;\\n        right: 20px;\\n        z-index: 9999;\\n        max-width: 400px;\\n        pointer-events: none;\\n      \";\n      document.body.appendChild(container);\n    }\n  },\n  /**\n   * Obtient l'icône pour chaque type\n   */\n  getIcon: function getIcon(type) {\n    // Pas d'icônes, retourner une chaîne vide\n    return '';\n  },\n  /**\n   * Affiche une notification\n   * @param {string} message - Message à afficher\n   * @param {string} type - Type de notification ('success', 'warning', 'error', 'info')\n   */\n  show: function show(message) {\n    var _this = this;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n    // Créer la notification\n    var notification = document.createElement('div');\n    notification.className = \"notification notification-\".concat(type);\n    notification.style.cssText = \"\\n      background: \".concat(this.getBackgroundColor(type), \";\\n      color: \").concat(this.getTextColor(type), \";\\n      border: 1px solid \").concat(this.getBorderColor(type), \";\\n      border-radius: 6px;\\n      padding: 12px 16px;\\n      margin-bottom: 8px;\\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\\n      pointer-events: auto;\\n      opacity: 0;\\n      transform: translateX(100%);\\n      transition: all 0.3s ease;\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      font-size: 14px;\\n      line-height: 1.4;\\n    \");\n\n    // Ajouter le message (sans icône)\n    var content = document.createElement('div');\n    content.style.flex = '1';\n    content.textContent = message; // Utiliser textContent au lieu de innerHTML\n\n    // Bouton de fermeture\n    var closeBtn = document.createElement('button');\n    closeBtn.innerHTML = '×';\n    closeBtn.style.cssText = \"\\n      background: none;\\n      border: none;\\n      color: inherit;\\n      font-size: 18px;\\n      cursor: pointer;\\n      margin-left: 12px;\\n      padding: 0;\\n      line-height: 1;\\n    \";\n    notification.appendChild(content);\n    notification.appendChild(closeBtn);\n\n    // Ajouter au conteneur\n    var container = document.getElementById('notification-container');\n    container.appendChild(notification);\n\n    // Animation d'entrée\n    setTimeout(function () {\n      notification.style.opacity = '1';\n      notification.style.transform = 'translateX(0)';\n    }, 10);\n\n    // Fermeture automatique et manuelle\n    var autoRemove = setTimeout(function () {\n      _this.removeNotification(notification);\n    }, type === 'error' ? 6000 : 1000); // Réduit les durées\n\n    closeBtn.addEventListener('click', function () {\n      clearTimeout(autoRemove);\n      _this.removeNotification(notification);\n    });\n\n    // Log console pour les erreurs\n    if (type === 'error') {\n      console.error(message);\n    }\n  },\n  /**\n   * Supprime une notification avec animation\n   */\n  removeNotification: function removeNotification(notification) {\n    notification.style.opacity = '0';\n    notification.style.transform = 'translateX(100%)';\n    setTimeout(function () {\n      if (notification.parentNode) {\n        notification.parentNode.removeChild(notification);\n      }\n    }, 300);\n  },\n  /**\n   * Obtient la couleur de fond pour chaque type\n   */\n  getBackgroundColor: function getBackgroundColor(type) {\n    var colors = {\n      success: '#d4edda',\n      warning: '#fff3cd',\n      error: '#f8d7da',\n      info: '#d1ecf1'\n    };\n    return colors[type] || colors.info;\n  },\n  /**\n   * Obtient la couleur du texte pour chaque type\n   */\n  getTextColor: function getTextColor(type) {\n    var colors = {\n      success: '#155724',\n      warning: '#856404',\n      error: '#721c24',\n      info: '#0c5460'\n    };\n    return colors[type] || colors.info;\n  },\n  /**\n   * Obtient la couleur de bordure pour chaque type\n   */\n  getBorderColor: function getBorderColor(type) {\n    var colors = {\n      success: '#c3e6cb',\n      warning: '#ffeeba',\n      error: '#f5c6cb',\n      info: '#bee5eb'\n    };\n    return colors[type] || colors.info;\n  }\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/ui/notification-service.js?");

/***/ }),

/***/ "./src/js/ui/results-handler.js":
/*!**************************************!*\
  !*** ./src/js/ui/results-handler.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResultsHandler: () => (/* binding */ ResultsHandler)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/js/ui/utils.js\");\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n/**\n * Gestionnaire de la section résultats\n * Gère le rendu des résultats et la génération des fichiers PGM\n */\n\nvar ResultsHandler = {\n  // Dépendances\n  pgmGenerator: null,\n  dataManager: null,\n  uiController: null,\n  // Callbacks\n  showNotification: null,\n  // État pour gérer les modals\n  currentModal: null,\n  /**\n   * Initialise le gestionnaire de résultats\n   */\n  init: function init(options) {\n    this.pgmGenerator = options.pgmGenerator;\n    this.dataManager = options.dataManager;\n    this.uiController = options.uiController;\n    this.showNotification = options.showNotification;\n  },\n  /**\n   * Génère les aperçus des fichiers PGM à partir des objets PGM\n   */\n  generatePgmPreviews: function generatePgmPreviews() {\n    var _this = this;\n    try {\n      var container = document.getElementById('pgm-files-list');\n      if (!container) {\n        console.warn('Container pgm-files-list non trouvé');\n        return;\n      }\n      var pgmObjects = this.uiController.getCurrentPgmObjects();\n      if (!pgmObjects || pgmObjects.length === 0) {\n        container.innerHTML = '<p class=\"info-text\">Aucun fichier PGM à générer.</p>';\n        return;\n      }\n      var html = \"<div class=\\\"pgm-preview-header\\\">\\n        <h3>Fichiers PGM \\xE0 g\\xE9n\\xE9rer</h3>\\n        <button id=\\\"download-all-pgm-btn\\\" class=\\\"btn btn-primary\\\">\\n          T\\xE9l\\xE9charger tous les PGM (ZIP)\\n        </button>\\n      </div>\";\n\n      // Générer l'aperçu pour chaque objet PGM\n      pgmObjects.forEach(function (pgmObject, index) {\n        var fileName = _this.pgmGenerator.generatePgmFileName(pgmObject);\n        html += \"\\n          <div class=\\\"pgm-file-item\\\" data-pgm-index=\\\"\".concat(index, \"\\\">\\n            <div class=\\\"pgm-file-header\\\">\\n              <span class=\\\"pgm-file-name\\\">\").concat(fileName, \"</span>\\n              <div class=\\\"pgm-file-actions\\\">\\n                <button class=\\\"btn btn-sm btn-outline info-pgm-btn\\\" \\n                        data-pgm-index=\\\"\").concat(index, \"\\\">\\n                  D\\xE9tails\\n                </button>\\n                <button class=\\\"btn btn-sm btn-primary download-pgm-btn\\\" \\n                        data-pgm-index=\\\"\").concat(index, \"\\\">\\n                  T\\xE9l\\xE9charger\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        \");\n      });\n      container.innerHTML = html;\n\n      // Configurer les événements\n      this.setupPgmPreviewEvents();\n      console.log(\"\".concat(pgmObjects.length, \" aper\\xE7us PGM g\\xE9n\\xE9r\\xE9s\"));\n    } catch (error) {\n      console.error('Erreur lors de la génération des aperçus PGM:', error);\n      var _container = document.getElementById('pgm-files-list');\n      if (_container) {\n        _container.innerHTML = '<p class=\"error-text\">Erreur lors de la génération des aperçus PGM.</p>';\n      }\n    }\n  },\n  /**\n   * Configure les événements pour les aperçus PGM\n   */\n  setupPgmPreviewEvents: function setupPgmPreviewEvents() {\n    var _this2 = this;\n    // Bouton télécharger tout\n    var downloadAllBtn = document.getElementById('download-all-pgm-btn');\n    if (downloadAllBtn) {\n      downloadAllBtn.addEventListener('click', function () {\n        _this2.downloadAllPgm();\n      });\n    }\n\n    // Boutons de téléchargement individuel\n    document.querySelectorAll('.download-pgm-btn').forEach(function (button) {\n      button.addEventListener('click', function (e) {\n        var pgmIndex = parseInt(e.target.getAttribute('data-pgm-index'), 10);\n        _this2.downloadSinglePgm(pgmIndex);\n      });\n    });\n\n    // Boutons d'informations\n    document.querySelectorAll('.info-pgm-btn').forEach(function (button) {\n      button.addEventListener('click', function (e) {\n        var pgmIndex = parseInt(e.target.getAttribute('data-pgm-index'), 10);\n        _this2.showPgmInfo(pgmIndex);\n      });\n    });\n  },\n  /**\n   * Télécharge un fichier PGM individuel\n   */\n  downloadSinglePgm: function downloadSinglePgm(pgmIndex) {\n    try {\n      var pgmObjects = this.uiController.getCurrentPgmObjects();\n      if (!pgmObjects || !pgmObjects[pgmIndex]) {\n        this.showNotification('Objet PGM introuvable', 'error');\n        return;\n      }\n      var pgmObject = pgmObjects[pgmIndex];\n      var pgmContent = this.pgmGenerator.generatePgmFromObject(pgmObject, this.dataManager);\n      var fileName = this.pgmGenerator.generatePgmFileName(pgmObject);\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__.UIUtils.downloadFile(pgmContent, fileName, 'text/plain');\n    } catch (error) {\n      console.error('Erreur lors du téléchargement PGM:', error);\n      this.showNotification(\"Erreur lors du t\\xE9l\\xE9chargement: \".concat(error.message), 'error');\n    }\n  },\n  /**\n   * Affiche les informations détaillées du PGM\n   */\n  showPgmInfo: function showPgmInfo(pgmIndex) {\n    try {\n      // Fermer le modal existant s'il y en a un\n      this.closePgmInfoModal();\n      var pgmObjects = this.uiController.getCurrentPgmObjects();\n      if (!pgmObjects || !pgmObjects[pgmIndex]) {\n        this.showNotification('Objet PGM introuvable', 'error');\n        return;\n      }\n      var pgmObject = pgmObjects[pgmIndex];\n      var fileName = this.pgmGenerator.generatePgmFileName(pgmObject);\n      this.showPgmInfoModal(fileName, pgmObject);\n    } catch (error) {\n      console.error('Erreur lors de l\\'affichage des infos PGM:', error);\n      this.showNotification(\"Erreur lors de l'affichage: \".concat(error.message), 'error');\n    }\n  },\n  /**\n   * Ferme le modal PGM s'il existe\n   */\n  closePgmInfoModal: function closePgmInfoModal() {\n    if (this.currentModal && this.currentModal.parentNode) {\n      this.currentModal.parentNode.removeChild(this.currentModal);\n      this.currentModal = null;\n    }\n\n    // Nettoyer tous les modals PGM existants (au cas où)\n    var existingModals = document.querySelectorAll('.pgm-info-modal');\n    existingModals.forEach(function (modal) {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n    });\n  },\n  /**\n   * Formate l'orientation pour l'affichage\n   */\n  formatOrientation: function formatOrientation(orientation) {\n    switch (orientation) {\n      case 'a-plat':\n        return 'À plat';\n      case 'debout':\n        return 'Debout';\n      default:\n        return orientation;\n    }\n  },\n  /**\n   * Formate la longueur en mètres\n   */\n  formatLengthInMeters: function formatLengthInMeters(lengthInCm) {\n    var meters = lengthInCm / 100;\n    return meters % 1 === 0 ? \"\".concat(meters, \" m\") : \"\".concat(meters.toFixed(2), \" m\");\n  },\n  /**\n   * Affiche une modal avec les informations du PGM\n   */\n  showPgmInfoModal: function showPgmInfoModal(fileName, pgmObject) {\n    var _pieces$,\n      _firstPiece$f4cData,\n      _firstPiece$profile,\n      _firstPiece$f4cData2,\n      _this3 = this;\n    var motherBar = pgmObject.motherBar;\n    var pieces = pgmObject.pieces;\n    var firstPiece = (_pieces$ = pieces[0]) === null || _pieces$ === void 0 ? void 0 : _pieces$.pieceReference;\n\n    // Récupérer les valeurs B021 et B035\n    var b021 = (firstPiece === null || firstPiece === void 0 || (_firstPiece$f4cData = firstPiece.f4cData) === null || _firstPiece$f4cData === void 0 ? void 0 : _firstPiece$f4cData.B021) || (firstPiece === null || firstPiece === void 0 || (_firstPiece$profile = firstPiece.profile) === null || _firstPiece$profile === void 0 ? void 0 : _firstPiece$profile.substring(0, 3)) || 'N/A';\n    var b035 = (firstPiece === null || firstPiece === void 0 || (_firstPiece$f4cData2 = firstPiece.f4cData) === null || _firstPiece$f4cData2 === void 0 ? void 0 : _firstPiece$f4cData2.B035) || '10000';\n\n    // Créer la modal en utilisant les classes existantes\n    var modal = document.createElement('div');\n    modal.className = 'modal'; // Utilise la classe existante\n    modal.innerHTML = \"\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h3>D\\xE9tails du PGM: \".concat(fileName, \"</h3>\\n          <button class=\\\"close-modal\\\" title=\\\"Fermer\\\">&times;</button>\\n        </div>\\n        \\n        <div class=\\\"modal-body\\\" style=\\\"max-height: 70vh; overflow-y: auto;\\\">\\n          <!-- En-t\\xEAte simplifi\\xE9 -->\\n          <div style=\\\"display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 1rem; margin-bottom: 2rem; padding: 1rem; background: var(--bg-secondary); border-radius: var(--radius);\\\">\\n            <div style=\\\"text-align: center;\\\">\\n              <div style=\\\"font-weight: 500; color: var(--text-secondary); margin-bottom: 0.5rem;\\\">Profil</div>\\n              <div style=\\\"font-weight: 600; color: var(--text-primary);\\\">\").concat(motherBar.profile, \"</div>\\n            </div>\\n            <div style=\\\"text-align: center;\\\">\\n              <div style=\\\"font-weight: 500; color: var(--text-secondary); margin-bottom: 0.5rem;\\\">Orientation</div>\\n              <div style=\\\"font-weight: 600; color: var(--text-primary);\\\">\").concat(this.formatOrientation(motherBar.orientation), \"</div>\\n            </div>\\n            <div style=\\\"text-align: center;\\\">\\n              <div style=\\\"font-weight: 500; color: var(--text-secondary); margin-bottom: 0.5rem;\\\">Longueur</div>\\n              <div style=\\\"font-weight: 600; color: var(--text-primary);\\\">\").concat(this.formatLengthInMeters(motherBar.length), \"</div>\\n            </div>\\n          </div>\\n          \\n          <!-- Param\\xE8tres BODY -->\\n          <div style=\\\"margin-bottom: 2rem;\\\">\\n            <h4 style=\\\"margin: 0 0 1rem 0; font-size: 1rem; font-weight: 600; color: var(--text-primary);\\\">Param\\xE8tres BODY:</h4>\\n            <div style=\\\"display: flex; gap: 1rem; flex-wrap: wrap;\\\">\\n              <span style=\\\"background: var(--bg-tertiary); padding: 0.5rem 0.75rem; border-radius: var(--radius-sm); font-family: 'Courier New', monospace; font-size: 0.875rem; color: var(--text-primary); border: 1px solid var(--border-color);\\\">B021: \").concat(b021, \"</span>\\n              <span style=\\\"background: var(--bg-tertiary); padding: 0.5rem 0.75rem; border-radius: var(--radius-sm); font-family: 'Courier New', monospace; font-size: 0.875rem; color: var(--text-primary); border: 1px solid var(--border-color);\\\">B035: \").concat(b035, \"</span>\\n            </div>\\n          </div>\\n          \\n          <!-- Informations de performance -->\\n          <div style=\\\"display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 2rem;\\\">\\n            <div style=\\\"text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: var(--radius);\\\">\\n              <div style=\\\"font-weight: 500; color: var(--text-secondary); margin-bottom: 0.5rem;\\\">Chute</div>\\n              <div style=\\\"font-weight: 600; color: var(--text-primary);\\\">\").concat(motherBar.waste, \" cm</div>\\n            </div>\\n            <div style=\\\"text-align: center; padding: 1rem; background: var(--bg-secondary); border-radius: var(--radius);\\\">\\n              <div style=\\\"font-weight: 500; color: var(--text-secondary); margin-bottom: 0.5rem;\\\">Efficacit\\xE9</div>\\n              <div style=\\\"font-weight: 600; color: var(--text-primary);\\\">\").concat(pgmObject.metadata.efficiency, \"%</div>\\n            </div>\\n          </div>\\n          \\n          <!-- Barres \\xE0 d\\xE9couper -->\\n          <div>\\n            <h4 style=\\\"margin: 0 0 1rem 0; font-size: 1rem; font-weight: 600; color: var(--text-primary);\\\">Barres \\xE0 d\\xE9couper (\").concat(pieces.length, \"):</h4>\\n            \\n            \").concat(pieces.map(function (piece, index) {\n      var _pieceRef$angles, _pieceRef$angles2;\n      var pieceRef = piece.pieceReference;\n      var f4c = pieceRef.f4cData || {};\n\n      // Calculer les valeurs F4C\n      var s051 = f4c.S051 || Math.round(piece.length * 10000).toString();\n      var s052 = '1'; // Quantité par défaut\n      var s053 = '1'; // Quantité par défaut\n      var s054 = f4c.S054 || Math.round((((_pieceRef$angles = pieceRef.angles) === null || _pieceRef$angles === void 0 ? void 0 : _pieceRef$angles[1]) || 90) * 100).toString();\n      var s055 = f4c.S055 || Math.round((((_pieceRef$angles2 = pieceRef.angles) === null || _pieceRef$angles2 === void 0 ? void 0 : _pieceRef$angles2[2]) || 90) * 100).toString();\n      return \"\\n                <div style=\\\"padding: 1rem; border: 1px solid var(--border-color); border-radius: var(--radius); margin-bottom: 1rem; position: relative;\\\">\\n                  <!-- Index align\\xE9 \\xE0 droite -->\\n                  <div style=\\\"position: absolute; top: 0.5rem; right: 1rem; background: var(--primary); color: white; padding: 0.25rem 0.5rem; border-radius: var(--radius-sm); font-size: 0.75rem; font-weight: 600;\\\">\\n                    #\".concat(index + 1, \"\\n                  </div>\\n                  \\n                  <!-- Nom de la pi\\xE8ce -->\\n                  <div style=\\\"font-weight: 500; color: var(--text-primary); margin-bottom: 0.75rem; padding-right: 3rem;\\\">\\n                    \").concat(pieceRef.nom || \"Pi\\xE8ce \".concat(index + 1, \" - \").concat(piece.length, \"cm\"), \"\\n                  </div>\\n                  \\n                  <!-- Codes F4C -->\\n                  <div style=\\\"display: flex; gap: 0.5rem; flex-wrap: wrap;\\\">\\n                    <span style=\\\"background: var(--bg-secondary); padding: 0.25rem 0.5rem; border-radius: var(--radius-sm); font-family: 'Courier New', monospace; font-size: 0.75rem; color: var(--text-secondary); border: 1px solid var(--border-color);\\\">S051: \").concat(s051, \"</span>\\n                    <span style=\\\"background: var(--bg-secondary); padding: 0.25rem 0.5rem; border-radius: var(--radius-sm); font-family: 'Courier New', monospace; font-size: 0.75rem; color: var(--text-secondary); border: 1px solid var(--border-color);\\\">S052: \").concat(s052, \"</span>\\n                    <span style=\\\"background: var(--bg-secondary); padding: 0.25rem 0.5rem; border-radius: var(--radius-sm); font-family: 'Courier New', monospace; font-size: 0.75rem; color: var(--text-secondary); border: 1px solid var(--border-color);\\\">S053: \").concat(s053, \"</span>\\n                    <span style=\\\"background: var(--bg-secondary); padding: 0.25rem 0.5rem; border-radius: var(--radius-sm); font-family: 'Courier New', monospace; font-size: 0.75rem; color: var(--text-secondary); border: 1px solid var(--border-color);\\\">S054: \").concat(s054, \"</span>\\n                    <span style=\\\"background: var(--bg-secondary); padding: 0.25rem 0.5rem; border-radius: var(--radius-sm); font-family: 'Courier New', monospace; font-size: 0.75rem; color: var(--text-secondary); border: 1px solid var(--border-color);\\\">S055: \").concat(s055, \"</span>\\n                  </div>\\n                </div>\\n              \");\n    }).join(''), \"\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"modal-footer\\\">\\n          <button class=\\\"btn btn-secondary close-modal\\\">Fermer</button>\\n          <button class=\\\"btn btn-primary modal-download\\\">T\\xE9l\\xE9charger</button>\\n        </div>\\n      </div>\\n    \");\n\n    // Stocker la référence du modal\n    this.currentModal = modal;\n\n    // Ajouter au DOM\n    document.body.appendChild(modal);\n\n    // Gérer les événements de fermeture\n    modal.querySelectorAll('.close-modal').forEach(function (btn) {\n      btn.addEventListener('click', function () {\n        _this3.closePgmInfoModal();\n      });\n    });\n\n    // Fermer en cliquant sur l'overlay (background du modal)\n    modal.addEventListener('click', function (e) {\n      if (e.target === modal) {\n        _this3.closePgmInfoModal();\n      }\n    });\n\n    // Fermer avec la touche Escape\n    var _handleEscape = function handleEscape(e) {\n      if (e.key === 'Escape') {\n        _this3.closePgmInfoModal();\n        document.removeEventListener('keydown', _handleEscape);\n      }\n    };\n    document.addEventListener('keydown', _handleEscape);\n\n    // Bouton de téléchargement\n    modal.querySelector('.modal-download').addEventListener('click', function () {\n      try {\n        var pgmContent = _this3.pgmGenerator.generatePgmFromObject(pgmObject, _this3.dataManager);\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__.UIUtils.downloadFile(pgmContent, fileName, 'text/plain');\n        _this3.closePgmInfoModal();\n      } catch (error) {\n        console.error('Erreur téléchargement:', error);\n        _this3.showNotification('Erreur lors du téléchargement', 'error');\n      }\n    });\n  },\n  /**\n   * Télécharge tous les fichiers PGM dans un ZIP\n   */\n  downloadAllPgm: function () {\n    var _downloadAllPgm = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var pgmObjects, blob, zipFileName, _t;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            _context.p = 0;\n            _utils_js__WEBPACK_IMPORTED_MODULE_0__.UIUtils.showLoadingOverlay();\n            pgmObjects = this.uiController.getCurrentPgmObjects();\n            if (!(!pgmObjects || pgmObjects.length === 0)) {\n              _context.n = 1;\n              break;\n            }\n            this.showNotification('Aucun objet PGM disponible', 'warning');\n            return _context.a(2);\n          case 1:\n            _context.n = 2;\n            return this.pgmGenerator.generateAllPgmFromObjects(pgmObjects, this.dataManager);\n          case 2:\n            blob = _context.v;\n            zipFileName = \"pgm_files_\".concat(Date.now(), \".zip\");\n            _utils_js__WEBPACK_IMPORTED_MODULE_0__.UIUtils.downloadFile(blob, zipFileName, 'application/zip');\n            _context.n = 4;\n            break;\n          case 3:\n            _context.p = 3;\n            _t = _context.v;\n            console.error('Erreur lors de la génération des fichiers PGM:', _t);\n            this.showNotification(\"Erreur lors de la g\\xE9n\\xE9ration des fichiers PGM: \".concat(_t.message), 'error');\n          case 4:\n            _context.p = 4;\n            _utils_js__WEBPACK_IMPORTED_MODULE_0__.UIUtils.hideLoadingOverlay();\n            return _context.f(4);\n          case 5:\n            return _context.a(2);\n        }\n      }, _callee, this, [[0, 3, 4, 5]]);\n    }));\n    function downloadAllPgm() {\n      return _downloadAllPgm.apply(this, arguments);\n    }\n    return downloadAllPgm;\n  }()\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/ui/results-handler.js?");

/***/ }),

/***/ "./src/js/ui/utils.js":
/*!****************************!*\
  !*** ./src/js/ui/utils.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UIUtils: () => (/* binding */ UIUtils)\n/* harmony export */ });\n/**\n * Utilitaires pour l'interface utilisateur\n */\nvar UIUtils = {\n  /**\n   * Affiche l'overlay de chargement\n   */\n  showLoadingOverlay: function showLoadingOverlay() {\n    var overlay = document.getElementById('loading-overlay');\n    if (overlay) {\n      overlay.classList.remove('hidden');\n    }\n  },\n  /**\n   * Masque l'overlay de chargement\n   */\n  hideLoadingOverlay: function hideLoadingOverlay() {\n    var overlay = document.getElementById('loading-overlay');\n    if (overlay) {\n      overlay.classList.add('hidden');\n    }\n  },\n  /**\n   * Télécharge un fichier\n   * @param {Blob|string} content - Contenu du fichier\n   * @param {string} filename - Nom du fichier\n   * @param {string} type - Type MIME\n   */\n  downloadFile: function downloadFile(content, filename, type) {\n    var blob = content instanceof Blob ? content : new Blob([content], {\n      type: type\n    });\n    var url = URL.createObjectURL(blob);\n    var a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }\n};\n\n//# sourceURL=webpack://parser-optimizer/./src/js/ui/utils.js?");

/***/ }),

/***/ "?2632":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://parser-optimizer/fs_(ignored)?");

/***/ }),

/***/ "?2c27":
/*!*******************************!*\
  !*** child_process (ignored) ***!
  \*******************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://parser-optimizer/child_process_(ignored)?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/index.js");
/******/ 	
/******/ })()
;